/*! For license information please see LICENSES */
(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1171:function(e,t,n){"use strict";n.d(t,"dc",(function(){return He})),n.d(t,"Vc",(function(){return se.a})),n.d(t,"Wc",(function(){return se.b})),n.d(t,"bf",(function(){return Ke.a})),n.d(t,"nf",(function(){return Ke.b})),n.d(t,"gd",(function(){return qe.a})),n.d(t,"hd",(function(){return qe.b})),n.d(t,"id",(function(){return qe.c})),n.d(t,"jd",(function(){return qe.d})),n.d(t,"kd",(function(){return qe.e})),n.d(t,"ld",(function(){return qe.f})),n.d(t,"md",(function(){return qe.g})),n.d(t,"pd",(function(){return qe.h})),n.d(t,"qd",(function(){return qe.i})),n.d(t,"rd",(function(){return qe.j})),n.d(t,"td",(function(){return qe.k})),n.d(t,"ud",(function(){return qe.l})),n.d(t,"vd",(function(){return qe.m})),n.d(t,"wd",(function(){return qe.n})),n.d(t,"xd",(function(){return qe.o})),n.d(t,"yd",(function(){return qe.p})),n.d(t,"zd",(function(){return qe.q})),n.d(t,"Ad",(function(){return qe.r})),n.d(t,"Bd",(function(){return qe.s})),n.d(t,"Cd",(function(){return qe.t})),n.d(t,"Dd",(function(){return qe.u})),n.d(t,"Ed",(function(){return qe.v})),n.d(t,"Fd",(function(){return qe.w})),n.d(t,"Gd",(function(){return qe.x})),n.d(t,"Hd",(function(){return qe.y})),n.d(t,"Kd",(function(){return qe.z})),n.d(t,"Md",(function(){return qe.B})),n.d(t,"Pd",(function(){return qe.C})),n.d(t,"Qd",(function(){return qe.D})),n.d(t,"Rd",(function(){return qe.E})),n.d(t,"Sd",(function(){return qe.F})),n.d(t,"Td",(function(){return qe.G})),n.d(t,"Vd",(function(){return qe.I})),n.d(t,"Wd",(function(){return qe.J})),n.d(t,"Xd",(function(){return qe.K})),n.d(t,"ce",(function(){return qe.M})),n.d(t,"ee",(function(){return qe.O})),n.d(t,"fe",(function(){return qe.P})),n.d(t,"ge",(function(){return qe.Q})),n.d(t,"he",(function(){return qe.R})),n.d(t,"ie",(function(){return qe.S})),n.d(t,"je",(function(){return qe.T})),n.d(t,"ke",(function(){return qe.U})),n.d(t,"le",(function(){return qe.V})),n.d(t,"ne",(function(){return qe.W})),n.d(t,"oe",(function(){return qe.X})),n.d(t,"pe",(function(){return qe.Y})),n.d(t,"qe",(function(){return qe.Z})),n.d(t,"re",(function(){return qe.ab})),n.d(t,"te",(function(){return qe.bb})),n.d(t,"ue",(function(){return qe.cb})),n.d(t,"ve",(function(){return qe.db})),n.d(t,"we",(function(){return qe.eb})),n.d(t,"xe",(function(){return qe.fb})),n.d(t,"ye",(function(){return qe.gb})),n.d(t,"ze",(function(){return qe.hb})),n.d(t,"Ae",(function(){return qe.ib})),n.d(t,"Be",(function(){return qe.jb})),n.d(t,"Ee",(function(){return qe.kb})),n.d(t,"Fe",(function(){return qe.lb})),n.d(t,"Ge",(function(){return qe.mb})),n.d(t,"He",(function(){return qe.nb})),n.d(t,"Ie",(function(){return qe.ob})),n.d(t,"Je",(function(){return qe.pb})),n.d(t,"Me",(function(){return qe.qb})),n.d(t,"Ne",(function(){return qe.rb})),n.d(t,"Oe",(function(){return qe.sb})),n.d(t,"Pe",(function(){return qe.tb})),n.d(t,"Qe",(function(){return qe.ub})),n.d(t,"Re",(function(){return qe.vb})),n.d(t,"Te",(function(){return qe.wb})),n.d(t,"Ue",(function(){return qe.xb})),n.d(t,"Ve",(function(){return qe.zb})),n.d(t,"We",(function(){return qe.Ab})),n.d(t,"Xe",(function(){return qe.Bb})),n.d(t,"Ye",(function(){return qe.Cb})),n.d(t,"Ze",(function(){return qe.Db})),n.d(t,"af",(function(){return qe.Eb})),n.d(t,"cf",(function(){return qe.Fb})),n.d(t,"df",(function(){return qe.Gb})),n.d(t,"ef",(function(){return qe.Hb})),n.d(t,"ff",(function(){return qe.Ib})),n.d(t,"if",(function(){return qe.Jb})),n.d(t,"lf",(function(){return qe.Lb})),n.d(t,"mf",(function(){return qe.Mb})),n.d(t,"pf",(function(){return qe.Nb})),n.d(t,"sf",(function(){return qe.Ob})),n.d(t,"tf",(function(){return qe.Pb})),n.d(t,"uf",(function(){return qe.Qb})),n.d(t,"kf",(function(){return qe.Kb})),n.d(t,"Ld",(function(){return qe.A})),n.d(t,"Yd",(function(){return qe.L})),n.d(t,"de",(function(){return qe.N})),n.d(t,"Ud",(function(){return qe.H})),n.d(t,"jf",(function(){return ft})),n.d(t,"Nd",(function(){return Ve.c})),n.d(t,"me",(function(){return Ve.e})),n.d(t,"hf",(function(){return Ve.h})),n.d(t,"Jd",(function(){return Ve.b})),n.d(t,"ae",(function(){return Ve.d})),n.d(t,"Le",(function(){return Ve.g})),n.d(t,"Ce",(function(){return Ve.f})),n.d(t,"nd",(function(){return Ve.a})),n.d(t,"De",(function(){return je.e})),n.d(t,"qf",(function(){return Ue.b})),n.d(t,"Od",(function(){return m.b})),n.d(t,"rf",(function(){return We})),n.d(t,"se",(function(){return mt.a})),n.d(t,"sd",(function(){return o})),n.d(t,"Zd",(function(){return r})),n.d(t,"Ke",(function(){return c})),n.d(t,"of",(function(){return Be})),n.d(t,"od",(function(){return d})),n.d(t,"gf",(function(){return Pe})),n.d(t,"Se",(function(){return _e})),n.d(t,"Id",(function(){return ln})),n.d(t,"be",(function(){return h})),n.d(t,"wb",(function(){return pn.b})),n.d(t,"L",(function(){return pn.a})),n.d(t,"a",(function(){return Ne.a})),n.d(t,"b",(function(){return Ne.b})),n.d(t,"c",(function(){return Ne.c})),n.d(t,"d",(function(){return Ne.d})),n.d(t,"e",(function(){return Ne.e})),n.d(t,"f",(function(){return Ne.f})),n.d(t,"g",(function(){return Ne.g})),n.d(t,"h",(function(){return Ne.h})),n.d(t,"i",(function(){return Ne.i})),n.d(t,"j",(function(){return Ne.j})),n.d(t,"k",(function(){return Ne.k})),n.d(t,"l",(function(){return Ne.l})),n.d(t,"n",(function(){return Ne.n})),n.d(t,"m",(function(){return Ne.m})),n.d(t,"o",(function(){return Ne.o})),n.d(t,"r",(function(){return Ne.r})),n.d(t,"p",(function(){return Ne.p})),n.d(t,"q",(function(){return Ne.q})),n.d(t,"s",(function(){return Ne.s})),n.d(t,"t",(function(){return Ne.t})),n.d(t,"u",(function(){return Ne.u})),n.d(t,"v",(function(){return Ne.w})),n.d(t,"w",(function(){return Ne.x})),n.d(t,"x",(function(){return Ne.y})),n.d(t,"y",(function(){return Ne.z})),n.d(t,"z",(function(){return Ne.A})),n.d(t,"A",(function(){return Ne.B})),n.d(t,"B",(function(){return Ne.C})),n.d(t,"C",(function(){return Ne.D})),n.d(t,"D",(function(){return Ne.E})),n.d(t,"E",(function(){return Ne.F})),n.d(t,"F",(function(){return Ne.G})),n.d(t,"G",(function(){return Ne.H})),n.d(t,"H",(function(){return Ne.I})),n.d(t,"I",(function(){return Ne.J})),n.d(t,"K",(function(){return Ne.L})),n.d(t,"J",(function(){return Ne.K})),n.d(t,"M",(function(){return Ne.M})),n.d(t,"N",(function(){return Ne.N})),n.d(t,"O",(function(){return Ne.O})),n.d(t,"P",(function(){return Ne.P})),n.d(t,"Q",(function(){return Ne.Q})),n.d(t,"R",(function(){return Ne.R})),n.d(t,"S",(function(){return Ne.S})),n.d(t,"U",(function(){return Ne.U})),n.d(t,"T",(function(){return Ne.T})),n.d(t,"lc",(function(){return Ne.kc})),n.d(t,"V",(function(){return Ne.V})),n.d(t,"W",(function(){return Ne.W})),n.d(t,"X",(function(){return Ne.X})),n.d(t,"Z",(function(){return Ne.Z})),n.d(t,"Y",(function(){return Ne.Y})),n.d(t,"ab",(function(){return Ne.ab})),n.d(t,"bb",(function(){return Ne.bb})),n.d(t,"cb",(function(){return Ne.cb})),n.d(t,"db",(function(){return Ne.db})),n.d(t,"eb",(function(){return Ne.eb})),n.d(t,"fb",(function(){return Ne.fb})),n.d(t,"gb",(function(){return Ne.gb})),n.d(t,"hb",(function(){return Ne.hb})),n.d(t,"jb",(function(){return Ne.jb})),n.d(t,"nb",(function(){return Ne.nb})),n.d(t,"mb",(function(){return Ne.mb})),n.d(t,"ob",(function(){return Ne.ob})),n.d(t,"pb",(function(){return Ne.pb})),n.d(t,"rb",(function(){return Ne.rb})),n.d(t,"qb",(function(){return Ne.qb})),n.d(t,"sb",(function(){return Ne.sb})),n.d(t,"tb",(function(){return Ne.tb})),n.d(t,"ub",(function(){return Ne.ub})),n.d(t,"vb",(function(){return Ne.vb})),n.d(t,"zb",(function(){return Ne.yb})),n.d(t,"Ab",(function(){return Ne.zb})),n.d(t,"Bb",(function(){return Ne.Ab})),n.d(t,"Cb",(function(){return Ne.Bb})),n.d(t,"Db",(function(){return Ne.Cb})),n.d(t,"Eb",(function(){return Ne.Db})),n.d(t,"Fb",(function(){return Ne.Fb})),n.d(t,"Gb",(function(){return Ne.Gb})),n.d(t,"Hb",(function(){return Ne.Hb})),n.d(t,"xb",(function(){return Ne.wb})),n.d(t,"yb",(function(){return Ne.xb})),n.d(t,"Ib",(function(){return Ne.Ib})),n.d(t,"Ob",(function(){return Ne.Ob})),n.d(t,"Jb",(function(){return Ne.Jb})),n.d(t,"Mb",(function(){return Ne.Mb})),n.d(t,"Kb",(function(){return Ne.Kb})),n.d(t,"Lb",(function(){return Ne.Lb})),n.d(t,"Nb",(function(){return Ne.Nb})),n.d(t,"Pb",(function(){return Ne.Pb})),n.d(t,"Qb",(function(){return Ne.Qb})),n.d(t,"Rb",(function(){return Ne.Rb})),n.d(t,"Sb",(function(){return Ne.Sb})),n.d(t,"Tb",(function(){return Ne.Tb})),n.d(t,"Ub",(function(){return Ne.Ub})),n.d(t,"Vb",(function(){return Ne.Vb})),n.d(t,"Wb",(function(){return Ne.Wb})),n.d(t,"ac",(function(){return Ne.ac})),n.d(t,"Xb",(function(){return Ne.Xb})),n.d(t,"Yb",(function(){return Ne.Yb})),n.d(t,"Zb",(function(){return Ne.Zb})),n.d(t,"cc",(function(){return Ne.cc})),n.d(t,"bc",(function(){return Ne.bc})),n.d(t,"ec",(function(){return Ne.dc})),n.d(t,"fc",(function(){return Ne.ec})),n.d(t,"gc",(function(){return Ne.fc})),n.d(t,"hc",(function(){return Ne.gc})),n.d(t,"ic",(function(){return Ne.hc})),n.d(t,"jc",(function(){return Ne.ic})),n.d(t,"kc",(function(){return Ne.jc})),n.d(t,"mc",(function(){return Ne.lc})),n.d(t,"nc",(function(){return Ne.mc})),n.d(t,"pc",(function(){return Ne.oc})),n.d(t,"sc",(function(){return Ne.rc})),n.d(t,"tc",(function(){return Ne.sc})),n.d(t,"qc",(function(){return Ne.pc})),n.d(t,"rc",(function(){return Ne.qc})),n.d(t,"oc",(function(){return Ne.nc})),n.d(t,"uc",(function(){return Ne.tc})),n.d(t,"wc",(function(){return Ne.vc})),n.d(t,"xc",(function(){return Ne.wc})),n.d(t,"yc",(function(){return Ne.xc})),n.d(t,"zc",(function(){return Ne.yc})),n.d(t,"Ac",(function(){return Ne.zc})),n.d(t,"Fc",(function(){return Ne.Ec})),n.d(t,"Dc",(function(){return Ne.Cc})),n.d(t,"Ec",(function(){return Ne.Dc})),n.d(t,"Cc",(function(){return Ne.Bc})),n.d(t,"Bc",(function(){return Ne.Ac})),n.d(t,"Hc",(function(){return Ne.Gc})),n.d(t,"Mc",(function(){return Ne.Lc})),n.d(t,"Sc",(function(){return Ne.Rc})),n.d(t,"Ic",(function(){return Ne.Hc})),n.d(t,"Lc",(function(){return Ne.Kc})),n.d(t,"Gc",(function(){return Ne.Fc})),n.d(t,"Jc",(function(){return Ne.Ic})),n.d(t,"Kc",(function(){return Ne.Jc})),n.d(t,"Oc",(function(){return Ne.Nc})),n.d(t,"Nc",(function(){return Ne.Mc})),n.d(t,"Qc",(function(){return Ne.Pc})),n.d(t,"Rc",(function(){return Ne.Qc})),n.d(t,"Tc",(function(){return Ne.Sc})),n.d(t,"Uc",(function(){return Ne.Tc})),n.d(t,"Xc",(function(){return Ne.Uc})),n.d(t,"Yc",(function(){return Ne.Vc})),n.d(t,"Zc",(function(){return Ne.Wc})),n.d(t,"ad",(function(){return Ne.Xc})),n.d(t,"bd",(function(){return Ne.Yc})),n.d(t,"cd",(function(){return Ne.Zc})),n.d(t,"dd",(function(){return Ne.ad})),n.d(t,"ed",(function(){return Ne.bd})),n.d(t,"Pc",(function(){return Ne.Oc})),n.d(t,"ib",(function(){return Ne.ib})),n.d(t,"vc",(function(){return Ne.uc})),n.d(t,"fd",(function(){return Ne.cd})),n.d(t,"kb",(function(){return Ne.kb})),n.d(t,"lb",(function(){return Ne.lb}));var r={};n.r(r),n.d(r,"copyModel",(function(){return Z})),n.d(r,"listModels",(function(){return Y})),n.d(r,"moveModel",(function(){return Q})),n.d(r,"removeModel",(function(){return J})),n.d(r,"browserFiles",(function(){return le})),n.d(r,"browserHTTPRequest",(function(){return Oe})),n.d(r,"concatenateArrayBuffers",(function(){return y.d})),n.d(r,"decodeWeights",(function(){return y.e})),n.d(r,"encodeWeights",(function(){return y.f})),n.d(r,"fromMemory",(function(){return ke})),n.d(r,"getLoadHandlers",(function(){return k})),n.d(r,"getModelArtifactsInfoForJSON",(function(){return y.g})),n.d(r,"getSaveHandlers",(function(){return v})),n.d(r,"http",(function(){return xe})),n.d(r,"isHTTPScheme",(function(){return ge})),n.d(r,"loadWeights",(function(){return fe})),n.d(r,"registerLoadRouter",(function(){return w})),n.d(r,"registerSaveRouter",(function(){return O})),n.d(r,"weightsLoaderFactory",(function(){return me})),n.d(r,"withSaveHandler",(function(){return Ie}));var o={};n.r(o),n.d(o,"fromPixelsAsync",(function(){return Re})),n.d(o,"toPixels",(function(){return Fe})),n.d(o,"fromPixels",(function(){return De}));var c={};n.r(c),n.d(c,"Serializable",(function(){return Me})),n.d(c,"SerializationMap",(function(){return Le})),n.d(c,"registerClass",(function(){return ze}));var l={};n.r(l),n.d(l,"segOpComputeOptimalWindowSize",(function(){return an})),n.d(l,"computeOutShape",(function(){return sn})),n.d(l,"collectGatherOpShapeInfo",(function(){return on}));var d={};n.r(d),n.d(d,"axesAreInnerMostDims",(function(){return bt.b})),n.d(d,"combineLocations",(function(){return bt.c})),n.d(d,"computeOutAndReduceShapes",(function(){return bt.d})),n.d(d,"expandShapeToKeepDim",(function(){return bt.e})),n.d(d,"assertAxesAreInnerMostDims",(function(){return bt.a})),n.d(d,"getAxesPermutation",(function(){return bt.f})),n.d(d,"getUndoAxesPermutation",(function(){return bt.h})),n.d(d,"getInnerMostAxes",(function(){return bt.g})),n.d(d,"getBroadcastDims",(function(){return gt.b})),n.d(d,"getReductionAxes",(function(){return gt.c})),n.d(d,"assertAndGetBroadcastShape",(function(){return gt.a})),n.d(d,"assertParamsConsistent",(function(){return yt})),n.d(d,"computeOutShape",(function(){return xt})),n.d(d,"computeDilation2DInfo",(function(){return Ot.d})),n.d(d,"computePool2DInfo",(function(){return Ot.e})),n.d(d,"computePool3DInfo",(function(){return Ot.f})),n.d(d,"computeConv2DInfo",(function(){return Ot.a})),n.d(d,"computeConv3DInfo",(function(){return Ot.b})),n.d(d,"computeDefaultPad",(function(){return Ot.c})),n.d(d,"tupleValuesAreOne",(function(){return Ot.i})),n.d(d,"eitherStridesOrDilationsAreOne",(function(){return Ot.h})),n.d(d,"convertConv2DDataFormat",(function(){return Ot.g})),n.d(d,"getFusedDyActivation",(function(){return wt.c})),n.d(d,"getFusedBiasGradient",(function(){return wt.b})),n.d(d,"applyActivation",(function(){return wt.a})),n.d(d,"shouldFuse",(function(){return wt.d})),n.d(d,"PARALLELIZE_THRESHOLD",(function(){return vt})),n.d(d,"computeOptimalWindowSize",(function(){return kt})),n.d(d,"slice_util",(function(){return _e})),n.d(d,"upcastType",(function(){return Ke.b})),n.d(d,"getImageCenter",(function(){return It})),n.d(d,"getReshaped",(function(){return Nt})),n.d(d,"getPermuted",(function(){return jt})),n.d(d,"getReshapedPermuted",(function(){return St})),n.d(d,"getSliceBeginCoords",(function(){return Tt})),n.d(d,"getSliceSize",(function(){return Ct})),n.d(d,"prepareAndValidate",(function(){return $t})),n.d(d,"validateUpdateShape",(function(){return Et.c})),n.d(d,"validateInput",(function(){return Et.b})),n.d(d,"calculateShapes",(function(){return Et.a})),n.d(d,"SELU_SCALEALPHA",(function(){return At.b})),n.d(d,"SELU_SCALE",(function(){return At.a})),n.d(d,"ERF_P",(function(){return Rt})),n.d(d,"ERF_A1",(function(){return Ft})),n.d(d,"ERF_A2",(function(){return Dt})),n.d(d,"ERF_A3",(function(){return _t})),n.d(d,"ERF_A4",(function(){return Mt})),n.d(d,"ERF_A5",(function(){return Lt})),n.d(d,"warn",(function(){return zt})),n.d(d,"log",(function(){return Pt})),n.d(d,"mergeRealAndImagArrays",(function(){return Bt})),n.d(d,"splitRealAndImagArrays",(function(){return Wt})),n.d(d,"complexWithEvenIndex",(function(){return Vt})),n.d(d,"complexWithOddIndex",(function(){return Ut})),n.d(d,"getComplexWithIndex",(function(){return Gt})),n.d(d,"assignToTypedArray",(function(){return Ht})),n.d(d,"exponents",(function(){return Kt})),n.d(d,"exponent",(function(){return qt})),n.d(d,"decodeEinsumEquation",(function(){return Jt})),n.d(d,"getEinsumPermutation",(function(){return Zt})),n.d(d,"checkEinsumDimSizes",(function(){return Qt})),n.d(d,"getEinsumComputePath",(function(){return en})),n.d(d,"isIdentityPermutation",(function(){return tn})),n.d(d,"prepareSplitSize",(function(){return rn})),n.d(d,"segment_util",(function(){return l})),n.d(d,"fromUint8ToStringArray",(function(){return un})),n.d(d,"fromStringArrayToUint8",(function(){return cn}));var h={};n.r(h),n.d(h,"nonMaxSuppressionV3Impl",(function(){return dn.a})),n.d(h,"nonMaxSuppressionV4Impl",(function(){return dn.b})),n.d(h,"nonMaxSuppressionV5Impl",(function(){return dn.c})),n.d(h,"whereImpl",(function(){return hn.a}));var f=n(1175),m=(n(1237),n(1192)),y=n(1205);class x{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==x.instance&&(x.instance=new x),x.instance}static registerSaveRouter(e){x.getInstance().saveRouters.push(e)}static registerLoadRouter(e){x.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return x.getHandlers(e,"save")}static getLoadHandlers(e,t){return x.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?x.getInstance().loadRouters:x.getInstance().saveRouters).forEach((t=>{const o=t(e,n);null!==o&&r.push(o)})),r}}const O=e=>x.registerSaveRouter(e),w=e=>x.registerLoadRouter(e),v=e=>x.getSaveHandlers(e),k=(e,t)=>x.getLoadHandlers(e,t),I="tensorflowjs",N="models_store",j="model_info_store";function S(){if(!Object(m.b)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function T(e){const t=e.result;t.createObjectStore(N,{keyPath:"modelPath"}),t.createObjectStore(j,{keyPath:"modelPath"})}class C{constructor(e){if(this.indexedDB=S(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(I,1);r.onupgradeneeded=()=>T(r),r.onsuccess=()=>{const o=r.result;if(null==t){const t=o.transaction(N,"readonly"),r=t.objectStore(N).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return o.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(o.close(),n(r.error)),t.oncomplete=()=>o.close()}else{const r=Object(y.g)(t),c=o.transaction(j,"readwrite");let l=c.objectStore(j);const d=l.put({modelPath:this.modelPath,modelArtifactsInfo:r});let h;d.onsuccess=()=>{h=o.transaction(N,"readwrite");const d=h.objectStore(N).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});d.onsuccess=()=>e({modelArtifactsInfo:r}),d.onerror=e=>{l=c.objectStore(j);const t=l.delete(this.modelPath);t.onsuccess=()=>(o.close(),n(d.error)),t.onerror=e=>(o.close(),n(d.error))}},d.onerror=e=>(o.close(),n(d.error)),c.oncomplete=()=>{null==h?o.close():h.oncomplete=()=>o.close()}}},r.onerror=e=>n(r.error)}))}}C.URL_SCHEME="indexeddb://";const $=e=>{return Object(m.b)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(C.URL_SCHEME)?(t=e.slice(C.URL_SCHEME.length),new C(t)):null;var t};x.registerSaveRouter($),x.registerLoadRouter($);class E{constructor(){this.indexedDB=S()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(I,1);n.onupgradeneeded=()=>T(n),n.onsuccess=()=>{const r=n.result,o=r.transaction(j,"readonly"),c=o.objectStore(j).getAll();c.onsuccess=()=>{const t={};for(const e of c.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},c.onerror=e=>(r.close(),t(c.error)),o.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(path){var e;return path=(e=path).startsWith(C.URL_SCHEME)?e.slice(C.URL_SCHEME.length):e,new Promise(((e,t)=>{const n=this.indexedDB.open(I,1);n.onupgradeneeded=()=>T(n),n.onsuccess=()=>{const r=n.result,o=r.transaction(j,"readwrite"),c=o.objectStore(j),l=c.get(path);let d;l.onsuccess=()=>{if(null==l.result)return r.close(),t(new Error(`Cannot find model with path '${path}' in IndexedDB.`));{const n=c.delete(path),o=()=>{d=r.transaction(N,"readwrite");const n=d.objectStore(N).delete(path);n.onsuccess=()=>e(l.result.modelArtifactsInfo),n.onerror=e=>t(l.error)};n.onsuccess=o,n.onerror=e=>(o(),r.close(),t(l.error))}},l.onerror=e=>(r.close(),t(l.error)),o.oncomplete=()=>{null==d?r.close():d.oncomplete=()=>r.close()}},n.onerror=e=>t(n.error)}))}}var A=n(1235);const R="/",F="tensorflowjs_models",D="info",_="model_topology",M="weight_specs",L="weight_data",z="model_metadata";function P(path){return{info:[F,path,D].join(R),topology:[F,path,_].join(R),weightSpecs:[F,path,M].join(R),weightData:[F,path,L].join(R),modelMetadata:[F,path,z].join(R)}}function B(e){const t=e.split(R);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(R)}class W{constructor(e){if(!Object(m.b)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=P(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Object(y.g)(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,Object(y.a)(e.weightData));const o={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(o.signature=e.signature),null!=e.userDefinedMetadata&&(o.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(o.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(o)),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const o=this.LS.getItem(this.keys.modelMetadata);if(null!=o){const e=JSON.parse(o);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const c=this.LS.getItem(this.keys.weightData);if(null==c)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=Object(y.b)(c),t}}W.URL_SCHEME="localstorage://";const V=e=>{return Object(m.b)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(W.URL_SCHEME)?(t=e.slice(W.URL_SCHEME.length),new W(t)):null;var t};x.registerSaveRouter(V),x.registerLoadRouter(V);class U{constructor(){Object(A.b)(Object(m.b)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Object(A.b)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=F+R,n=R+D;for(let i=0;i<this.LS.length;++i){const r=this.LS.key(i);if(r.startsWith(t)&&r.endsWith(n)){e[B(r)]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(path){var e;const t=P(path=(e=path).startsWith(W.URL_SCHEME)?e.slice(W.URL_SCHEME.length):e);if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${path}'`);const n=JSON.parse(this.LS.getItem(t.info));return this.LS.removeItem(t.info),this.LS.removeItem(t.topology),this.LS.removeItem(t.weightSpecs),this.LS.removeItem(t.weightData),n}}const G="://";class H{constructor(){this.managers={}}static getInstance(){return null==H.instance&&(H.instance=new H),H.instance}static registerManager(e,t){Object(A.b)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(G)&&(e=e.slice(0,e.indexOf(G))),Object(A.b)(e.length>0,(()=>"scheme must not be an empty string."));const n=H.getInstance();Object(A.b)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function K(e){if(-1===e.indexOf(G))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${H.getSchemes().join(",")}`);return{scheme:e.split(G)[0],path:e.split(G)[1]}}async function X(e,t,n=!1){Object(A.b)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=x.getLoadHandlers(e);Object(A.b)(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),Object(A.b)(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const o=r[0],c=x.getSaveHandlers(t);Object(A.b)(c.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),Object(A.b)(c.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const l=c[0],d=K(e).scheme,h=K(e).path,f=d===K(e).scheme,m=await o.load();n&&f&&await H.getManager(d).removeModel(h);const y=await l.save(m);return n&&!f&&await H.getManager(d).removeModel(h),y.modelArtifactsInfo}async function Y(){const e=H.getSchemes(),t={};for(const n of e){const e=await H.getManager(n).listModels();for(const path in e){t[n+G+path]=e[path]}}return t}async function J(e){const t=K(e);return H.getManager(t.scheme).removeModel(t.path)}async function Z(e,t){return X(e,t,!1)}async function Q(e,t){return X(e,t,!0)}class ee{fetch(path,e){return fetch(path,e)}now(){return performance.now()}encode(text,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(text)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Object(m.b)().get("IS_BROWSER")){Object(m.b)().setPlatform("browser",new ee);try{H.registerManager(W.URL_SCHEME,new U)}catch(e){}try{H.registerManager(C.URL_SCHEME,new E)}catch(e){}}n(1410);var te=n(1208),ne=n(1181),re=n(1222),ae=n(1288),se=n(1176);Object(f.b)();const oe={buffer:te.a,cast:ne.a,clone:re.a,print:ae.a};Object(se.f)(oe);function ie(e){return new Promise((e=>setTimeout(e))).then(e)}class ue{constructor(e){if(!Object(m.b)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ue.URL_SCHEME)&&(e=e.slice(ue.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer);const o=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),c=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(c.download=this.modelTopologyFileName,c.href=o,await ie((()=>c.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await ie((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Object(y.g)(e)}}}}ue.URL_SCHEME="downloads://";class ce{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.files=e}async load(){const e=this.files[0],t=this.files.slice(1);return new Promise(((n,r)=>{const o=new FileReader;o.onload=o=>{const c=JSON.parse(o.target.result),l=c.modelTopology;if(null==l)return void r(new Error(`modelTopology field is missing from file ${e.name}`));0===t.length&&n({modelTopology:l});const d=c.weightsManifest;if(null==d)return void r(new Error(`weightManifest field is missing from file ${e.name}`));let h;try{h=this.checkManifestAndWeightFiles(d,t)}catch(e){return void r(e)}const f=[],m=[],x=[];d.forEach((e=>{e.paths.forEach((path=>{m.push(path),x.push(null)})),f.push(...e.weights)})),d.forEach((e=>{e.paths.forEach((path=>{const e=new FileReader;e.onload=e=>{const t=e.target.result,r=m.indexOf(path);if(x[r]=t,-1===x.indexOf(null)){const e={modelTopology:l,weightSpecs:f,weightData:Object(y.d)(x),format:c.format,generatedBy:c.generatedBy,convertedBy:c.convertedBy};null!=c.signature&&(e.signature=c.signature),null!=c.userDefinedMetadata&&(e.userDefinedMetadata=c.userDefinedMetadata),null!=c.modelInitializer&&(e.modelInitializer=c.modelInitializer),n(e)}},e.onerror=e=>r(`Failed to weights data from file of path '${path}'.`),e.readAsArrayBuffer(h[path])}))}))},o.onerror=t=>r(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),o.readAsText(e)}))}checkManifestAndWeightFiles(e,t){const n=[],r=t.map((e=>Object(y.c)(e.name))),o={};for(const c of e)c.paths.forEach((path=>{const e=Object(y.c)(path);if(-1!==n.indexOf(e))throw new Error(`Duplicate file basename found in weights manifest: '${e}'`);if(n.push(e),-1===r.indexOf(e))throw new Error(`Weight file with basename '${e}' is not provided.`);o[path]=t[r.indexOf(e)]}));if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return o}}function le(e){return new ce(e)}function de(e,t,n,r){!function(e){Object(A.b)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){Object(A.b)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),Object(A.b)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),Object(A.b)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let o=0;return Promise.all(e.map((c=>(c.then((c=>{const l=n+ ++o/e.length*(r-n);return t(l),c})),c))))}x.registerSaveRouter((e=>Object(m.b)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ue.URL_SCHEME)?function(e="model"){return new ue(e)}(e.slice(ue.URL_SCHEME.length)):null));var he=n(1328);async function pe(e,t){null==t&&(t={});const n=null==t.fetchFunc?Object(m.b)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),o=(null==t.onProgress?await Promise.all(r):await de(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(o):await de(o,t.onProgress,.5,1)}async function fe(e,t="",n,r){return me((e=>pe(e,{requestInit:r})))(e,t,n)}function me(e){return async(t,n="",r)=>{const o=t.map((()=>!1)),c={},l=null!=r?r.map((()=>!1)):[],d=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const h="quantization"in e?e.quantization.dtype:e.dtype,f=he.a[h]*A.O(e.shape),m=()=>{o[t]=!0,null==c[t]&&(c[t]=[]),c[t].push({manifestEntry:e,groupOffset:n,sizeBytes:f})};null!=r?r.forEach(((t,n)=>{t===e.name&&(m(),l[n]=!0)})):m(),d.push(e.name),n+=f}))})),!l.every((e=>e))){const e=r.filter(((e,i)=>!l[i]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${d.join(", ")}.`)}const h=o.reduce(((e,t,i)=>(t&&e.push(i),e)),[]),f=[];h.forEach((i=>{t[i].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;f.push(t)}))}));const m=await e(f),x={};let O=0;return h.forEach((i=>{const e=t[i].paths.length;let n=0;for(let i=0;i<e;i++)n+=m[O+i].byteLength;const r=new ArrayBuffer(n),o=new Uint8Array(r);let l=0;for(let i=0;i<e;i++){const e=new Uint8Array(m[O+i]);o.set(e,l),l+=e.byteLength}c[i].forEach((e=>{const t=r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=Object(y.e)(t,[e.manifestEntry]);for(const e in n)x[e]=n[e]})),O+=e})),x}}class be{constructor(path,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(Object(A.b)("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=Object(m.b)().platform.fetch,Object(A.b)(null!=path&&path.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(path)&&Object(A.b)(2===path.length,(()=>`URL paths for http must have a length of 2, (actual length is ${path.length}).`)),this.path=path,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const o=await this.fetch(this.path,t);if(o.ok)return{modelArtifactsInfo:Object(y.g)(e),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,o=t.generatedBy,c=t.convertedBy,l=t.format,d=t.signature,h=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let f,m;if(null!=r){const e=await this.loadWeights(r);[f,m]=e}const y={modelTopology:n,weightSpecs:f,weightData:m,generatedBy:o,convertedBy:c,format:l};null!=d&&(y.signature=d),null!=h&&(y.userDefinedMetadata=h);const x=t.modelInitializer;return x&&(y.modelInitializer=x),y}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),o=n>t?e.substring(n):"";return[r+"/",o]}(t),o=this.weightPathPrefix||n,c=[];for(const t of e)c.push(...t.weights);const l=[],d=[];for(const t of e)for(const path of t.paths)null!=this.weightUrlConverter?d.push(this.weightUrlConverter(path)):l.push(o+path+r);this.weightUrlConverter&&l.push(...await Promise.all(d));const h=await pe(l,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[c,Object(y.d)(h)]}}function ge(e){return null!=e.match(be.URL_SCHEME_REGEX)}be.URL_SCHEME_REGEX=/^https?:\/\//;const ye=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>ge(e))):ge(e),n)return xe(e,t)}return null};function xe(path,e){return new be(path,e)}function Oe(path,e){return xe(path,e)}x.registerSaveRouter(ye),x.registerLoadRouter(ye);class we{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class ve{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function ke(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new we(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new we({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new we({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function Ie(e){return new ve(e)}var Ne=n(1172),je=n(1236),Se=n(1174),Te=n(1173),Ce=n(1306);let $e;function Ee(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,o=!1,c=!1,l=!1,d=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)o=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)c=!0;else if(null!=e.getContext)l=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);d=!0}if(o){const t=2;if(o&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Object(je.b)(Ne.ib,f.a.backendName)){const n={pixels:e},r={numChannels:t};return f.a.runKernel(Ne.ib,n,r)}const[h,m]=o?[e.videoWidth,e.videoHeight]:[e.width,e.height];let y,x;if(l?y=e.getContext("2d").getImageData(0,0,h,m).data:r||n?y=e.data:(c||o||d)&&(null==$e&&($e=document.createElement("canvas").getContext("2d")),$e.canvas.width=h,$e.canvas.height=m,$e.drawImage(e,0,0,h,m),y=$e.getImageData(0,0,h,m).data),4===t)x=new Int32Array(y);else{const e=h*m;x=new Int32Array(e*t);for(let i=0;i<e;i++)for(let e=0;e<t;++e)x[i*t+e]=y[4*i+e]}const O=[m,h,t];return Object(Ce.a)(x,O,"int32")}function Ae(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function Re(e,t=3){let n=null;if(Object(m.b)().getBool("WRAP_TO_IMAGEBITMAP")&&Ae(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Ee(n,t)}async function Fe(img,canvas){let e=Object(Se.a)(img,"img","toPixels");if(!(img instanceof se.a)){const t=e;e=Object(ne.a)(t,"int32"),t.dispose()}if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const[t,n]=e.shape.slice(0,2),r=2===e.rank?1:e.shape[2];if(r>4||2===r)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${r}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`);const data=await e.data(),o="float32"===e.dtype?255:1,c=new Uint8ClampedArray(n*t*4);for(let i=0;i<t*n;++i){const t=[0,0,0,255];for(let n=0;n<r;n++){const c=data[i*r+n];if("float32"===e.dtype){if(c<0||c>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${c}.`)}else if("int32"===e.dtype&&(c<0||c>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${c}.`);1===r?(t[0]=c*o,t[1]=c*o,t[2]=c*o):t[n]=c*o}const n=4*i;c[n+0]=Math.round(t[0]),c[n+1]=Math.round(t[1]),c[n+2]=Math.round(t[2]),c[n+3]=Math.round(t[3])}if(null!=canvas){canvas.width=n,canvas.height=t;const e=canvas.getContext("2d"),r=new ImageData(c,n,t);e.putImageData(r,0,0)}return e!==img&&e.dispose(),c}const De=Object(Te.a)({fromPixels_:Ee});var _e=n(1247);class Me{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Le{constructor(){this.classNameMap={}}static getMap(){return null==Le.instance&&(Le.instance=new Le),Le.instance}static register(e){Le.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function ze(e){Object(A.b)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),Object(A.b)("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),Object(A.b)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Le.register(e)}var Pe=n(1187),Be=n(1177);const We="3.5.0";var Ve=n(1201),Ue=n(1195),Ge=n(1185);class He extends Me{minimize(e,t=!1,n){const{value:r,grads:o}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:o[e.name]})));this.applyGradients(e)}else this.applyGradients(o);return Object(Ve.b)(o),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Object(Ue.b)(e,t)}dispose(){null!=this.iterations_&&Object(Ve.b)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Object(Ge.a)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(He,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var Ke=n(1209),qe=n(1180),Xe=n(1188),div=n(1182),Ye=n(1179),Je=n(1203),Ze=n(1190),Qe=n(1186);class et extends He{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=f.a.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,i)=>{const n=f.a.registeredVariables[t];null==this.accumulatedGrads[i]&&(this.accumulatedGrads[i]={originalName:`${t}/accum_grad`,variable:Object(Ve.h)((()=>Object(Qe.a)(n).variable(false)))}),null==this.accumulatedUpdates[i]&&(this.accumulatedUpdates[i]={originalName:`${t}/accum_var`,variable:Object(Ve.h)((()=>Object(Qe.a)(n).variable(false)))});const r=Array.isArray(e)?e[i].tensor:e[t];if(null==r)return;const o=this.accumulatedGrads[i].variable,c=this.accumulatedUpdates[i].variable;Object(Ve.h)((()=>{const e=Object(Xe.a)(Object(Ye.a)(o,this.rho),Object(Ye.a)(Object(Ze.a)(r),1-this.rho)),t=Object(Ye.a)(Object(div.a)(Object(Je.a)(Object(Xe.a)(c,this.epsilon)),Object(Je.a)(Object(Xe.a)(o,this.epsilon))),r),l=Object(Xe.a)(Object(Ye.a)(c,this.rho),Object(Ye.a)(Object(Ze.a)(t),1-this.rho));o.assign(e),c.assign(l);const d=Object(Xe.a)(Object(Ye.a)(t,-this.learningRate),n);n.assign(d)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Object(Ve.b)(this.accumulatedGrads.map((e=>e.variable))),Object(Ve.b)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}et.className="Adadelta",ze(et);var tt=n(1257);class nt extends He{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,i)=>{const n=f.a.registeredVariables[t];if(null==this.accumulatedGrads[i]){const e=!1;this.accumulatedGrads[i]={originalName:`${t}/accumulator`,variable:Object(Ve.h)((()=>Object(tt.a)(n.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[i].tensor:e[t];if(null==r)return;const o=this.accumulatedGrads[i].variable;Object(Ve.h)((()=>{const e=Object(Xe.a)(o,Object(Ze.a)(r));o.assign(e);const t=Object(Xe.a)(Object(Ye.a)(Object(div.a)(r,Object(Je.a)(Object(Xe.a)(e,f.a.backend.epsilon()))),-this.learningRate),n);n.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Object(Ve.b)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}nt.className="Adagrad",ze(nt);var at=n(1215),sub=n(1183);class st extends He{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Object(Ve.h)((()=>{this.accBeta1=Object(Ge.a)(t).variable(),this.accBeta2=Object(Ge.a)(n).variable()})),null==r&&(this.epsilon=f.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Object(Ve.h)((()=>{const n=Object(sub.a)(1,this.accBeta1),r=Object(sub.a)(1,this.accBeta2);t.forEach(((t,i)=>{const o=f.a.registeredVariables[t];null==this.accumulatedFirstMoment[i]&&(this.accumulatedFirstMoment[i]={originalName:`${t}/m`,variable:Object(Ve.h)((()=>Object(Qe.a)(o).variable(false)))}),null==this.accumulatedSecondMoment[i]&&(this.accumulatedSecondMoment[i]={originalName:`${t}/v`,variable:Object(Ve.h)((()=>Object(Qe.a)(o).variable(false)))});const c=Array.isArray(e)?e[i].tensor:e[t];if(null==c)return;const l=this.accumulatedFirstMoment[i].variable,d=this.accumulatedSecondMoment[i].variable,h=Object(Xe.a)(Object(Ye.a)(l,this.beta1),Object(Ye.a)(c,1-this.beta1)),m=Object(Xe.a)(Object(Ye.a)(d,this.beta2),Object(Ye.a)(Object(Ze.a)(c),1-this.beta2)),y=Object(div.a)(h,n),x=Object(div.a)(m,r);l.assign(h),d.assign(m);const O=Object(Xe.a)(Object(Ye.a)(Object(div.a)(y,Object(Xe.a)(Object(Je.a)(x),this.epsilon)),-this.learningRate),o);o.assign(O)})),this.accBeta1.assign(Object(Ye.a)(this.accBeta1,this.beta1)),this.accBeta2.assign(Object(Ye.a)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Object(Ve.b)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Object(Ve.b)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Object(Ve.h)((()=>{this.accBeta1.assign(Object(at.a)(this.beta1,this.iterations_+1)),this.accBeta2.assign(Object(at.a)(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}st.className="Adam",ze(st);var ot=n(1211),it=n(1243);class ut extends He{constructor(e,t,n,r=null,o=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Object(Ve.h)((()=>{this.iteration=Object(Ge.a)(0).variable(),this.accBeta1=Object(Ge.a)(t).variable()})),null==r&&(this.epsilon=f.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Object(Ve.h)((()=>{const n=Object(sub.a)(1,this.accBeta1),r=Object(div.a)(-this.learningRate,Object(Xe.a)(Object(Ye.a)(this.iteration,this.decay),1));t.forEach(((t,i)=>{const o=f.a.registeredVariables[t];null==this.accumulatedFirstMoment[i]&&(this.accumulatedFirstMoment[i]={originalName:`${t}/m`,variable:Object(Qe.a)(o).variable(false)}),null==this.accumulatedWeightedInfNorm[i]&&(this.accumulatedWeightedInfNorm[i]={originalName:`${t}/v`,variable:Object(Qe.a)(o).variable(false)});const c=Array.isArray(e)?e[i].tensor:e[t];if(null==c)return;const l=this.accumulatedFirstMoment[i].variable,d=this.accumulatedWeightedInfNorm[i].variable,h=Object(Xe.a)(Object(Ye.a)(l,this.beta1),Object(Ye.a)(c,1-this.beta1)),m=Object(Ye.a)(d,this.beta2),y=Object(ot.a)(c),x=Object(it.a)(m,y);l.assign(h),d.assign(x);const O=Object(Xe.a)(Object(Ye.a)(Object(div.a)(r,n),Object(div.a)(h,Object(Xe.a)(x,this.epsilon))),o);o.assign(O)})),this.iteration.assign(Object(Xe.a)(this.iteration,1)),this.accBeta1.assign(Object(Ye.a)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Object(Ve.b)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Object(Ve.b)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}ut.className="Adamax",ze(ut);class ct extends He{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,i)=>{const n=Array.isArray(e)?e[i].tensor:e[t];if(null==n)return;const r=f.a.registeredVariables[t];Object(Ve.h)((()=>{const e=Object(Xe.a)(Object(Ye.a)(this.c,n),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Object(Ve.d)(Object(Ge.a)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}ct.className="SGD",ze(ct);class lt extends ct{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Object(Ge.a)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,i)=>{const n=f.a.registeredVariables[t];if(null==this.accumulations[i]){const e=!1;this.accumulations[i]={originalName:`${t}/momentum`,variable:Object(Ve.h)((()=>Object(Qe.a)(n).variable(e)))}}const r=this.accumulations[i].variable,o=Array.isArray(e)?e[i].tensor:e[t];null!=o&&Object(Ve.h)((()=>{let e;const t=Object(Xe.a)(Object(Ye.a)(this.m,r),o);e=this.useNesterov?Object(Xe.a)(Object(Ye.a)(this.c,Object(Xe.a)(o,Object(Ye.a)(t,this.m))),n):Object(Xe.a)(Object(Ye.a)(this.c,t),n),r.assign(t),n.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Object(Ve.b)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}lt.className="Momentum",ze(lt);class ht extends He{constructor(e,t=.9,n=0,r=null,o=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,null==r&&(this.epsilon=f.a.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,i)=>{const n=f.a.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[i]&&(this.accumulatedMeanSquares[i]={originalName:`${t}/rms`,variable:Object(Ve.h)((()=>Object(Qe.a)(n).variable(r)))}),null==this.accumulatedMoments[i]&&(this.accumulatedMoments[i]={originalName:`${t}/momentum`,variable:Object(Ve.h)((()=>Object(Qe.a)(n).variable(r)))}),null==this.accumulatedMeanGrads[i]&&this.centered&&(this.accumulatedMeanGrads[i]={originalName:`${t}/mg`,variable:Object(Ve.h)((()=>Object(Qe.a)(n).variable(r)))});const o=Array.isArray(e)?e[i].tensor:e[t];if(null==o)return;const c=this.accumulatedMeanSquares[i].variable,l=this.accumulatedMoments[i].variable;Object(Ve.h)((()=>{const e=Object(Xe.a)(Object(Ye.a)(c,this.decay),Object(Ye.a)(Object(Ze.a)(o),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[i].variable,r=Object(Xe.a)(Object(Ye.a)(t,this.decay),Object(Ye.a)(o,1-this.decay)),d=Object(div.a)(Object(Ye.a)(o,this.learningRate),Object(Je.a)(Object(sub.a)(e,Object(Xe.a)(Object(Ze.a)(r),this.epsilon)))),h=Object(Xe.a)(Object(Ye.a)(l,this.momentum),d);c.assign(e),t.assign(r),l.assign(h);const f=Object(sub.a)(n,h);n.assign(f)}else{const e=Object(Xe.a)(Object(Ye.a)(c,this.decay),Object(Ye.a)(Object(Ze.a)(o),1-this.decay)),t=Object(Xe.a)(Object(Ye.a)(l,this.momentum),Object(div.a)(Object(Ye.a)(o,this.learningRate),Object(Je.a)(Object(Xe.a)(e,this.epsilon))));c.assign(e),l.assign(t);const r=Object(sub.a)(n,t);n.assign(r)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Object(Ve.b)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Object(Ve.b)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Object(Ve.b)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}ht.className="RMSProp",ze(ht);class pt{static sgd(e){return new ct(e)}static momentum(e,t,n=!1){return new lt(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,o=!1){return new ht(e,t,n,r,o)}static adam(e=.001,t=.9,n=.999,r=null){return new st(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new et(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,o=0){return new ut(e,t,n,r,o)}static adagrad(e,t=.1){return new nt(e,t)}}const ft={sgd:pt.sgd,momentum:pt.momentum,adadelta:pt.adadelta,adagrad:pt.adagrad,rmsprop:pt.rmsprop,adamax:pt.adamax,adam:pt.adam};var mt=n(1346),bt=n(1202),gt=n(1184);function yt(e,t){const n=e[0].length;e.forEach(((e,i)=>{A.b(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${i}] must be the same as the rank of the rest (${n})`))})),A.b(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,i)=>{for(let o=0;o<n;o++)A.b(o===t||e[o]===r[o],(()=>`Error in concat${n}D: Shape of tensors[${i}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${i}.`))}))}function xt(e,t){const n=e[0].slice();for(let i=1;i<e.length;i++)n[t]+=e[i][t];return n}var Ot=n(1196),wt=n(1220);const vt=30;function kt(e){return e<=vt?e:Object(A.G)(e,Math.floor(Math.sqrt(e)))}function It(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Nt(e,t,n,r=!0){let o=[];if(r)o=o.concat(t.slice(0)),o.push(e[0]/n),o=o.concat(e.slice(1));else{o=o.concat(e[0]);const n=t.length;for(let i=0;i<n;++i)o=o.concat([e[i+1]/t[i],t[i]]);o=o.concat(e.slice(n+1))}return o}function jt(e,t,n=!0){const r=[];if(n){r.push(t);for(let i=t+1;i<e;++i)i<=2*t?(r.push(i),r.push(i-(t+1))):r.push(i)}else{const n=[],o=[];for(let i=1;i<e;++i)i>=2*t+1||i%2==1?o.push(i):n.push(i);r.push(...n),r.push(0),r.push(...o)}return r}function St(e,t,n,r=!0){const o=[];r?o.push(e[0]/n):o.push(e[0]*n);for(let i=1;i<e.length;++i)i<=t.length?r?o.push(t[i-1]*e[i]):o.push(e[i]/t[i-1]):o.push(e[i]);return o}function Tt(e,t){const n=[0];for(let i=0;i<t;++i)n.push(e[i][0]);return n}function Ct(e,t,n){const r=e.slice(0,1);for(let i=0;i<n;++i)r.push(e[i+1]-t[i][0]-t[i][1]);return r}function $t(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Object(A.O)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const o=t.shape,c=o[o.length-1];let l=1;for(let i=0;i<o.length-1;++i)l*=o[i];const d=e.shape,h=o.slice();h.pop();let f=1;for(let i=c;i<n;++i)f*=d[i],h.push(d[i]);const m=[...Object(A.j)(e.shape).map((e=>e/f)),1].slice(0,c);return[h,l,f,m]}var Et=n(1248),At=n(1307);const Rt=.3275911,Ft=.254829592,Dt=-.284496736,_t=1.421413741,Mt=-1.453152027,Lt=1.061405429;function zt(...e){Object(m.b)().getBool("IS_TEST")||console.warn(...e)}function Pt(...e){Object(m.b)().getBool("IS_TEST")||console.log(...e)}function Bt(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let i=0;i<n.length;i+=2)n[i]=e[i/2],n[i+1]=t[i/2];return n}function Wt(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let i=0;i<e.length;i+=2)t[i/2]=e[i],n[i/2]=e[i+1];return{real:t,imag:n}}function Vt(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let i=0;i<e.length;i+=4)n[Math.floor(i/4)]=e[i],r[Math.floor(i/4)]=e[i+1];return{real:n,imag:r}}function Ut(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let i=2;i<e.length;i+=4)n[Math.floor(i/4)]=e[i],r[Math.floor(i/4)]=e[i+1];return{real:n,imag:r}}function Gt(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Ht(data,e,t,n){data[2*n]=e,data[2*n+1]=t}function Kt(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let i=0;i<Math.ceil(e/2);i++){const o=(t?2:-2)*Math.PI*(i/e);n[i]=Math.cos(o),r[i]=Math.sin(o)}return{real:n,imag:r}}function qt(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const Xt="->",Yt=/->/g;function Jt(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Yt,"").length)/Xt.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,o]=e.split(Xt);Object(A.b)(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const c=r.split(","),l=c.length;if(t!==l)throw new Error(`Expected ${l} input tensors, received ${t}`);if(l>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const d=[];for(let i=0;i<o.length;++i){const e=o[i];if(!c.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===d.indexOf(e)&&d.push(e)}for(let i=0;i<r.length;++i){const e=r[i];-1===d.indexOf(e)&&","!==e&&d.push(e)}const h=new Array(c.length);for(let i=0;i<l;++i){if(new Set(c[i].split("")).size!==c[i].length)throw new Error(`Found duplicate axes in input component ${c[i]}. Support for duplicate axes in input is not implemented yet.`);h[i]=[];for(let e=0;e<c[i].length;++e)h[i].push(d.indexOf(c[i][e]))}const f=d.length,m=[];for(let i=o.length;i<f;++i)m.push(i);return{allDims:d,summedDims:m,idDims:h}}function Zt(e,t){let n=new Array(e);n.fill(-1);for(let i=0;i<t.length;++i)n[t[i]]=i;const r=[];for(let i=0;i<e;++i)-1===n[i]&&r.push(i);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Qt(e,t,n){const r=new Array(e);for(let i=0;i<n.length;++i){const e=n[i].shape;for(let n=0;n<t[i].length;++n)void 0===r[t[i][n]]?r[t[i][n]]=e[n]:Object(A.b)(r[t[i][n]]===e[n],(()=>`Expected dimension ${r[t[i][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function en(e,t){const path=e,n=[];let r=0;0===e.length&&path.push(-1),r=e.length+1;for(let i=0;i<r;++i)n.push([]);const o=[];for(let i=0;i<path.length;++i){const e=nn(t,path[i]);for(const t of e)-1===o.indexOf(t)&&(n[i].push(t),o.push(t))}return{path:path,steps:n}}function tn(e){return e.every(((e,t)=>e===t))}function nn(e,t){const n=[];for(let i=0;i<e.length;++i)0!==e[i].length&&-1===e[i].indexOf(t)&&-1!==t||n.push(i);return n}function rn(e,t,n=0){let r=[];if("number"==typeof t)Object(A.b)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const o=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);Object(A.b)(o<=1,(()=>"There should be only one negative value in split array."));const c=t.indexOf(-1);if(-1!==c){const r=t.reduce(((a,b)=>b>0?a+b:a));t[c]=e.shape[n]-r}Object(A.b)(e.shape[n]===t.reduce(((a,b)=>a+b)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function an(e,t){let n,r=!1;for(e<=vt?(n=e,r=!0):n=Object(A.G)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Object(A.G)(e,n+1);return n}function sn(e,t,n){const r=[],o=e.length;for(let c=0;c<o;c++)c!==t?r.push(e[c]):r.push(n);return r}function on(e,t,n,r){const o=t.shape.length,c=e.shape.length;if(0!==r&&(r<-o||r>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${r}`);if(r<0&&(r+=o),r>c)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${c}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let i=0;i<r;++i)if(e.shape[i]!==t.shape[i])throw new Error(`x.shape[${i}]: ${e.shape[i]} should be equal to indices.shape[${i}]: ${t.shape[i]}.`);const l=e.shape[n],d=[];let h=1,f=1,m=1;for(let i=0;i<r;++i)d.push(e.shape[i]),h*=e.shape[i];for(let i=r;i<n;i++)d.push(e.shape[i]),f*=e.shape[i];for(let i=r;i<o;i++)d.push(t.shape[i]);for(let i=n+1;i<c;i++)d.push(e.shape[i]),m*=e.shape[i];return{batchSize:h,sliceSize:m,outerSize:f,dimSize:l,outputShape:d}}function un(e){try{return e.map((e=>Object(Be.decodeString)(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function cn(e){return e.map((s=>Object(Be.encodeString)(s)))}var ln=n(1285),dn=n(1221),hn=n(1308),pn=n(1253)},1172:function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return o})),n.d(t,"c",(function(){return c})),n.d(t,"d",(function(){return l})),n.d(t,"e",(function(){return d})),n.d(t,"f",(function(){return h})),n.d(t,"g",(function(){return f})),n.d(t,"h",(function(){return m})),n.d(t,"i",(function(){return y})),n.d(t,"j",(function(){return x})),n.d(t,"k",(function(){return O})),n.d(t,"l",(function(){return w})),n.d(t,"n",(function(){return v})),n.d(t,"m",(function(){return k})),n.d(t,"o",(function(){return I})),n.d(t,"r",(function(){return N})),n.d(t,"p",(function(){return j})),n.d(t,"q",(function(){return S})),n.d(t,"s",(function(){return T})),n.d(t,"t",(function(){return C})),n.d(t,"u",(function(){return $})),n.d(t,"v",(function(){return E})),n.d(t,"w",(function(){return A})),n.d(t,"x",(function(){return R})),n.d(t,"y",(function(){return F})),n.d(t,"z",(function(){return D})),n.d(t,"A",(function(){return _})),n.d(t,"B",(function(){return M})),n.d(t,"C",(function(){return L})),n.d(t,"D",(function(){return z})),n.d(t,"E",(function(){return P})),n.d(t,"F",(function(){return B})),n.d(t,"G",(function(){return W})),n.d(t,"H",(function(){return V})),n.d(t,"I",(function(){return U})),n.d(t,"J",(function(){return G})),n.d(t,"L",(function(){return H})),n.d(t,"K",(function(){return K})),n.d(t,"M",(function(){return X})),n.d(t,"N",(function(){return Y})),n.d(t,"O",(function(){return J})),n.d(t,"P",(function(){return Z})),n.d(t,"Q",(function(){return Q})),n.d(t,"R",(function(){return ee})),n.d(t,"S",(function(){return te})),n.d(t,"U",(function(){return ne})),n.d(t,"T",(function(){return re})),n.d(t,"kc",(function(){return ae})),n.d(t,"V",(function(){return se})),n.d(t,"W",(function(){return oe})),n.d(t,"X",(function(){return ie})),n.d(t,"Z",(function(){return ue})),n.d(t,"Y",(function(){return ce})),n.d(t,"ab",(function(){return le})),n.d(t,"bb",(function(){return de})),n.d(t,"cb",(function(){return he})),n.d(t,"db",(function(){return pe})),n.d(t,"eb",(function(){return fe})),n.d(t,"fb",(function(){return me})),n.d(t,"gb",(function(){return be})),n.d(t,"hb",(function(){return ge})),n.d(t,"jb",(function(){return ye})),n.d(t,"nb",(function(){return xe})),n.d(t,"mb",(function(){return Oe})),n.d(t,"ob",(function(){return we})),n.d(t,"pb",(function(){return ve})),n.d(t,"rb",(function(){return ke})),n.d(t,"qb",(function(){return Ie})),n.d(t,"sb",(function(){return Ne})),n.d(t,"tb",(function(){return je})),n.d(t,"ub",(function(){return Se})),n.d(t,"vb",(function(){return Te})),n.d(t,"yb",(function(){return Ce})),n.d(t,"zb",(function(){return $e})),n.d(t,"Ab",(function(){return Ee})),n.d(t,"Bb",(function(){return Ae})),n.d(t,"Cb",(function(){return Re})),n.d(t,"Db",(function(){return Fe})),n.d(t,"Fb",(function(){return De})),n.d(t,"Gb",(function(){return _e})),n.d(t,"Hb",(function(){return Me})),n.d(t,"Eb",(function(){return Le})),n.d(t,"wb",(function(){return ze})),n.d(t,"xb",(function(){return Pe})),n.d(t,"Ib",(function(){return Be})),n.d(t,"Ob",(function(){return We})),n.d(t,"Jb",(function(){return Ve})),n.d(t,"Mb",(function(){return Ue})),n.d(t,"Kb",(function(){return Ge})),n.d(t,"Lb",(function(){return He})),n.d(t,"Nb",(function(){return Ke})),n.d(t,"Pb",(function(){return qe})),n.d(t,"Qb",(function(){return Xe})),n.d(t,"Rb",(function(){return Ye})),n.d(t,"Sb",(function(){return Je})),n.d(t,"Tb",(function(){return Ze})),n.d(t,"Ub",(function(){return Qe})),n.d(t,"Vb",(function(){return et})),n.d(t,"Wb",(function(){return tt})),n.d(t,"ac",(function(){return nt})),n.d(t,"Xb",(function(){return at})),n.d(t,"Yb",(function(){return st})),n.d(t,"Zb",(function(){return ot})),n.d(t,"cc",(function(){return it})),n.d(t,"bc",(function(){return ut})),n.d(t,"dc",(function(){return ct})),n.d(t,"ec",(function(){return lt})),n.d(t,"fc",(function(){return ht})),n.d(t,"gc",(function(){return pt})),n.d(t,"hc",(function(){return ft})),n.d(t,"ic",(function(){return mt})),n.d(t,"jc",(function(){return bt})),n.d(t,"lc",(function(){return gt})),n.d(t,"mc",(function(){return yt})),n.d(t,"oc",(function(){return xt})),n.d(t,"rc",(function(){return Ot})),n.d(t,"sc",(function(){return wt})),n.d(t,"pc",(function(){return vt})),n.d(t,"qc",(function(){return kt})),n.d(t,"nc",(function(){return It})),n.d(t,"tc",(function(){return Nt})),n.d(t,"vc",(function(){return jt})),n.d(t,"wc",(function(){return St})),n.d(t,"xc",(function(){return Tt})),n.d(t,"yc",(function(){return Ct})),n.d(t,"zc",(function(){return $t})),n.d(t,"Ec",(function(){return Et})),n.d(t,"Cc",(function(){return At})),n.d(t,"Dc",(function(){return Rt})),n.d(t,"Bc",(function(){return Ft})),n.d(t,"Ac",(function(){return Dt})),n.d(t,"Gc",(function(){return _t})),n.d(t,"Lc",(function(){return Mt})),n.d(t,"Rc",(function(){return Lt})),n.d(t,"Hc",(function(){return zt})),n.d(t,"Kc",(function(){return Pt})),n.d(t,"Fc",(function(){return Bt})),n.d(t,"Ic",(function(){return Wt})),n.d(t,"Jc",(function(){return Vt})),n.d(t,"Nc",(function(){return Ut})),n.d(t,"Mc",(function(){return Gt})),n.d(t,"Pc",(function(){return Ht})),n.d(t,"Qc",(function(){return Kt})),n.d(t,"Sc",(function(){return qt})),n.d(t,"Tc",(function(){return Xt})),n.d(t,"Uc",(function(){return Yt})),n.d(t,"Vc",(function(){return Jt})),n.d(t,"Wc",(function(){return Zt})),n.d(t,"Xc",(function(){return Qt})),n.d(t,"Yc",(function(){return en})),n.d(t,"Zc",(function(){return tn})),n.d(t,"ad",(function(){return nn})),n.d(t,"bd",(function(){return rn})),n.d(t,"Oc",(function(){return an})),n.d(t,"ib",(function(){return sn})),n.d(t,"uc",(function(){return on})),n.d(t,"cd",(function(){return un})),n.d(t,"kb",(function(){return cn})),n.d(t,"lb",(function(){return ln}));const r="Abs",o="Acos",c="Acosh",l="Add",d="AddN",h="All",f="Any",m="ArgMax",y="ArgMin",x="Asin",O="Asinh",w="Atan",v="Atanh",k="Atan2",I="AvgPool",N="AvgPoolGrad",j="AvgPool3D",S="AvgPool3DGrad",T="BatchMatMul",C="BatchToSpaceND",$="Bincount",E="BroadcastTo",A="Cast",R="Ceil",F="ClipByValue",D="Complex",_="ComplexAbs",M="Concat",L="Conv2D",z="Conv2DBackpropFilter",P="Conv2DBackpropInput",B="Conv3D",W="Conv3DBackpropFilterV2",V="Conv3DBackpropInputV2",U="Cos",G="Cosh",H="Cumsum",K="CropAndResize",X="DenseBincount",Y="DepthToSpace",J="DepthwiseConv2dNative",Z="DepthwiseConv2dNativeBackpropFilter",Q="DepthwiseConv2dNativeBackpropInput",ee="Diag",te="Dilation2D",ne="Dilation2DBackpropInput",re="Dilation2DBackpropFilter",ae="RealDiv",se="Einsum",oe="Elu",ie="EluGrad",ue="Erf",ce="Equal",le="Exp",de="ExpandDims",he="Expm1",pe="FFT",fe="Fill",me="FlipLeftRight",be="Floor",ge="FloorDiv",ye="FusedBatchNorm",xe="GatherV2",Oe="GatherNd",we="Greater",ve="GreaterEqual",ke="Identity",Ie="IFFT",Ne="Imag",je="IsFinite",Se="IsInf",Te="IsNan",Ce="LeakyRelu",$e="Less",Ee="LessEqual",Ae="LinSpace",Re="Log",Fe="Log1p",De="LogicalAnd",_e="LogicalNot",Me="LogicalOr",Le="LogSoftmax",ze="LRN",Pe="LRNGrad",Be="Max",We="Maximum",Ve="MaxPool",Ue="MaxPoolGrad",Ge="MaxPool3D",He="MaxPool3DGrad",Ke="MaxPoolWithArgmax",qe="Mean",Xe="Min",Ye="Minimum",Je="MirrorPad",Ze="Mod",Qe="Multinomial",et="Multiply",tt="Neg",nt="NotEqual",at="NonMaxSuppressionV3",st="NonMaxSuppressionV4",ot="NonMaxSuppressionV5",it="OnesLike",ut="OneHot",ct="Pack",lt="PadV2",ht="Pow",pt="Prelu",ft="Prod",mt="Range",bt="Real",gt="Reciprocal",yt="Relu",xt="Reshape",Ot="ResizeNearestNeighbor",wt="ResizeNearestNeighborGrad",vt="ResizeBilinear",kt="ResizeBilinearGrad",It="Relu6",Nt="Reverse",jt="Round",St="Rsqrt",Tt="ScatterNd",Ct="Select",$t="Selu",Et="Slice",At="Sin",Rt="Sinh",Ft="Sign",Dt="Sigmoid",_t="Softplus",Mt="Sqrt",Lt="Sum",zt="SpaceToBatchND",Pt="SplitV",Bt="Softmax",Wt="SparseReshape",Vt="SparseToDense",Ut="SquaredDifference",Gt="Square",Ht="StridedSlice",Kt="Sub",qt="Tan",Xt="Tanh",Yt="Tile",Jt="TopK",Zt="Transform",Qt="Transpose",en="Unique",tn="Unpack",nn="UnsortedSegmentSum",rn="ZerosLike",an="Step",sn="FromPixels",on="RotateWithOffset",un="_FusedMatMul",cn="FusedConv2D",ln="FusedDepthwiseConv2D"},1173:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(1175),o=n(1235);function c(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const c=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const l=(...e)=>{r.a.startScope(n);try{const t=c(...e);return Object(o.x)(t)&&console.error("Cannot return a Promise inside of tidy."),r.a.endScope(t),t}catch(e){throw r.a.endScope(null),e}};return Object.defineProperty(l,"name",{value:n,configurable:!0}),l}},1174:function(e,t,n){"use strict";n.d(t,"c",(function(){return h})),n.d(t,"a",(function(){return y})),n.d(t,"b",(function(){return x}));var r=n(1175),o=n(1192),c=n(1176),l=n(1235),d=n(1177);function h(e,t){let n=e;if(Object(l.A)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Object(l.A)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Object(o.b)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&f(e,r,[]),r}function f(e,t,n){if(n=n||[],!Array.isArray(e)&&!Object(l.A)(e))return void Object(l.b)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));Object(l.b)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),Object(l.b)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let i=0;i<e.length;++i)f(e[i],r,n.concat(i))}function m(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function y(e,t,n,o="numeric"){if(e instanceof c.a)return m(o,e.dtype,t,n),e;let f=Object(l.r)(e);if("string"!==f&&["bool","int32","float32"].indexOf(o)>=0&&(f=o),m(o,f,t,n),null==e||!Object(l.A)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const y=h(e,f);Object(l.A)(e)||Array.isArray(e)||(e=[e]);const x="string"!==f?Object(d.toTypedArray)(e,f):Object(l.m)(e,[],!0);return r.a.makeTensor(x,y,f)}function x(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,i)=>y(e,`${t}[${i}]`,n,r)))}},1175:function(e,t,n){"use strict";n.d(t,"b",(function(){return N})),n.d(t,"a",(function(){return j}));var r=n(1253),o=n(1192),c=n(1284),l=n(1172),d=n(1236),h=n(1177),f=n(1235);class m{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new x)}profileKernel(e,t,n){let r;const c=()=>{r=n()};let l;const d=h.now();if(this.backendTimer.timerAvailable())l=this.backendTimer.time(c);else{c();for(const output of r)output.dataSync();l=Promise.resolve({kernelMs:h.now()-d})}if(Object(o.b)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let i=0;i<r.length;i++){const output=r[i];output.data().then((t=>{y(t,output.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:l.then((e=>e.kernelMs)),extraInfo:l.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:o,extraInfo:c}=e;n.forEach((e=>{Promise.all([e.data(),r,c]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],o,n[2])}))}))}}function y(e,t,n){if("float32"!==t)return!1;for(let i=0;i<e.length;i++){const t=e[i];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class x{logKernelProfile(e,t,n,r,o,c){const time="number"==typeof r?f.L(`${r}ms`,9):r.error,l=f.L(e,25),d=t.rank,h=t.size,m=f.L(t.shape.toString(),14);let y="";for(const e in o){const input=o[e];if(null!=input){const n=input.shape||t.shape,r=n.length;y+=`${e}: ${r}D ${r>0?n:""} `}}console.log(`%c${l}\t%c${time}\t%c${d}D ${m}\t%c${h}\t%c${y}\t%c${c}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var O=n(1176),w=n(1187);function v(e){return null!=e.kernelName}class k{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class I{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new k}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let i=0;i<e.length;i++){const t=e[i];if(await this.initializeBackend(t).success)return void await this.setBackend(t)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new m(this.backendInstance),!0}setupRegisteredKernels(){Object(d.c)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Object(d.c)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.b||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((a,b)=>this.registryFactory[b].priority-this.registryFactory[a].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let i=0;i<e.length;i++){const t=e[i],{success:n,asyncInit:r}=this.initializeBackend(t);if(r||n)return{name:t,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,o=this.readSync(t),c=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,o,n.shape,n.dtype,c),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return I.nextTensorId++}nextVariableId(){return I.nextVariableId++}clone(e){const t=j.runKernel(l.rb,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return j.runKernel(l.w,t,n)}})),[],{}),t}runKernel(e,t,n){if(!(null!=Object(d.b)(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let o=0;n.forEach((e=>{o+="complex64"===e.dtype?3:1}));const c=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],l=r-t-o-c;if(l>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${l} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),o=this.state.numBytes,c=this.state.numTensors;let l,h;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const m=v(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(v(e)){const{kernelName:t,inputs:o,attrs:c}=e;null==this.backendName&&this.backend;const m=Object(d.b)(t,this.backendName);f.b(null!=m,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),l=()=>{const e=this.backend.numDataIds();h=m.kernelFunc({inputs:o,attrs:c,backend:this.backend});const l=Array.isArray(h)?h:[h];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,l);const d=l.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,o,d);n=this.saveTensorsForBackwardMode(e)}return d}}else{const{forwardFunc:t}=e,o=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};l=()=>{const e=this.backend.numDataIds();h=this.tidy((()=>t(this.backend,o)));const n=Array.isArray(h)?h:[h];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(m,e,n),n}}const{inputs:y,attrs:x}=e,O=v(e)?null:e.backwardsFunc;let w;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(w=this.profiler.profileKernel(m,y,(()=>l())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(w),t=w.outputs):t=l()})),r&&this.addTapeNode(m,y,t,O,n,x),this.state.profiling&&this.state.activeProfile.kernels.push({name:m,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-c,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(y).map((e=>null!=y[e]?y[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:w.timeMs,extraInfo:w.extraInfo}),Array.isArray(h)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=Object(d.a)(e);if(null!=r){const e=r.inputsToSave||[],o=r.outputsToSave||[];let c;r.saveAllInputs?(f.b(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),c=Object.keys(t).map((e=>t[e]))):c=e.map((e=>t[e]));const l=n.filter(((e,i)=>o[i]));return c.concat(l)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let o=e;"string"===n&&f.z(e[0])&&(o=e.map((e=>h.encodeString(e))));const c=r.write(o,t,n),l=new O.a(t,n,c,this.nextTensorId());if(this.trackTensor(l,r),"string"===n){const e=this.state.tensorInfo.get(c),t=Object(f.f)(o);this.state.numBytes+=t-e.bytes,e.bytes=t}return l}makeTensorFromDataId(e,t,n,r){n=n||"float32";const o=new O.a(t,n,e,this.nextTensorId());return this.trackTensor(o,r),o}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const o=new O.c(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[o.name])throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(a,e){this.state.numTensors++,"string"===a.dtype&&this.state.numStringTensors++;let t=0;"complex64"!==a.dtype&&"string"!==a.dtype&&(t=a.size*f.g(a.dtype)),this.state.numBytes+=t,this.state.tensorInfo.has(a.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(a.dataId,{backend:e||this.backend,dtype:a.dtype,shape:a.shape,bytes:t})),a instanceof O.c||this.track(a)}incRef(a,e){this.trackTensor(a,e),this.backend.incRef(a.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(a){if(!this.state.tensorInfo.has(a.dataId))return;const e=this.state.tensorInfo.get(a.dataId);if(this.state.numTensors--,"string"===a.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==a.dtype&&"string"!==a.dtype){const e=a.size*f.g(a.dtype);this.state.numBytes-=e}e.backend.disposeData(a.dataId)&&this.removeDataId(a.dataId,e.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,o,c){const l={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:o},h=Object(d.a)(e);null!=h&&(r=h.gradFunc),null!=r&&(l.gradient=e=>(e=e.map(((e,i)=>{if(null==e){const output=n[i],e=f.F(output.size,output.dtype);return this.makeTensor(e,output.shape,output.dtype)}return e})),r(e.length>1?e:e[0],o,c))),this.state.activeTape.push(l)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Object(w.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let i=0;i<this.state.activeScope.track.length;i++){const e=this.state.activeScope.track[i];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(f.b(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const o=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));f.b(o instanceof O.a,(()=>"The result y returned by f() must be a tensor."));const c=function(e,t,n){const r={},o={};for(let i=0;i<t.length;i++)r[t[i].id]=!0;for(let i=0;i<e.length;i++){const n=e[i],c=n.inputs;for(const e in c){const input=c[e];let l=!1;for(let e=0;e<t.length;e++)if(r[input.id]){n.outputs.forEach((output=>r[output.id]=!0)),l=!0,o[n.id]=!0;break}if(l)break}}const c={};c[n.id]=!0;const l={};for(let i=e.length-1;i>=0;i--){const t=e[i],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(c[t.outputs[e].id]){for(const e in n)c[n[e].id]=!0,l[t.id]=!0;break}}const d=[];for(let i=0;i<e.length;i++){const t=e[i];if(o[t.id]&&l[t.id]){const e={};for(const n in t.inputs){const o=t.inputs[n];r[o.id]&&(e[n]=o)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,d.push(n)}}return d}(this.state.activeTape,t,o);if(!r&&0===c.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[o.id]=null==n?function(e){const t=Object(f.D)(Object(f.O)(e),"float32");return j.makeTensor(t,e,"float32")}(o.shape):n,function(e,t,n,r){for(let i=t.length-1;i>=0;i--){const o=t[i],c=[];if(o.outputs.forEach((t=>{const n=e[t.id];null!=n?c.push(n):c.push(null)})),null==o.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const l=o.gradient(c);for(const t in o.inputs){if(!(t in l))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(l)}.`);const c=n((()=>l[t]()));if("float32"!==c.dtype)throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${c.dtype}'`);const d=o.inputs[t];if(!f.a(c.shape,d.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${t}' has shape '${c.shape}', which does not match the shape of the input '${d.shape}'`);if(null==e[d.id])e[d.id]=c;else{const t=e[d.id];e[d.id]=r(t,c),t.dispose()}}}}(e,c,(e=>this.tidy(e)),S);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:o,grads:r}}))}customGrad(e){return f.b(f.u(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;f.b(t.every((e=>e instanceof O.a)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((input,i)=>{r[i]=input}));return this.runKernelFunc({forwardFunc:(r,o)=>(n=e(...t,o),f.b(n.value instanceof O.a,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),f.b(f.u(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const o=n.gradFunc(e,r),c=Array.isArray(o)?o:[o];f.b(c.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),f.b(c.every((e=>e instanceof O.a)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const l={};return c.forEach(((e,i)=>{l[i]=()=>e})),l},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=Object(h.now)(),n=await this.backend.time(e);return n.wallMs=Object(h.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new k;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function N(){const e=Object(c.b)();if(null==e._tfengine){const t=new o.a(e);e._tfengine=new I(t)}return Object(o.c)(e._tfengine.ENV),Object(O.g)((()=>e._tfengine)),e._tfengine}I.nextTensorId=0,I.nextVariableId=0;const j=N();function S(a,b){const e={a:a,b:b};return j.runKernel(l.d,e)}},1176:function(e,t,n){"use strict";n.d(t,"b",(function(){return y})),n.d(t,"g",(function(){return v})),n.d(t,"f",(function(){return k})),n.d(t,"e",(function(){return I})),n.d(t,"a",(function(){return N})),n.d(t,"d",(function(){return j})),n.d(t,"c",(function(){return S}));var r=n(1284),o=n(1235);function c(e,t,n,r){const c=Object(o.j)(t),d=function(e,t,n,r){const c=Object(o.O)(t),d=r[r.length-1],h=new Array(d).fill(0),m=t.length,y="complex64"===n?f(e):e;if(m>1)for(let e=0;e<c/d;e++){const t=e*d;for(let e=0;e<d;e++)h[e]=Math.max(h[e],l(y[t+e],0,n).length)}return h}(e,t,n,c),m=t.length,y=h(e,t,n,c,d),x=["Tensor"];return r&&(x.push(`  dtype: ${n}`),x.push(`  rank: ${m}`),x.push(`  shape: [${t}]`),x.push("  values:")),x.push(y.map((e=>"    "+e)).join("\n")),x.join("\n")}function l(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Object(o.z)(e)?`'${e}'`:"bool"===n?d(e):parseFloat(e.toFixed(7)).toString(),Object(o.L)(r,t)}function d(e){return 0===e?"false":"true"}function h(e,t,n,r,o,c=!0){const m="complex64"===n?2:1,y=t[0],x=t.length;if(0===x){if("complex64"===n){return[l(f(e)[0],0,n)]}return"bool"===n?[d(e[0])]:[e[0].toString()]}if(1===x){if(y>20){const t=3*m;let r=Array.from(e.slice(0,t)),c=Array.from(e.slice((y-3)*m,y*m));return"complex64"===n&&(r=f(r),c=f(c)),["["+r.map(((e,i)=>l(e,o[i],n))).join(", ")+", ..., "+c.map(((e,i)=>l(e,o[y-3+i],n))).join(", ")+"]"]}return["["+("complex64"===n?f(e):Array.from(e)).map(((e,i)=>l(e,o[i],n))).join(", ")+"]"]}const O=t.slice(1),w=r.slice(1),v=r[0]*m,k=[];if(y>20){for(let i=0;i<3;i++){const t=i*v,r=t+v;k.push(...h(e.slice(t,r),O,n,w,o,!1))}k.push("...");for(let i=y-3;i<y;i++){const t=i*v,r=t+v;k.push(...h(e.slice(t,r),O,n,w,o,i===y-1))}}else for(let i=0;i<y;i++){const t=i*v,r=t+v;k.push(...h(e.slice(t,r),O,n,w,o,i===y-1))}const I=2===x?",":"";k[0]="["+k[0]+I;for(let i=1;i<k.length-1;i++)k[i]=" "+k[i]+I;let N=",\n";for(let i=2;i<x;i++)N+="\n";return k[k.length-1]=" "+k[k.length-1]+"]"+(c?"":N),k}function f(e){const t=[];for(let i=0;i<e.length;i+=2)t.push([e[i],e[i+1]]);return t}var m=n(1177);class y{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=o.O(e),null!=n){const e=n.length;o.b(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||o.n(t,this.size),this.strides=Object(o.j)(e)}set(e,...t){0===t.length&&(t=[0]),o.b(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let i=0;for(const t of e){if(t<0||t>=this.shape[i]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}i++}let t=e[e.length-1];for(let i=0;i<e.length-1;++i)t+=this.strides[i]*e[i];return this.values[t]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let i=0;i<e.length-1;++i)t+=this.strides[i]*e[i];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let i=0;i<t.length-1;++i)t[i]=Math.floor(e/this.strides[i]),e-=t[i]*this.strides[i];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return x().makeTensor(this.values,this.shape,this.dtype)}}let x=null,O=null,w=null;function v(e){x=e}function k(e){O=e}function I(e){w=e}class N{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=o.O(e),this.strides=Object(o.j)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return O.buffer(this.shape,this.dtype,e)}bufferSync(){return O.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Object(o.T)(this.shape,e,"complex64"===this.dtype)}arraySync(){return Object(o.T)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const data=x().read(this.dataId);if("string"===this.dtype){const e=await data;try{return e.map((b=>m.decodeString(b)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return data}dataSync(){this.throwIfDisposed();const data=x().readSync(this.dataId);if("string"===this.dtype)try{return data.map((b=>m.decodeString(b)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return data}async bytes(){this.throwIfDisposed();const data=await x().read(this.dataId);return"string"===this.dtype?data:new Uint8Array(data.buffer)}dispose(){this.isDisposed||(x().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return O.print(this,e)}clone(){return this.throwIfDisposed(),O.clone(this)}toString(e=!1){return c(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),O.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),x().makeVariable(this,e,t,n)}}function j(){return Object(r.a)("Tensor",(()=>N))}Object.defineProperty(N,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),j();class S extends N{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!o.a(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);x().disposeTensor(this),this.dataId=e.dataId,x().incRef(this,null)}dispose(){x().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(S,Symbol.hasInstance,{value:e=>e instanceof N&&null!=e.assign&&e.assign instanceof Function})},1177:function(e,t,n){"use strict";n.r(t),n.d(t,"createScalarValue",(function(){return c})),n.d(t,"toTypedArray",(function(){return l})),n.d(t,"now",(function(){return d})),n.d(t,"fetch",(function(){return h})),n.d(t,"encodeString",(function(){return f})),n.d(t,"decodeString",(function(){return m}));var r=n(1192),o=n(1235);function c(e,t){return"string"===t?f(e):l([e],t)}function l(a,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(a)&&(a=o.m(a)),Object(r.b)().getBool("DEBUG")&&o.h(a,e),function(a,e){return a instanceof Float32Array&&"float32"===e||a instanceof Int32Array&&"int32"===e||a instanceof Uint8Array&&"bool"===e}(a,e))return a;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(a);if("int32"===e)return new Int32Array(a);if("bool"===e){const e=new Uint8Array(a.length);for(let i=0;i<e.length;++i)0!==Math.round(a[i])&&(e[i]=1);return e}throw new Error(`Unknown data type ${e}`)}function d(){return Object(r.b)().platform.now()}function h(path,e){return Object(r.b)().platform.fetch(path,e)}function f(s,e="utf-8"){return e=e||"utf-8",Object(r.b)().platform.encode(s,e)}function m(e,t="utf-8"){return t=t||"utf-8",Object(r.b)().platform.decode(e,t)}n.d(t,"shuffle",(function(){return o.M})),n.d(t,"shuffleCombo",(function(){return o.N})),n.d(t,"clamp",(function(){return o.i})),n.d(t,"nearestLargerEven",(function(){return o.H})),n.d(t,"sum",(function(){return o.R})),n.d(t,"randUniform",(function(){return o.J})),n.d(t,"distSquared",(function(){return o.l})),n.d(t,"assert",(function(){return o.b})),n.d(t,"assertShapesMatch",(function(){return o.e})),n.d(t,"assertNonNull",(function(){return o.d})),n.d(t,"flatten",(function(){return o.m})),n.d(t,"sizeFromShape",(function(){return o.O})),n.d(t,"isScalarShape",(function(){return o.y})),n.d(t,"arraysEqual",(function(){return o.a})),n.d(t,"isInt",(function(){return o.v})),n.d(t,"tanh",(function(){return o.S})),n.d(t,"sizeToSquarishShape",(function(){return o.P})),n.d(t,"createShuffledIndices",(function(){return o.k})),n.d(t,"rightPad",(function(){return o.L})),n.d(t,"repeatedTry",(function(){return o.K})),n.d(t,"inferFromImplicitShape",(function(){return o.s})),n.d(t,"parseAxisParam",(function(){return o.I})),n.d(t,"squeezeShape",(function(){return o.Q})),n.d(t,"getTypedArrayFromDType",(function(){return o.o})),n.d(t,"getArrayFromDType",(function(){return o.n})),n.d(t,"checkConversionForErrors",(function(){return o.h})),n.d(t,"isValidDtype",(function(){return o.B})),n.d(t,"hasEncodingLoss",(function(){return o.p})),n.d(t,"isTypedArray",(function(){return o.A})),n.d(t,"bytesPerElement",(function(){return o.g})),n.d(t,"bytesFromStringArray",(function(){return o.f})),n.d(t,"isString",(function(){return o.z})),n.d(t,"isBoolean",(function(){return o.t})),n.d(t,"isNumber",(function(){return o.w})),n.d(t,"inferDtype",(function(){return o.r})),n.d(t,"isFunction",(function(){return o.u})),n.d(t,"nearestDivisor",(function(){return o.G})),n.d(t,"computeStrides",(function(){return o.j})),n.d(t,"toNestedArray",(function(){return o.T})),n.d(t,"makeOnesTypedArray",(function(){return o.D})),n.d(t,"makeZerosTypedArray",(function(){return o.F})),n.d(t,"makeZerosNestedTypedArray",(function(){return o.E})),n.d(t,"assertNonNegativeIntegerDimensions",(function(){return o.c})),n.d(t,"locToIndex",(function(){return o.C})),n.d(t,"indexToLoc",(function(){return o.q})),n.d(t,"isPromise",(function(){return o.x}))},1178:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({reshape_:function(e,t){const n={x:Object(c.a)(e,"x","reshape","string_or_numeric")},l={shape:t};return r.a.runKernel(o.oc,n,l)}})},1179:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1187),l=n(1174),d=n(1173);const h=Object(d.a)({mul_:function(a,b){let e=Object(l.a)(a,"a","mul"),t=Object(l.a)(b,"b","mul");[e,t]=Object(c.makeTypesMatch)(e,t);const n={a:e,b:t};return r.a.runKernel(o.Vb,n)}})},1180:function(e,t,n){"use strict";n.d(t,"a",(function(){return o.a})),n.d(t,"b",(function(){return c.a})),n.d(t,"c",(function(){return l.a})),n.d(t,"d",(function(){return d.a})),n.d(t,"e",(function(){return h.a})),n.d(t,"f",(function(){return f.a})),n.d(t,"g",(function(){return m.a})),n.d(t,"h",(function(){return v})),n.d(t,"i",(function(){return k})),n.d(t,"j",(function(){return I})),n.d(t,"k",(function(){return N.a})),n.d(t,"l",(function(){return j.a})),n.d(t,"m",(function(){return S.a})),n.d(t,"n",(function(){return T.a})),n.d(t,"o",(function(){return C.a})),n.d(t,"p",(function(){return $})),n.d(t,"q",(function(){return E})),n.d(t,"r",(function(){return A})),n.d(t,"s",(function(){return R})),n.d(t,"t",(function(){return F.a})),n.d(t,"u",(function(){return D.a})),n.d(t,"v",(function(){return _.a})),n.d(t,"w",(function(){return M.a})),n.d(t,"x",(function(){return z})),n.d(t,"y",(function(){return P.a})),n.d(t,"z",(function(){return div.a})),n.d(t,"B",(function(){return B.a})),n.d(t,"C",(function(){return W.a})),n.d(t,"D",(function(){return V.a})),n.d(t,"E",(function(){return H})),n.d(t,"F",(function(){return K.a})),n.d(t,"G",(function(){return X.a})),n.d(t,"I",(function(){return Y.a})),n.d(t,"J",(function(){return J.a})),n.d(t,"K",(function(){return Z.a})),n.d(t,"M",(function(){return Q.a})),n.d(t,"O",(function(){return ee.a})),n.d(t,"P",(function(){return te.a})),n.d(t,"Q",(function(){return ne.a})),n.d(t,"R",(function(){return re.a})),n.d(t,"S",(function(){return ae.a})),n.d(t,"T",(function(){return se.a})),n.d(t,"U",(function(){return oe.a})),n.d(t,"V",(function(){return ie.a})),n.d(t,"W",(function(){return ue.a})),n.d(t,"X",(function(){return ce.a})),n.d(t,"Y",(function(){return he})),n.d(t,"Z",(function(){return pe.a})),n.d(t,"ab",(function(){return fe.a})),n.d(t,"bb",(function(){return me.a})),n.d(t,"cb",(function(){return be.a})),n.d(t,"db",(function(){return ge.a})),n.d(t,"eb",(function(){return ye.a})),n.d(t,"fb",(function(){return xe.a})),n.d(t,"gb",(function(){return Oe.a})),n.d(t,"hb",(function(){return we.a})),n.d(t,"ib",(function(){return ke})),n.d(t,"jb",(function(){return Ie.a})),n.d(t,"kb",(function(){return Ne.a})),n.d(t,"lb",(function(){return U.a})),n.d(t,"mb",(function(){return je.a})),n.d(t,"nb",(function(){return Se.a})),n.d(t,"ob",(function(){return Te.a})),n.d(t,"pb",(function(){return Ce.a})),n.d(t,"qb",(function(){return $e.a})),n.d(t,"rb",(function(){return Ee.a})),n.d(t,"sb",(function(){return Ae})),n.d(t,"tb",(function(){return Re})),n.d(t,"ub",(function(){return Fe})),n.d(t,"vb",(function(){return De})),n.d(t,"wb",(function(){return _e.a})),n.d(t,"xb",(function(){return Me.a})),n.d(t,"zb",(function(){return Le.a})),n.d(t,"Ab",(function(){return ze.a})),n.d(t,"Bb",(function(){return Pe.a})),n.d(t,"Cb",(function(){return Be.a})),n.d(t,"Db",(function(){return sub.a})),n.d(t,"Eb",(function(){return We.a})),n.d(t,"Fb",(function(){return Ve.a})),n.d(t,"Gb",(function(){return Ue.a})),n.d(t,"Hb",(function(){return Ge.a})),n.d(t,"Ib",(function(){return Ke})),n.d(t,"Jb",(function(){return G.a})),n.d(t,"Lb",(function(){return qe.a})),n.d(t,"Mb",(function(){return Xe.a})),n.d(t,"Nb",(function(){return Je})),n.d(t,"Ob",(function(){return Ze.a})),n.d(t,"Pb",(function(){return Qe.a})),n.d(t,"Qb",(function(){return et.a})),n.d(t,"Kb",(function(){return tt.a})),n.d(t,"A",(function(){return at})),n.d(t,"L",(function(){return nn})),n.d(t,"N",(function(){return rn})),n.d(t,"H",(function(){return r})),n.d(t,"yb",(function(){return an}));var r={};n.r(r),n.d(r,"conv2d",(function(){return yt})),n.d(r,"depthwiseConv2d",(function(){return wt})),n.d(r,"matMul",(function(){return kt}));var o=n(1211),c=n(1188),l=n(1289),d=n(1290),h=n(1291),f=n(1254),m=n(1331),y=n(1174),x=n(1235),O=n(1234),w=n(1173);const v=Object(w.a)({batchNorm2d_:function(e,t,n,r,o,c){const l=Object(y.a)(e,"x","batchNorm"),d=Object(y.a)(t,"mean","batchNorm"),h=Object(y.a)(n,"variance","batchNorm");let f,m;return null!=o&&(f=Object(y.a)(o,"scale","batchNorm")),null!=r&&(m=Object(y.a)(r,"offset","batchNorm")),x.b(2===l.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${l.rank}.`)),x.b(2===d.rank||1===d.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${d.rank}.`)),x.b(2===h.rank||1===h.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${h.rank}.`)),null!=f&&x.b(2===f.rank||1===f.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${f.rank}.`)),null!=m&&x.b(2===m.rank||1===m.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${m.rank}.`)),Object(O.a)(l,d,h,m,f,c)}});const k=Object(w.a)({batchNorm3d_:function(e,t,n,r,o,c){const l=Object(y.a)(e,"x","batchNorm"),d=Object(y.a)(t,"mean","batchNorm"),h=Object(y.a)(n,"variance","batchNorm");let f,m;return null!=o&&(f=Object(y.a)(o,"scale","batchNorm")),null!=r&&(m=Object(y.a)(r,"offset","batchNorm")),x.b(3===l.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${l.rank}.`)),x.b(3===d.rank||1===d.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${d.rank}.`)),x.b(3===h.rank||1===h.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${h.rank}.`)),null!=f&&x.b(3===f.rank||1===f.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${f.rank}.`)),null!=m&&x.b(3===m.rank||1===m.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${m.rank}.`)),Object(O.a)(l,d,h,m,f,c)}});const I=Object(w.a)({batchNorm4d_:function(e,t,n,r,o,c){const l=Object(y.a)(e,"x","batchNorm"),d=Object(y.a)(t,"mean","batchNorm"),h=Object(y.a)(n,"variance","batchNorm");let f,m;return null!=o&&(f=Object(y.a)(o,"scale","batchNorm")),null!=r&&(m=Object(y.a)(r,"offset","batchNorm")),x.b(4===l.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${l.rank}.`)),x.b(4===d.rank||1===d.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${d.rank}.`)),x.b(4===h.rank||1===h.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${h.rank}.`)),null!=f&&x.b(4===f.rank||1===f.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${f.rank}.`)),null!=m&&x.b(4===m.rank||1===m.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${m.rank}.`)),Object(O.a)(l,d,h,m,f,c)}});var N=n(1208),j=n(1181),S=n(1332),T=n(1222),C=n(1198);const $=Object(w.a)({concat1d_:function(e){return Object(C.a)(e,0)}});const E=Object(w.a)({concat2d_:function(e,t){return Object(C.a)(e,t)}});const A=Object(w.a)({concat3d_:function(e,t){return Object(C.a)(e,t)}});const R=Object(w.a)({concat4d_:function(e,t){return Object(C.a)(e,t)}});var F=n(1292),D=n(1212),_=n(1293),M=n(1333),L=n(1334);const z=Object(w.a)({conv3dTranspose_:function(e,filter,t,n,r){const o=Object(y.a)(e,"x","conv3dTranspose"),c=Object(y.a)(filter,"filter","conv3dTranspose");return Object(L.a)(t,o,c,n,r)}});var P=n(1239),div=n(1182),B=n(1256),W=n(1240),V=n(1241),U=n(1178),G=n(1242);const H=Object(w.a)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const o=Object(N.a)([e,t],r),c=e<=t?e:t;for(let i=0;i<c;++i)o.set(1,i,i);const l=Object(U.a)(o.toTensor(),[e,t]);if(null==n)return l;if(1===n.length)return Object(G.a)(Object(V.a)(l,0),[n[0],1,1]);if(2===n.length)return Object(G.a)(Object(V.a)(Object(V.a)(l,0),0),[n[0],n[1],1,1]);if(3===n.length)return Object(G.a)(Object(V.a)(Object(V.a)(Object(V.a)(l,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var K=n(1257),X=n(1258),Y=n(1259),J=n(1207),Z=n(1213),Q=n(1260),ee=n(1223),te=n(1335),ne=n(1214),re=n(1224),ae=n(1261),se=n(1336),oe=n(1243),ie=n(1244),ue=n(1262),ce=n(1263),le=n(1202),de=n(1190),sub=n(1183);const he=Object(w.a)({moments_:function(e,t=null,n=!1){e=Object(y.a)(e,"x","moments");const r=Object(x.I)(t,e.shape),o=Object(ie.a)(e,r,n);let c=o.shape;n||(c=Object(le.e)(o.shape,r));const l=Object(de.a)(Object(sub.a)(Object(j.a)(e,"float32"),Object(U.a)(o,c)));return{mean:o,variance:Object(ie.a)(l,r,n)}}});var pe=n(1179),fe=n(1193),me=n(1264),be=n(1295),ge=n(1225),ye=n(1337),xe=n(1265),Oe=n(1215),we=n(1266),ve=n(1296);const ke=Object(w.a)({randomNormal_:function(e,t=0,n=1,r,o){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const c=new ve.a(t,n,r,!1,o),l=Object(N.a)(e,r);for(let i=0;i<l.values.length;i++)l.values[i]=c.nextValue();return l.toTensor()}});var Ie=n(1298),Ne=n(1228),je=n(1245),Se=n(1185),Te=n(1299),Ce=n(1300),$e=n(1246),Ee=n(1197);const Ae=Object(w.a)({slice1d_:function(e,t,n){const r=Object(y.a)(e,"x","slice1d");return x.b(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Object(Ee.a)(r,[t],[n])}});const Re=Object(w.a)({slice2d_:function(e,t,n){const r=Object(y.a)(e,"x","slice2d");return x.b(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Object(Ee.a)(r,t,n)}});const Fe=Object(w.a)({slice3d_:function(e,t,n){const r=Object(y.a)(e,"x","slice3d");return x.b(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Object(Ee.a)(r,t,n)}});const De=Object(w.a)({slice4d_:function(e,t,n){const r=Object(y.a)(e,"x","slice4d");return x.b(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Object(Ee.a)(r,t,n)}});var _e=n(1339),Me=n(1301),Le=n(1229),ze=n(1203),Pe=n(1268),Be=n(1216),We=n(1189),Ve=n(1340),Ue=n(1287),Ge=n(1230),He=n(1238);function Ke(e,t,n){if(Object(x.d)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(y.c)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(He.a)(e,t,r,n)}var qe=n(1341),Xe=n(1231),Ye=n(1175);function Je(e,t=!0,n,r){return Ye.a.makeVariable(e,t,n,r)}var Ze=n(1200),Qe=n(1226),et=n(1186),tt=n(1217),nt=n(1176);const at=Object(w.a)({dropout_:function(e,t,n,r){const o=Object(y.a)(e,"x","dropout");if(x.b("float32"===o.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`)),x.b(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof nt.a?o.clone():o;const l=function(e,t){if(null==t)return e.shape.slice();if(x.a(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let i=0;i<e.shape.length;i++)null==t[i]&&null!=e.shape[i]?n.push(e.shape[i]):n.push(t[i]);return n}return t}(o,n),d=1-t,h=Object(div.a)(Object(X.a)(Object(c.a)(Object(Ie.a)(l,0,1,"float32",r),d)),d);return Object(pe.a)(o,h)}});var st=n(1272),ot=n(1270),it=n(1271),ut=n(1302),ct=n(1195),lt=n(1172),ht=n(1187),pt=n(1184),ft=n(1305),mt=n(1294),bt=n(1196),gt=n(1220);const yt=Object(w.a)({fusedConv2d_:function({x:e,filter:filter,strides:t,pad:n,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:l,bias:d,activation:h="linear",preluActivationWeights:f,leakyreluAlpha:m}){if(h=h||"linear",!1===Object(gt.d)(Ye.a.state.gradientDepth,h)){let y=Object(D.a)(e,filter,t,n,r,o,l);return null!=d&&(y=Object(c.a)(y,d)),Object(gt.a)(y,h,f,m)}const O=Object(y.a)(e,"x","conv2d"),w=Object(y.a)(filter,"filter","conv2d");let v=O,k=!1;3===O.rank&&(k=!0,v=Object(U.a)(O,[1,O.shape[0],O.shape[1],O.shape[2]])),x.b(4===v.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${v.rank}.`)),x.b(4===w.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${w.rank}.`)),null!=l&&x.b(x.v(n),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${l} but got pad ${n}.`)),x.b(v.shape[3]===w.shape[2],(()=>`Error in conv2d: depth of input (${v.shape[3]}) must match input depth for filter ${w.shape[2]}.`)),x.b(bt.h(t,o),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`)),x.b("NHWC"===r,(()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`));const I=bt.a(v.shape,w.shape,t,o,n,l);let N,j;null!=d&&(N=Object(y.a)(d,"bias","fused conv2d"),[N]=Object(ht.makeTypesMatch)(N,O),pt.a(I.outShape,N.shape)),null!=f&&(j=Object(y.a)(f,"prelu weights","fused conv2d"));const S=(e,r)=>{const[c,l,d,f]=r,m=Object(gt.c)(e,d,h);x.b(bt.i(o),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`));const y=[Object(mt.a)(l.shape,m,c,t,n),Object(ft.a)(l,m,c.shape,t,n)];if(null!=f){const e=Object(gt.b)(f,m);y.push(e)}return y},T={x:v,filter:w,bias:N,preluActivationWeights:j},C={strides:t,pad:n,dataFormat:r,dilations:o,dimRoundingMode:l,activation:h,leakyreluAlpha:m};if(null==d){return Object(ct.a)(((e,filter,t)=>{let n=Ye.a.runKernel(lt.kb,T,C);return t([filter,e,n]),k&&(n=Object(U.a)(n,[n.shape[1],n.shape[2],n.shape[3]])),{value:n,gradFunc:S}}))(v,w)}return Object(ct.a)(((e,filter,t,n)=>{let r=Ye.a.runKernel(lt.kb,T,C);return n([filter,e,r,t]),k&&(r=Object(U.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:S}}))(v,w,N)}});var xt=n(1345),Ot=n(1344);const wt=Object(w.a)({fusedDepthwiseConv2d_:function({x:e,filter:filter,strides:t,pad:n,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:l,bias:d,activation:h="linear",preluActivationWeights:f,leakyreluAlpha:m}){if(!1===Object(gt.d)(Ye.a.state.gradientDepth,h)){let y=Object(P.a)(e,filter,t,n,r,o,l);return null!=d&&(y=Object(c.a)(y,d)),Object(gt.a)(y,h,f,m)}const O=Object(y.a)(e,"x","depthwiseConv2d"),w=Object(y.a)(filter,"filter","depthwiseConv2d");let v=O,k=!1;3===O.rank&&(k=!0,v=Object(U.a)(O,[1,O.shape[0],O.shape[1],O.shape[2]])),x.b(4===v.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${v.rank}.`)),x.b(4===w.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${w.rank}.`)),x.b(v.shape[3]===w.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${v.shape[3]}) must match the inChannels dimension in filter ${w.shape[2]}.`)),null==o&&(o=[1,1]),x.b(bt.h(t,o),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`)),null!=l&&x.b(x.v(n),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${l} but got pad ${n}.`));const I=bt.a(v.shape,w.shape,t,o,n,l,!0);let N,j;null!=d&&(N=Object(y.a)(d,"bias","fused conv2d"),[N]=Object(ht.makeTypesMatch)(N,O),pt.a(I.outShape,N.shape)),null!=f&&(j=Object(y.a)(f,"prelu weights","fused depthwiseConv2d"));const S=(e,r)=>{x.b(bt.i(o),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[c,d,f,m]=r,y=Object(gt.c)(e,f,h),O=Object(Ot.a)(d.shape,y,c,t,n,o,l),w=Object(xt.a)(d,y,c.shape,t,n,o,l);if(null!=m){return[O,w,Object(gt.b)(N,y)]}return[O,w]},T={x:v,filter:w,bias:N,preluActivationWeights:j},C={strides:t,pad:n,dataFormat:r,dilations:o,dimRoundingMode:l,activation:h,leakyreluAlpha:m};if(null==d){return Object(ct.a)(((e,filter,t)=>{let n=Ye.a.runKernel(lt.lb,T,C);return t([filter,e,n]),k&&(n=Object(U.a)(n,[n.shape[1],n.shape[2],n.shape[3]])),{value:n,gradFunc:S}}))(v,w)}return Object(ct.a)(((e,filter,t,n)=>{let r=Ye.a.runKernel(lt.lb,T,C);return n([filter,e,r,t]),k&&(r=Object(U.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:S}}))(v,w,N)}});var vt=n(1219);const kt=Object(w.a)({fusedMatMul_:function({a:a,b:b,transposeA:e=!1,transposeB:t=!1,bias:n,activation:r="linear",preluActivationWeights:o,leakyreluAlpha:l}){if(!1===Object(gt.d)(Ye.a.state.gradientDepth,r)){let d=Object(vt.a)(a,b,e,t);return null!=n&&(d=Object(c.a)(d,n)),Object(gt.a)(d,r,o,l)}let d=Object(y.a)(a,"a","fused matMul"),h=Object(y.a)(b,"b","fused matMul");[d,h]=Object(ht.makeTypesMatch)(d,h);const f=e?d.shape[d.rank-2]:d.shape[d.rank-1],m=t?h.shape[h.rank-1]:h.shape[h.rank-2],O=e?d.shape[d.rank-1]:d.shape[d.rank-2],w=t?h.shape[h.rank-2]:h.shape[h.rank-1],v=d.shape.slice(0,-2),k=h.shape.slice(0,-2),I=x.O(v),N=x.O(k);x.b(d.rank>=2&&h.rank>=2&&d.rank===h.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${d.rank} and ${h.rank}.`)),x.b(x.a(v,k),(()=>`Error in fused matMul: outer dimensions (${v}) and (${k}) of Tensors with shapes ${d.shape} and ${h.shape} must match.`)),x.b(f===m,(()=>`Error in fused matMul: inner shapes (${f}) and (${m}) of Tensors with shapes ${d.shape} and ${h.shape} and transposeA=${e} and transposeB=${t} must match.`));const j=d.shape.slice(0,-2).concat([O,w]),S=e?Object(U.a)(d,[I,f,O]):Object(U.a)(d,[I,O,f]),T=t?Object(U.a)(h,[N,w,m]):Object(U.a)(h,[N,m,w]);let C,$;null!=n&&(C=Object(y.a)(n,"bias","fused matMul"),[C]=Object(ht.makeTypesMatch)(C,d),pt.a(j,C.shape)),null!=o&&($=Object(y.a)(o,"prelu weights","fused matMul"));const E=(o,c)=>{const[l,d,h,f]=c,m=Object(gt.c)(Object(U.a)(o,h.shape),h,r);let y,x;if(e||t?!e&&t?(y=Object(vt.a)(m,d,!1,!1),x=Object(vt.a)(m,l,!0,!1)):e&&!t?(y=Object(vt.a)(d,m,!1,!0),x=Object(vt.a)(l,m,!1,!1)):(y=Object(vt.a)(d,m,!0,!0),x=Object(vt.a)(m,l,!0,!0)):(y=Object(vt.a)(m,d,!1,!0),x=Object(vt.a)(l,m,!0,!1)),null!=n){return[y,x,Object(gt.b)(f,m)]}return[y,x]},A={a:S,b:T,bias:C,preluActivationWeights:$},R={transposeA:e,transposeB:t,activation:r,leakyreluAlpha:l};if(null==n){return Object(ct.a)(((e,t,n)=>{const r=Ye.a.runKernel(lt.cd,A,R);return n([e,t,r]),{value:Object(U.a)(r,j),gradFunc:E}}))(S,T)}return Object(ct.a)(((e,t,n,r)=>{const o=Ye.a.runKernel(lt.cd,A,R);return r([e,t,o,n]),{value:Object(U.a)(o,j),gradFunc:E}}))(S,T,C)}});function It(e,a,b){const t=1-e%2,n=new Float32Array(e);for(let i=0;i<e;++i){const r=2*Math.PI*i/(e+t-1);n[i]=a-b*Math.cos(r)}return Object(Ge.a)(n,"float32")}Object(w.a)({hammingWindow_:function(e){return It(e,.54,.46)}});const Nt=Object(w.a)({hannWindow_:function(e){return It(e,.5,.5)}});const jt=Object(w.a)({frame_:function(e,t,n,r=!1,o=0){let c=0;const output=[];for(;c+t<=e.size;)output.push(Object(Ee.a)(e,c,t)),c+=n;if(r)for(;c<e.size;){const r=c+t-e.size,l=Object(C.a)([Object(Ee.a)(e,c,t-r),Object(K.a)([r],o)]);output.push(l),c+=n}return 0===output.length?Ke([],[0,t]):Object(U.a)(Object(C.a)(output),[output.length,t])}});Object(w.a)({stft_:function(e,t,n,r,o=Nt){var c;null==r&&(c=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(c)/Math.log(2)))));const l=jt(e,t,n),d=Object(pe.a)(l,o(t));return Object(st.a)(d,r)}});const St=Object(w.a)({cropAndResize_:function(image,e,t,n,r="bilinear",o=0){const c=Object(y.a)(image,"image","cropAndResize"),l=Object(y.a)(e,"boxes","cropAndResize","float32"),d=Object(y.a)(t,"boxInd","cropAndResize","int32"),h=l.shape[0];x.b(4===c.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${c.rank}.`)),x.b(2===l.rank&&4===l.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${h},4] but had shape ${l.shape}.`)),x.b(1===d.rank&&d.shape[0]===h,(()=>`Error in cropAndResize: boxInd must be have size [${h}] but had shape ${l.shape}.`)),x.b(2===n.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`)),x.b(n[0]>=1&&n[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${n}`)),x.b("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const f={image:c,boxes:l,boxInd:d},m={method:r,extrapolationValue:o,cropSize:n};return Ye.a.runKernel(lt.K,f,m)}});const Tt=Object(w.a)({flipLeftRight_:function(image){const e=Object(y.a)(image,"image","flipLeftRight","float32");x.b(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const t={image:e};return Ye.a.runKernel(lt.fb,t,{})}});const Ct=Object(w.a)({rotateWithOffset_:function(image,e,t=0,n=.5){const r=Object(y.a)(image,"image","rotateWithOffset","float32");x.b(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const o={image:r},c={radians:e,fillValue:t,center:n};return Ye.a.runKernel(lt.uc,o,c)}});function $t(e,t,n,r,o,c){null==r&&(r=.5),null==o&&(o=Number.NEGATIVE_INFINITY),null==c&&(c=0);const l=e.shape[0];return n=Math.min(n,l),x.b(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),x.b(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),x.b(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),x.b(1===t.rank,(()=>"scores must be a 1D tensor")),x.b(t.shape[0]===l,(()=>`scores has incompatible shape with boxes. Expected ${l}, but was ${t.shape[0]}`)),x.b(0<=c&&c<=1,(()=>`softNmsSigma must be in [0, 1], but was '${c}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:o,softNmsSigma:c}}const Et=Object(w.a)({nonMaxSuppression_:function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY){const c=Object(y.a)(e,"boxes","nonMaxSuppression"),l=Object(y.a)(t,"scores","nonMaxSuppression"),d=$t(c,l,n,r,o),h={maxOutputSize:n=d.maxOutputSize,iouThreshold:r=d.iouThreshold,scoreThreshold:o=d.scoreThreshold};return Ye.a.runKernel(lt.Xb,{boxes:c,scores:l},h)}});var At=n(1221);const Rt=async function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY){const c=Object(y.a)(e,"boxes","nonMaxSuppressionAsync"),l=Object(y.a)(t,"scores","nonMaxSuppressionAsync"),d=$t(c,l,n,r,o);n=d.maxOutputSize,r=d.iouThreshold,o=d.scoreThreshold;const h=await Promise.all([c.data(),l.data()]),f=h[0],m=h[1],{selectedIndices:x}=Object(At.a)(f,m,n,r,o);return c!==e&&c.dispose(),l!==t&&l.dispose(),Object(Ge.a)(x,"int32")};const Ft=Object(w.a)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY,c=0){const l=Object(y.a)(e,"boxes","nonMaxSuppression"),d=Object(y.a)(t,"scores","nonMaxSuppression"),h=$t(l,d,n,r,o,c),f={boxes:l,scores:d},m={maxOutputSize:n=h.maxOutputSize,iouThreshold:r=h.iouThreshold,scoreThreshold:o=h.scoreThreshold,softNmsSigma:c=h.softNmsSigma},x=Ye.a.runKernel(lt.Zb,f,m);return{selectedIndices:x[0],selectedScores:x[1]}}});const Dt=async function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY,c=0){const l=Object(y.a)(e,"boxes","nonMaxSuppressionAsync"),d=Object(y.a)(t,"scores","nonMaxSuppressionAsync"),h=$t(l,d,n,r,o,c);n=h.maxOutputSize,r=h.iouThreshold,o=h.scoreThreshold,c=h.softNmsSigma;const f=await Promise.all([l.data(),d.data()]),m=f[0],x=f[1],{selectedIndices:O,selectedScores:w}=Object(At.c)(m,x,n,r,o,c);return l!==e&&l.dispose(),d!==t&&d.dispose(),{selectedIndices:Object(Ge.a)(O,"int32"),selectedScores:Object(Ge.a)(w)}};const _t=Object(w.a)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY,c=!1){const l=Object(y.a)(e,"boxes","nonMaxSuppression"),d=Object(y.a)(t,"scores","nonMaxSuppression"),h=$t(l,d,n,r,o,null),f={boxes:l,scores:d},m={maxOutputSize:h.maxOutputSize,iouThreshold:h.iouThreshold,scoreThreshold:h.scoreThreshold,padToMaxOutputSize:c},x=Ye.a.runKernel(lt.Yb,f,m);return{selectedIndices:x[0],validOutputs:x[1]}}});const Mt=async function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY,c=!1){const l=Object(y.a)(e,"boxes","nonMaxSuppressionAsync"),d=Object(y.a)(t,"scores","nonMaxSuppressionAsync"),h=$t(l,d,n,r,o,null),f=h.maxOutputSize,m=h.iouThreshold,x=h.scoreThreshold,[O,w]=await Promise.all([l.data(),d.data()]),{selectedIndices:v,validOutputs:k}=Object(At.b)(O,w,f,m,x,c);return l!==e&&l.dispose(),d!==t&&d.dispose(),{selectedIndices:Object(Ge.a)(v,"int32"),validOutputs:Object(Se.a)(k,"int32")}};var Lt=n(1343),zt=n(1342);const Pt=Object(w.a)({transform_:function(image,e,t="nearest",n="constant",r=0,o){const c=Object(y.a)(image,"image","transform","float32"),l=Object(y.a)(e,"transforms","transform","float32");x.b(4===c.rank,(()=>`Error in transform: image must be rank 4,but got rank ${c.rank}.`)),x.b(2===l.rank&&(l.shape[0]===c.shape[0]||1===l.shape[0])&&8===l.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),x.b(null==o||2===o.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`));const d={image:c,transforms:l},h={interpolation:t,fillMode:n,fillValue:r,outputShape:o};return Ye.a.runKernel(lt.Wc,d,h)}});var Bt=n(1218),Wt=n(1303);const Vt=Object(w.a)({bandPart_:function(a,e,t){Object(x.b)(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),Object(x.b)(t%1==0,(()=>`bandPart(): numUpper must be an integer, got ${t}.`));const n=Object(y.a)(a,"a","bandPart");Object(x.b)(n.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`));const r=n.shape,[o,c]=n.shape.slice(-2);if(!(e<=o))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`);if(!(t<=c))throw new Error(`bandPart(): numUpper (${t}) must not be greater than the number of columns (${c}).`);e<0&&(e=o),t<0&&(t=c);const i=Object(U.a)(Object(Wt.a)(0,o,1,"int32"),[-1,1]),l=Object(Wt.a)(0,c,1,"int32"),d=Object(sub.a)(i,l),h=Object(ne.a)(Object(Bt.a)(d,Object(Se.a)(+e,"int32")),Object(Z.a)(d,Object(Se.a)(-t,"int32"))),f=Object(Qe.a)([o,c],n.dtype);return Object(U.a)(Object(Be.a)(Object(Xe.a)(Object(U.a)(n,[-1,o,c])).map((e=>Object(Ze.a)(h,e,f)))),r)}});var Ut=n(1275);const Gt=Object(w.a)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Object(x.b)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let i=1;i<e.length;++i)Object(x.b)(e[i].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[i].shape[0]} vs. ${n})`))}else t=!0,e=Object(Le.a)(e,e.shape[0],0).map((e=>Object(Pe.a)(e,[0])));Object(x.b)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let i=0;i<e.length;++i)n.push(Ye.a.tidy((()=>{let e=r[i];if(i>0)for(let t=0;t<i;++t){const r=Object(pe.a)(Object(We.a)(Object(pe.a)(n[t],e)),n[t]);e=Object(sub.a)(e,r)}return Object(div.a)(e,Object(Ut.a)(e,"euclidean"))})));return t?Object(Be.a)(n,0):n}});var Ht=n(1201);function Kt(e,t=!1){return Ye.a.tidy((()=>{Object(x.b)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let q=H(n),o=Object(T.a)(e);const c=Ke([[1]],[1,1]);let l=Object(T.a)(c);const d=n>=r?r:n;for(let e=0;e<d;++e){const t=o,d=l,h=q;[l,o,q]=Ye.a.tidy((()=>{const t=Object(Ee.a)(o,[e,e],[n-e,1]),d=Object(Ut.a)(t),h=Object(Ee.a)(o,[e,e],[1,1]),s=Object(Ze.a)(Object(J.a)(h,0),Ke([[-1]]),Ke([[1]])),f=Object(sub.a)(h,Object(pe.a)(s,d)),m=Object(div.a)(t,f);l=1===m.shape[0]?Object(T.a)(c):Object(C.a)([c,Object(Ee.a)(m,[1,0],[m.shape[0]-1,m.shape[1]])],0);const y=Object(fe.a)(Object(div.a)(Object(vt.a)(s,f),d)),x=Object(Ee.a)(o,[e,0],[n-e,r]),O=Object(pe.a)(y,l),w=Object(tt.a)(l);if(0===e)o=Object(sub.a)(x,Object(vt.a)(O,Object(vt.a)(w,x)));else{const t=Object(sub.a)(x,Object(vt.a)(O,Object(vt.a)(w,x)));o=Object(C.a)([Object(Ee.a)(o,[0,0],[e,r]),t],0)}const v=Object(tt.a)(O),k=Object(Ee.a)(q,[0,e],[n,q.shape[1]-e]);if(0===e)q=Object(sub.a)(k,Object(vt.a)(Object(vt.a)(k,l),v));else{const t=Object(sub.a)(k,Object(vt.a)(Object(vt.a)(k,l),v));q=Object(C.a)([Object(Ee.a)(q,[0,0],[n,e]),t],1)}return[l,o,q]})),Object(Ht.b)([t,d,h])}return!t&&n>r&&(q=Object(Ee.a)(q,[0,0],[n,r]),o=Object(Ee.a)(o,[0,0],[r,r])),[q,o]}))}const qt=Object(w.a)({qr_:function(e,t=!1){if(Object(x.b)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Kt(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Object(Xe.a)(Object(U.a)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),o=[],c=[];r.forEach((e=>{const[n,r]=Kt(e,t);o.push(n),c.push(r)}));return[Object(U.a)(Object(Be.a)(o,0),e.shape),Object(U.a)(Object(Be.a)(c,0),e.shape)]}}});var Xt=n(1204);const Yt=Object(w.a)({computeWeightedLoss_:function(e,t,n=Xt.a.SUM_BY_NONZERO_WEIGHTS){const r=Object(y.a)(e,"losses","computeWeightedLoss");let o=null;null!=t&&(o=Object(y.a)(t,"weights","computeWeightedLoss"));const c=null==o?r:Object(pe.a)(r,o);if(n===Xt.a.NONE)return c;if(n===Xt.a.SUM)return Object(We.a)(c);if(n===Xt.a.MEAN){if(null==o)return Object(ie.a)(c);{const e=r.size/o.size,t=Object(div.a)(Object(We.a)(c),Object(We.a)(o));return e>1?Object(div.a)(t,Object(Se.a)(e)):t}}if(n===Xt.a.SUM_BY_NONZERO_WEIGHTS){if(null==o)return Object(div.a)(Object(We.a)(c),Object(Se.a)(r.size));{const e=Object(pe.a)(o,Object(ge.a)(r.shape)),t=Object(j.a)(Object(We.a)(Object(me.a)(e,Object(Se.a)(0))),"float32");return Object(div.a)(Object(We.a)(c),t)}}throw Error(`Unknown reduction: ${n}`)}});Object(w.a)({absoluteDifference_:function(e,t,n,r=Xt.a.SUM_BY_NONZERO_WEIGHTS){const c=Object(y.a)(e,"labels","absoluteDifference"),l=Object(y.a)(t,"predictions","absoluteDifference");let d=null;null!=n&&(d=Object(y.a)(n,"weights","absoluteDifference")),Object(x.e)(c.shape,l.shape,"Error in absoluteDifference: ");const h=Object(o.a)(Object(sub.a)(c,l));return Yt(h,d,r)}});Object(w.a)({cosineDistance_:function(e,t,n,r,o=Xt.a.SUM_BY_NONZERO_WEIGHTS){const c=Object(y.a)(e,"labels","cosineDistance"),l=Object(y.a)(t,"predictions","cosineDistance");let d=null;null!=r&&(d=Object(y.a)(r,"weights","cosineDistance")),Object(x.e)(c.shape,l.shape,"Error in cosineDistance: ");const h=Object(Se.a)(1),f=Object(sub.a)(h,Object(We.a)(Object(pe.a)(c,l),n,!0));return Yt(f,d,o)}});Object(w.a)({hingeLoss_:function(e,t,n,r=Xt.a.SUM_BY_NONZERO_WEIGHTS){let o=Object(y.a)(e,"labels","hingeLoss");const c=Object(y.a)(t,"predictions","hingeLoss");let l=null;null!=n&&(l=Object(y.a)(n,"weights","hingeLoss")),Object(x.e)(o.shape,c.shape,"Error in hingeLoss: ");const d=Object(Se.a)(1);o=Object(sub.a)(Object(pe.a)(Object(Se.a)(2),o),d);const h=Object(Ne.a)(Object(sub.a)(d,Object(pe.a)(o,c)));return Yt(h,l,r)}});Object(w.a)({huberLoss_:function(e,t,n,r=1,l=Xt.a.SUM_BY_NONZERO_WEIGHTS){const d=Object(y.a)(e,"labels","huberLoss"),h=Object(y.a)(t,"predictions","huberLoss");let f=null;null!=n&&(f=Object(y.a)(n,"weights","huberLoss")),Object(x.e)(d.shape,h.shape,"Error in huberLoss: ");const m=Object(Se.a)(r),O=Object(o.a)(Object(sub.a)(h,d)),w=Object(ce.a)(O,m),v=Object(sub.a)(O,w),k=Object(c.a)(Object(pe.a)(Object(Se.a)(.5),Object(de.a)(w)),Object(pe.a)(m,v));return Yt(k,f,l)}});Object(w.a)({logLoss_:function(e,t,n,r=1e-7,o=Xt.a.SUM_BY_NONZERO_WEIGHTS){const l=Object(y.a)(e,"labels","logLoss"),d=Object(y.a)(t,"predictions","logLoss");let h=null;null!=n&&(h=Object(y.a)(n,"weights","logLoss")),Object(x.e)(l.shape,d.shape,"Error in logLoss: ");const f=Object(Se.a)(1),m=Object(Se.a)(r),O=Object(fe.a)(Object(pe.a)(l,Object(ee.a)(Object(c.a)(d,m)))),w=Object(pe.a)(Object(sub.a)(f,l),Object(ee.a)(Object(c.a)(Object(sub.a)(f,d),m))),v=Object(sub.a)(O,w);return Yt(v,h,o)}});var Jt=n(1276);Object(w.a)({meanSquaredError_:function(e,t,n,r=Xt.a.SUM_BY_NONZERO_WEIGHTS){const o=Object(y.a)(e,"labels","meanSquaredError"),c=Object(y.a)(t,"predictions","meanSquaredError");let l=null;null!=n&&(l=Object(y.a)(n,"weights","meanSquaredError")),Object(x.e)(o.shape,c.shape,"Error in meanSquaredError: ");const d=Object(Jt.a)(o,c);return Yt(d,l,r)}});var Zt=n(1206),Qt=n(1304);Object(w.a)({sigmoidCrossEntropy_:function(e,t,n,r=0,l=Xt.a.SUM_BY_NONZERO_WEIGHTS){let d=Object(y.a)(e,"multiClassLabels","sigmoidCrossEntropy");const h=Object(y.a)(t,"logits","sigmoidCrossEntropy");let f=null;if(null!=n&&(f=Object(y.a)(n,"weights","sigmoidCrossEntropy")),Object(x.e)(d.shape,h.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Object(Se.a)(r),t=Object(Se.a)(1),n=Object(Se.a)(.5);d=Object(c.a)(Object(pe.a)(d,Object(sub.a)(t,e)),Object(pe.a)(n,e))}const m=function(e,t){const n=Object(y.a)(e,"labels","sigmoidCrossEntropyWithLogits"),r=Object(y.a)(t,"logits","sigmoidCrossEntropyWithLogits");Object(x.e)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const l=Object(Ne.a)(r),d=Object(pe.a)(r,n),h=Object(Qt.a)(Object(Zt.a)(Object(fe.a)(Object(o.a)(r))));return Object(c.a)(Object(sub.a)(l,d),h)}(d,h);return Yt(m,f,l)}});var en=n(1277);Object(w.a)({softmaxCrossEntropy_:function(e,t,n,r=0,o=Xt.a.SUM_BY_NONZERO_WEIGHTS){let l=Object(y.a)(e,"onehotLabels","softmaxCrossEntropy");const d=Object(y.a)(t,"logits","softmaxCrossEntropy");let h=null;if(null!=n&&(h=Object(y.a)(n,"weights","softmaxCrossEntropy")),Object(x.e)(l.shape,d.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Object(Se.a)(r),t=Object(Se.a)(1),n=Object(Se.a)(l.shape[1]);l=Object(c.a)(Object(pe.a)(l,Object(sub.a)(t,e)),Object(div.a)(e,n))}const f=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Object(ct.a)(((e,t,r)=>{const o=Object(en.a)(t,[n],!0),c=Object(sub.a)(Object(j.a)(t,"float32"),o);r([e,c]);const l=Object(fe.a)(Object(pe.a)(c,e));return{value:Object(We.a)(l,[n]),gradFunc:(e,t)=>{const[r,o]=t,c=Object(le.e)(e.shape,[n]);return[Object(pe.a)(Object(U.a)(e,c),Object(sub.a)(Object(j.a)(r,"float32"),Object(Zt.a)(o))),Object(pe.a)(Object(U.a)(e,c),Object(sub.a)(Object(Zt.a)(o),Object(j.a)(r,"float32")))]}}}))(e,t)}(l,d);return Yt(f,h,o)}});const tn=Object(w.a)({sparseReshape_:function(e,t,n){const r=Object(y.a)(e,"inputIndices","sparseReshape"),o=Object(y.a)(t,"inputShape","sparseReshape"),c=Object(y.a)(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==o.rank)throw new Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(1!==c.rank)throw new Error(`New shape should be Tensor1D but received shape ${c.shape}`);const l={inputIndices:r,inputShape:o,newShape:c},d=Ye.a.runKernel(lt.Ic,l);return{outputIndices:d[0],outputShape:d[1]}}}),nn=(ot.a,it.a,st.a,ut.a,{flipLeftRight:Tt,resizeNearestNeighbor:zt.a,resizeBilinear:Lt.a,rotateWithOffset:Ct,cropAndResize:St,nonMaxSuppression:Et,nonMaxSuppressionAsync:Rt,nonMaxSuppressionWithScore:Ft,nonMaxSuppressionWithScoreAsync:Dt,nonMaxSuppressionPadded:_t,nonMaxSuppressionPaddedAsync:Mt,transform:Pt}),rn={bandPart:Vt,gramSchmidt:Gt,qr:qt},an={sparseReshape:tn}},1181:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1173);const h=Object(d.a)({cast_:function(e,t){const n=Object(c.a)(e,"x","cast");if(!l.B(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const d={x:n},h={dtype:t};return r.a.runKernel(o.w,d,h)}})},1182:function(e,t,n){"use strict";n.d(t,"a",(function(){return div}));var r=n(1175),o=n(1172),c=n(1187),l=n(1174),d=n(1255),h=n(1173);const div=Object(h.a)({div_:function(a,b){let e=Object(l.a)(a,"a","div"),t=Object(l.a)(b,"b","div");if([e,t]=Object(c.makeTypesMatch)(e,t),"int32"===e.dtype&&"int32"===t.dtype)return Object(d.a)(e,t);const n={a:e,b:t};return r.a.runKernel(o.kc,n,{})}})},1183:function(e,t,n){"use strict";n.d(t,"a",(function(){return sub}));var r=n(1175),o=n(1172),c=n(1187),l=n(1174),d=n(1173);const sub=Object(d.a)({sub_:function(a,b){let e=Object(l.a)(a,"a","sub"),t=Object(l.a)(b,"b","sub");[e,t]=Object(c.makeTypesMatch)(e,t);const n={a:e,b:t};return r.a.runKernel(o.Qc,n)}})},1184:function(e,t,n){"use strict";function r(e,t){const n=e.length,r=[];for(let i=0;i<n;i++){const o=n-1-i,a=e[o]||1;(t[t.length-1-i]||1)>1&&1===a&&r.unshift(o)}return r}function o(e,t){const n=[];for(let i=0;i<t.length;i++){const r=e[e.length-i-1],o=t.length-i-1,c=t[o];(null==r||1===r&&c>1)&&n.unshift(o)}return n}function c(e,t){const n=[],r=Math.max(e.length,t.length);for(let i=0;i<r;i++){let a=e[e.length-i-1];null==a&&(a=1);let b=t[t.length-i-1];if(null==b&&(b=1),1===a)n.unshift(b);else if(1===b)n.unshift(a);else{if(a!==b){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(a)}}return n}n.d(t,"b",(function(){return r})),n.d(t,"c",(function(){return o})),n.d(t,"a",(function(){return c}))},1185:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(1235),o=n(1238);function c(e,t){if((Object(r.A)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Object(r.A)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Object(o.a)(e,[],[],t)}},1186:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({zerosLike_:function(e){const t={x:Object(c.a)(e,"x","zerosLike")};return r.a.runKernel(o.bd,t)}})},1187:function(e,t,n){"use strict";n.r(t),n.d(t,"makeTypesMatch",(function(){return l})),n.d(t,"assertTypesMatch",(function(){return d})),n.d(t,"isTensorInList",(function(){return h})),n.d(t,"getTensorsInContainer",(function(){return f}));var r=n(1176),o=n(1209),c=n(1235);function l(a,b){if(a.dtype===b.dtype)return[a,b];const e=Object(o.b)(a.dtype,b.dtype);return[a.cast(e),b.cast(e)]}function d(a,b){Object(c.b)(a.dtype===b.dtype,(()=>`The dtypes of the first(${a.dtype}) and second(${b.dtype}) input must match`))}function h(e,t){return t.some((t=>t.id===e.id))}function f(e){const t=[];return m(e,t,new Set),t}function m(e,t,n){if(null==e)return;if(e instanceof r.a)return void t.push(e);if(o=e,!Array.isArray(o)&&"object"!=typeof o)return;var o;const c=e;for(const e in c){const r=c[e];n.has(r)||(n.add(r),m(r,t,n))}}},1188:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1187),l=n(1174),d=n(1173);const h=Object(d.a)({add_:function(a,b){let e=Object(l.a)(a,"a","add"),t=Object(l.a)(b,"b","add");[e,t]=Object(c.makeTypesMatch)(e,t);const n={a:e,b:t};return r.a.runKernel(o.d,n)}})},1189:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1174),l=n(1181),d=n(1173);const h=Object(d.a)({sum_:function(e,t=null,n=!1){let d=Object(c.a)(e,"x","sum");"bool"===d.dtype&&(d=Object(l.a)(d,"int32"));const h={x:d},f={axis:t,keepDims:n};return r.a.runKernel(o.Rc,h,f)}})},1190:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(1175),o=n(1174),c=n(1173);const l=Object(c.a)({square_:function(e){const t=Object(o.a)(e,"x","square");return r.a.runKernel("Square",{x:t},{})}})},1191:function(e,t,n){"use strict";n.d(t,"d",(function(){return o})),n.d(t,"e",(function(){return c})),n.d(t,"f",(function(){return l})),n.d(t,"b",(function(){return d})),n.d(t,"g",(function(){return f})),n.d(t,"c",(function(){return m})),n.d(t,"a",(function(){return y}));var r=n(1171);function o(e,t,n,o,l){const d=t.inputParams[e];if(d&&void 0!==d.inputIndexStart){const e=d.inputIndexStart,h=0===d.inputIndexEnd?void 0:void 0===d.inputIndexEnd?e+1:d.inputIndexEnd;if("tensor"===d.type)return c(t.inputNames[d.inputIndexStart],n,o,l);if("tensors"===d.type){return t.inputNames.slice(e,h).map((e=>c(e,n,o,l)))}const f=c(t.inputNames.slice(e)[0],n,o,l),data=f.dataSync();return"number"===d.type?data[0]:r.of.toNestedArray(f.shape,data)}const h=t.attrParams[e];return h&&h.value}function c(e,t,n,r){const[o,c]=f(e);if(null!=r){const e=r.getHashTableHandleByName(o);if(null!=e)return e}const l=n.currentContextIds.find((e=>!!t[h(o,e)]));return void 0!==l?t[h(o,l)][c]:void 0}function l(e,t,n){return t[h(e,n.currentContextId)]}function d(e,t){const[n,r]=f(e);return[h(n,t&&t.currentContextId),r]}function h(e,t){return t?`${e}-${t}`:e}function f(e){const t=e.split(":");if(1===t.length)return[e,0];return[t[0],Number(t[t.length-1])]}function m(e,t,n){let r=o("pad",e,t,n);if("explicit"===r){r=o("explicitPaddings",e,t,n);const c=[[0,0],[0,0],[0,0],[0,0]];for(let i=0;i<4;i++)c[i][0]=r[2*i],c[i][1]=r[2*i+1];return c}return r}function y(e){return e.kept?e:Object(r.wd)(e)}},1192:function(e,t,n){"use strict";n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return d})),n.d(t,"c",(function(){return f}));var r=n(1235);const o="tfjsflags";class c{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=l,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Object(r.x)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(o in e){e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}}function l(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((s,...e)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,e[0],e[1]),e.join("=")))),t}function d(){return h}let h=null;function f(e){h=e}},1193:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({neg_:function(e){const t={x:Object(c.a)(e,"x","neg")};return r.a.runKernel(o.Wb,t)}})},1195:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return l}));var r=n(1175),o=n(1176),c=(n(1174),n(1235));function l(e,t){c.b(c.u(e),(()=>"The f passed in variableGrads(f) must be a function")),c.b(null==t||Array.isArray(t)&&t.every((e=>e instanceof o.c)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in r.a.registeredVariables)t.push(r.a.registeredVariables[e])}const l=n?t.filter((e=>!e.trainable)):null,d=t.length;t=t.filter((e=>e.trainable)),c.b(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${d} variables is trainable.`));const{value:h,grads:f}=r.a.gradients(e,t,null,!0);c.b(f.some((g=>null!=g)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),c.b(0===h.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${h.rank} tensor`));const m={};return t.forEach(((e,i)=>{null!=f[i]&&(m[e.name]=f[i])})),null!=l&&l.forEach((e=>m[e.name]=null)),{value:h,grads:m}}function d(e){return r.a.customGrad(e)}},1196:function(e,t,n){"use strict";function r(e,t,n,r,o="NHWC",c){return l(e,[...t,e[3]],n,c,r,null,null,v(o))}function o(e,t,n,r,o,c,d="channelsLast"){const[h,m]=f(t);let y;if("channelsLast"===d)y=[h,m,e[3],e[3]];else{if("channelsFirst"!==d)throw new Error(`Unknown dataFormat ${d}`);y=[h,m,e[1],e[1]]}return l(e,y,n,r,o,c,!1,d)}function c(e,t,n,r,o,c,l="NDHWC"){const[h,f,y]=m(t);let x,O;if("NDHWC"===l)O="channelsLast",x=[h,f,y,e[4],e[4]];else{if("NCDHW"!==l)throw new Error(`Unknown dataFormat ${l}`);O="channelsFirst",x=[h,f,y,e[1],e[1]]}return d(e,x,n,r,o,!1,O,c)}function l(e,t,n,r,o,c,l=!1,d="channelsLast"){let[m,O,w,v]=[-1,-1,-1,-1];if("channelsLast"===d)[m,O,w,v]=e;else{if("channelsFirst"!==d)throw new Error(`Unknown dataFormat ${d}`);[m,v,O,w]=e}const[k,I,,N]=t,[j,S]=f(n),[T,C]=f(r),$=y(k,T),E=y(I,C),{padInfo:A,outHeight:R,outWidth:F}=function(e,t,n,r,o,c,l,d,f){let m,y,O;if("number"==typeof e){m={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const o=function(e,t,n,r,o){null==r&&(r=h(e,t,n));const c=e[0],l=e[1],d=x((c-t+2*r)/n+1,o),f=x((l-t+2*r)/n+1,o);return[d,f]}([t,n],c,r,e,d);y=o[0],O=o[1]}else if("same"===e){y=Math.ceil(t/r),O=Math.ceil(n/o);const e=Math.max(0,(y-1)*r+c-t),d=Math.max(0,(O-1)*o+l-n),h=Math.floor(e/2),f=e-h,x=Math.floor(d/2);m={top:h,bottom:f,left:x,right:d-x,type:"SAME"}}else if("valid"===e)m={top:0,bottom:0,left:0,right:0,type:"VALID"},y=Math.ceil((t-c+1)/r),O=Math.ceil((n-l+1)/o);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const h="channelsLast"===f?e[1][0]:e[2][0],w="channelsLast"===f?e[1][1]:e[2][1],v="channelsLast"===f?e[2][0]:e[3][0],k="channelsLast"===f?e[2][1]:e[3][1];m={top:h,bottom:w,left:v,right:k,type:0===h&&0===w&&0===v&&0===k?"VALID":"EXPLICIT"},y=x((t-c+h+w)/r+1,d),O=x((n-l+v+k)/o+1,d)}}return{padInfo:m,outHeight:y,outWidth:O}}(o,O,w,j,S,$,E,c,d),D=l?N*v:N;let _;return"channelsFirst"===d?_=[m,D,R,F]:"channelsLast"===d&&(_=[m,R,F,D]),{batchSize:m,dataFormat:d,inHeight:O,inWidth:w,inChannels:v,outHeight:R,outWidth:F,outChannels:D,padInfo:A,strideHeight:j,strideWidth:S,filterHeight:k,filterWidth:I,effectiveFilterHeight:$,effectiveFilterWidth:E,dilationHeight:T,dilationWidth:C,inShape:e,outShape:_,filterShape:t}}function d(e,t,n,r,o,c=!1,l="channelsLast",d){let[f,O,w,v,k]=[-1,-1,-1,-1,-1];if("channelsLast"===l)[f,O,w,v,k]=e;else{if("channelsFirst"!==l)throw new Error(`Unknown dataFormat ${l}`);[f,k,O,w,v]=e}const[I,N,j,,S]=t,[T,C,$]=m(n),[E,A,R]=m(r),F=y(I,E),D=y(N,A),_=y(j,R),{padInfo:M,outDepth:L,outHeight:z,outWidth:P}=function(e,t,n,r,o,c,l,d,f,m,y){let O,w,v,k;if("number"==typeof e){O={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const c=function(e,t,n,r,o,c){null==o&&(o=h(e,t,r));const l=e[0],d=e[1],f=e[2],m=x((l-t+2*o)/r+1,c),y=x((d-t+2*o)/r+1,c),O=x((f-t+2*o)/r+1,c);return[m,y,O,n]}([t,n,r,1],d,1,o,e,y);w=c[0],v=c[1],k=c[2]}else if("same"===e){w=Math.ceil(t/o),v=Math.ceil(n/c),k=Math.ceil(r/l);const e=(w-1)*o+d-t,h=(v-1)*c+f-n,y=(k-1)*l+m-r,x=Math.floor(e/2),I=e-x,N=Math.floor(h/2),j=h-N,S=Math.floor(y/2);O={top:N,bottom:j,left:S,right:y-S,front:x,back:I,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);O={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},w=Math.ceil((t-d+1)/o),v=Math.ceil((n-f+1)/c),k=Math.ceil((r-m+1)/l)}return{padInfo:O,outDepth:w,outHeight:v,outWidth:k}}(o,O,w,v,T,C,$,F,D,_,d),B=c?S*k:S;let W;return"channelsFirst"===l?W=[f,B,L,z,P]:"channelsLast"===l&&(W=[f,L,z,P,B]),{batchSize:f,dataFormat:l,inDepth:O,inHeight:w,inWidth:v,inChannels:k,outDepth:L,outHeight:z,outWidth:P,outChannels:B,padInfo:M,strideDepth:T,strideHeight:C,strideWidth:$,filterDepth:I,filterHeight:N,filterWidth:j,effectiveFilterDepth:F,effectiveFilterHeight:D,effectiveFilterWidth:_,dilationDepth:E,dilationHeight:A,dilationWidth:R,inShape:e,outShape:W,filterShape:t}}function h(e,t,n,r=1){const o=y(t,r);return Math.floor((e[0]*(n-1)-n+o)/2)}function f(param){return"number"==typeof param?[param,param,param]:2===param.length?[param[0],param[1],1]:param}function m(param){return"number"==typeof param?[param,param,param]:param}function y(e,t){return t<=1?e:e+(e-1)*(t-1)}function x(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function O(param){const[e,t,n]=f(param);return 1===e&&1===t&&1===n}function w(e,t){return O(e)||O(t)}function v(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}n.d(t,"d",(function(){return r})),n.d(t,"e",(function(){return o})),n.d(t,"f",(function(){return c})),n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return d})),n.d(t,"c",(function(){return h})),n.d(t,"i",(function(){return O})),n.d(t,"h",(function(){return w})),n.d(t,"g",(function(){return v}))},1197:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({slice_:function(e,t,n){const l=Object(c.a)(e,"x","slice","string_or_numeric");if(0===l.rank)throw new Error("Slicing scalar is not possible");const d={x:l},h={begin:t,size:n};return r.a.runKernel(o.Ec,d,h)}})},1198:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1222),h=n(1173);const f=Object(h.a)({concat_:function(e,t=0){Object(l.b)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Object(c.b)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Object(d.a)(n[0]);const h=n,f={axis:t};return r.a.runKernel(o.B,h,f)}})},1199:function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},1200:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(1175),o=n(1172),c=n(1174),l=n(1269),d=n(1184),h=n(1173);const f=Object(h.a)({where_:function(e,a,b){const t=Object(c.a)(a,"a","where"),n=Object(c.a)(b,"b","where"),h=Object(c.a)(e,"condition","where","bool"),f=Object(d.a)(Object(d.a)(h.shape,t.shape),n.shape),m={condition:Object(l.a)(h,f),t:Object(l.a)(t,f),e:Object(l.a)(n,f)};return r.a.runKernel(o.yc,m)}})},1201:function(e,t,n){"use strict";n.d(t,"c",(function(){return d})),n.d(t,"e",(function(){return h})),n.d(t,"h",(function(){return f})),n.d(t,"b",(function(){return m})),n.d(t,"d",(function(){return y})),n.d(t,"g",(function(){return x})),n.d(t,"f",(function(){return O})),n.d(t,"a",(function(){return w}));var r=n(1175),o=n(1192),c=n(1176),l=n(1187);function d(){return r.a}function h(){return r.a.memory()}function f(e,t){return r.a.tidy(e,t)}function m(e){Object(l.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function y(e){return r.a.keep(e)}function x(e){return r.a.setBackend(e)}function O(e,t,n=1){return r.a.registerBackend(e,t,n)}function w(){return r.a.backend}Object(c.e)((function(e){Object(o.b)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}))},1202:function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"c",(function(){return c})),n.d(t,"d",(function(){return l})),n.d(t,"e",(function(){return d})),n.d(t,"a",(function(){return h})),n.d(t,"f",(function(){return f})),n.d(t,"h",(function(){return m})),n.d(t,"g",(function(){return y}));var r=n(1235);function o(e,t){for(let i=0;i<e.length;++i)if(e[e.length-i-1]!==t-1-i)return!1;return!0}function c(e,t,n){const r=e.length+t.length,o=[];let c=0,l=0;for(let d=0;d<r;d++)-1===n.indexOf(d)?o.push(e[c++]):o.push(t[l++]);return o}function l(e,t){const n=[],r=e.length;for(let o=0;o<r;o++)-1===t.indexOf(o)&&n.push(e[o]);return[n,t.map((t=>e[t]))]}function d(e,t){return c(e,t.map((e=>1)),t)}function h(e,t,n){r.b(o(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function f(e,t){if(o(e,t))return null;const n=[];for(let i=0;i<t;++i)-1===e.indexOf(i)&&n.push(i);return e.forEach((e=>n.push(e))),n}function m(e){return e.map(((e,i)=>[i,e])).sort(((a,b)=>a[1]-b[1])).map((e=>e[0]))}function y(e,t){const n=[];for(let i=t-e;i<t;++i)n.push(i);return n}},1203:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({sqrt_:function(e){const t={x:Object(c.a)(e,"x","sqrt")};return r.a.runKernel(o.Lc,t)}})},1204:function(e,t,n){"use strict";var r;n.d(t,"a",(function(){return r})),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},1205:function(e,t,n){"use strict";(function(e){n.d(t,"f",(function(){return d})),n.d(t,"e",(function(){return h})),n.d(t,"a",(function(){return x})),n.d(t,"b",(function(){return O})),n.d(t,"d",(function(){return w})),n.d(t,"c",(function(){return v})),n.d(t,"g",(function(){return k}));var r=n(1210),o=n(1287),c=n(1235),l=n(1328);async function d(e,t){const n=[],r=[],o=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let i=0;i<o.length;++i){const c=o[i],l=Array.isArray(e)?e[i].tensor:e[c];if("float32"!==l.dtype&&"int32"!==l.dtype&&"bool"!==l.dtype&&"string"!==l.dtype&&"complex64"!==l.dtype)throw new Error(`Unsupported dtype in weight '${c}': ${l.dtype}`);const d={name:c,shape:l.shape,dtype:l.dtype};if("string"===l.dtype){const e=new Promise((async e=>{const t=await l.bytes(),n=t.reduce(((p,e)=>p+e.length),0)+4*t.length,r=new Uint8Array(n);let o=0;for(let i=0;i<t.length;i++){const e=t[i],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,o),o+=4,r.set(e,o),o+=e.length}e(r)}));r.push(e)}else r.push(l.data());null!=t&&(d.group=t),n.push(d)}return{data:f(await Promise.all(r)),specs:n}}function h(e,t){const n={};let d,h=0;for(const f of t){const t=f.name,m=f.dtype,y=f.shape,x=Object(c.O)(y);let O;if("quantization"in f){const n=f.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${f.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${f.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==m)throw new Error(`Weight ${f.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${m}.`)}const r=l.a[n.dtype],o=e.slice(h,h+x*r),c="uint8"===n.dtype?new Uint8Array(o):new Uint16Array(o);if("float32"===m)if("uint8"===n.dtype||"uint16"===n.dtype){O=new Float32Array(c.length);for(let i=0;i<c.length;i++){const e=c[i];O[i]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===d&&(d=I()),O=d(c)}else{if("int32"!==m)throw new Error(`Unsupported dtype in weight '${t}': ${m}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);O=new Int32Array(c.length);for(let i=0;i<c.length;i++){const e=c[i];O[i]=Math.round(e*n.scale+n.min)}}h+=x*r}else if("string"===m){const t=Object(c.O)(f.shape);O=[];for(let i=0;i<t;i++){const t=new Uint32Array(e.slice(h,h+4))[0];h+=4;const n=new Uint8Array(e.slice(h,h+t));O.push(n),h+=t}}else{const c=l.a[m],d=e.slice(h,h+x*c);if("float32"===m)O=new Float32Array(d);else if("int32"===m)O=new Int32Array(d);else if("bool"===m)O=new Uint8Array(d);else{if("complex64"!==m)throw new Error(`Unsupported dtype in weight '${t}': ${m}`);{O=new Float32Array(d);const e=new Float32Array(O.length/2),image=new Float32Array(O.length/2);for(let i=0;i<e.length;i++)e[i]=O[2*i],image[i]=O[2*i+1];const c=Object(o.a)(e,y,"float32"),l=Object(o.a)(image,y,"float32");n[t]=Object(r.a)(c,l),c.dispose(),l.dispose()}}h+=x*c}"complex64"!==m&&(n[t]=Object(o.a)(O,y,m))}return n}function f(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let o=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),o),o+=e.byteLength})),r.buffer}const m=void 0!==e&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function y(t){return m?e.byteLength(t):new Blob([t]).size}function x(t){if(m)return e.from(t).toString("base64");const n=new Uint8Array(t);let s="";for(let i=0,e=n.length;i<e;i++)s+=String.fromCharCode(n[i]);return btoa(s)}function O(t){if(m){const n=e.from(t,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const s=atob(t),n=new Uint8Array(s.length);for(let i=0;i<s.length;++i)n.set([s.charCodeAt(i)],i);return n.buffer}function w(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function v(path){for(path=path.trim();path.endsWith("/");)path=path.slice(0,path.length-1);const e=path.split("/");return e[e.length-1]}function k(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:y(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:y(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function I(){const e=function(){const e=i=>{let e=i<<13,t=0;for(;0==(8388608&e);)t-=8388608,e<<=1;return e&=-8388609,t+=947912704,e|t},t=new Uint32Array(2048);t[0]=0;for(let i=1;i<1024;i++)t[i]=e(i);for(let i=1024;i<2048;i++)t[i]=939524096+(i-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let i=1;i<31;i++)e[i]=i<<23;for(let i=33;i<63;i++)e[i]=2147483648+(i-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let i=0;i<64;i++)e[i]=1024;return e[0]=e[32]=0,e}();return r=>{const o=new ArrayBuffer(4*r.length),c=new Uint32Array(o);for(let o=0;o<r.length;o++){const l=r[o],d=e[n[l>>10]+(1023&l)]+t[l>>10];c[o]=d}return new Float32Array(o)}}}).call(this,n(1286).Buffer)},1206:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({exp_:function(e){const t={x:Object(c.a)(e,"x","exp")};return r.a.runKernel(o.ab,t)}})},1207:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(1175),o=n(1172),c=n(1187),l=n(1174),d=n(1184),h=n(1173);const f=Object(h.a)({greater_:function(a,b){let e=Object(l.a)(a,"a","greater"),t=Object(l.a)(b,"b","greater");[e,t]=Object(c.makeTypesMatch)(e,t),Object(d.a)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.ob,n)}})},1208:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(1176),o=n(1235);function c(e,t="float32",n){return t=t||"float32",o.c(e),new r.b(e,t,n)}},1209:function(e,t,n){"use strict";var r,o,c,l,d;n.d(t,"b",(function(){return f})),n.d(t,"a",(function(){return m})),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(o||(o={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(c||(c={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(l||(l={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(d||(d={}));const h={float32:l,int32:o,bool:c,complex64:d};function f(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return h[e][t]}function m(e){return f(e,"int32")}},1210:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1173);const h=Object(d.a)({complex_:function(e,t){const n=Object(c.a)(e,"real","complex"),d=Object(c.a)(t,"imag","complex");l.e(n.shape,d.shape,`real and imag shapes, ${n.shape} and ${d.shape}, must match in call to tf.complex().`);const h={real:n,imag:d};return r.a.runKernel(o.z,h)}})},1211:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({abs_:function(e){const t=Object(c.a)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r.a.runKernel(o.A,e)}{const e={x:t};return r.a.runKernel(o.a,e)}}})},1212:function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1196),h=n(1173),f=n(1178);const m=Object(h.a)({conv2d_:function(e,filter,t,n,h="NHWC",m=[1,1],y){const x=Object(c.a)(e,"x","conv2d"),O=Object(c.a)(filter,"filter","conv2d");let w=x,v=!1;3===x.rank&&(v=!0,w=Object(f.a)(x,[1,x.shape[0],x.shape[1],x.shape[2]])),l.b(4===w.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${w.rank}.`)),l.b(4===O.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${O.rank}.`)),null!=y&&l.b(l.v(n),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${y} but got pad ${n}.`));const k="NHWC"===h?w.shape[3]:w.shape[1];l.b(k===O.shape[2],(()=>`Error in conv2d: depth of input (${k}) must match input depth for filter ${O.shape[2]}.`)),l.b(d.h(t,m),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${m}'`));const I={x:w,filter:O},N={strides:t,pad:n,dataFormat:h,dilations:m,dimRoundingMode:y},j=r.a.runKernel(o.C,I,N);return v?Object(f.a)(j,[j.shape[1],j.shape[2],j.shape[3]]):j}})},1213:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(1175),o=n(1172),c=n(1187),l=n(1174),d=n(1184),h=n(1173);const f=Object(h.a)({greaterEqual_:function(a,b){let e=Object(l.a)(a,"a","greaterEqual"),t=Object(l.a)(b,"b","greaterEqual");[e,t]=Object(c.makeTypesMatch)(e,t),Object(d.a)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.pb,n)}})},1214:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1174),l=n(1184),d=n(1173);const h=Object(d.a)({logicalAnd_:function(a,b){const e=Object(c.a)(a,"a","logicalAnd","bool"),t=Object(c.a)(b,"b","logicalAnd","bool");Object(l.a)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.Fb,n)}})},1215:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1187),l=n(1174),d=n(1173);const h=Object(d.a)({pow_:function(base,e){let t=Object(l.a)(base,"base","pow"),n=Object(l.a)(e,"exp","pow");[t,n]=Object(c.makeTypesMatch)(t,n);const d={a:t,b:n};return r.a.runKernel(o.fc,d)}})},1216:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1173);const h=Object(d.a)({stack_:function(e,t=0){const n=Object(c.b)(e,"tensors","stack","string_or_numeric");l.b(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&l.b(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const d=n,h={axis:t};return r.a.runKernel(o.dc,d,h)}})},1217:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1173);const h=Object(d.a)({transpose_:function(e,t){const n=Object(c.a)(e,"x","transpose");if(null==t&&(t=n.shape.map(((s,i)=>i)).reverse()),l.b(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{l.b(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const d={x:n},h={perm:t};return r.a.runKernel(o.Xc,d,h)}})},1218:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(1175),o=n(1172),c=n(1187),l=n(1174),d=n(1184),h=n(1173);const f=Object(h.a)({lessEqual_:function(a,b){let e=Object(l.a)(a,"a","lessEqual"),t=Object(l.a)(b,"b","lessEqual");[e,t]=Object(c.makeTypesMatch)(e,t),Object(d.a)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.Ab,n)}})},1219:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1187),l=n(1174),d=n(1173);const h=Object(d.a)({matMul_:function(a,b,e=!1,t=!1){let n=Object(l.a)(a,"a","matMul"),d=Object(l.a)(b,"b","matMul");[n,d]=Object(c.makeTypesMatch)(n,d);const h={a:n,b:d},f={transposeA:e,transposeB:t};return r.a.runKernel(o.s,h,f)}})},1220:function(e,t,n){"use strict";n.d(t,"c",(function(){return w})),n.d(t,"b",(function(){return v})),n.d(t,"a",(function(){return k})),n.d(t,"d",(function(){return I}));var r=n(1184),o=n(1256),c=n(1260),l=n(1179),d=n(1266),h=n(1228),f=n(1278),m=n(1178),y=n(1246),x=n(1232),O=n(1189);function w(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Object(l.a)(e,Object(x.a)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function v(e,t){let n=t;const o=r.c(e.shape,t.shape);return o.length>0&&(n=Object(O.a)(n,o)),Object(m.a)(n,e.shape)}function k(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Object(h.a)(e);if("elu"===t)return Object(o.a)(e);if("relu6"===t)return Object(f.a)(e);if("prelu"===t)return Object(d.a)(e,n);if("leakyrelu"===t)return Object(c.a)(e,r);if("sigmoid"===t)return Object(y.a)(e);throw new Error(`Unknown fused activation ${t}.`)}const I=(e,t)=>!(e>0)||"linear"===t},1221:function(e,t,n){"use strict";function r(e,element,t){const n=function(e,t,n){return function(e,t,n){let r=0,o=e.length,c=0,l=!1;for(;r<o;){c=r+(o-r>>>1);const d=n(t,e[c]);d>0?r=c+1:(o=c,l=!d)}return l?r:-r-1}(e,t,n||o)}(e,element,t),r=n<0?-(n+1):n;e.splice(r,0,element)}function o(a,b){return a>b?1:a<b?-1:0}function c(e,t,n,r,o){return h(e,t,n,r,o,0)}function l(e,t,n,r,o,c){return h(e,t,n,r,o,0,!1,c,!0)}function d(e,t,n,r,o,c){return h(e,t,n,r,o,c,!0)}function h(e,t,n,o,c,l,d=!1,h=!1,x=!1){const O=[];for(let i=0;i<t.length;i++)t[i]>c&&O.push({score:t[i],boxIndex:i,suppressBeginIndex:0});O.sort(y);const w=l>0?-.5/l:0,v=[],k=[];for(;v.length<n&&O.length>0;){const t=O.pop(),{score:n,boxIndex:l,suppressBeginIndex:d}=t;if(n<c)break;let h=!1;for(let n=v.length-1;n>=d;--n){const r=f(e,l,v[n]);if(r>=o){h=!0;break}if(t.score=t.score*m(o,w,r),t.score<=c)break}t.suppressBeginIndex=v.length,h||(t.score===n?(v.push(l),k.push(t.score)):t.score>c&&r(O,t,y))}const I=v.length,N=n-I;h&&N>0&&(v.push(...new Array(N).fill(0)),k.push(...new Array(N).fill(0)));const j={selectedIndices:v};return d&&(j.selectedScores=k),x&&(j.validOutputs=I),j}function f(e,i,t){const n=e.subarray(4*i,4*i+4),r=e.subarray(4*t,4*t+4),o=Math.min(n[0],n[2]),c=Math.min(n[1],n[3]),l=Math.max(n[0],n[2]),d=Math.max(n[1],n[3]),h=Math.min(r[0],r[2]),f=Math.min(r[1],r[3]),m=Math.max(r[0],r[2]),y=Math.max(r[1],r[3]),x=(l-o)*(d-c),O=(m-h)*(y-f);if(x<=0||O<=0)return 0;const w=Math.max(o,h),v=Math.max(c,f),k=Math.min(l,m),I=Math.min(d,y),N=Math.max(k-w,0)*Math.max(I-v,0);return N/(x+O-N)}function m(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function y(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return l})),n.d(t,"c",(function(){return d}))},1222:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({clone_:function(e){const t={x:Object(c.a)(e,"x","clone","string_or_numeric")};return r.a.runKernel(o.rb,t)}})},1223:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({log_:function(e){const t={x:Object(c.a)(e,"x","log")};return r.a.runKernel(o.Cb,t)}})},1224:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({max_:function(e,t=null,n=!1){const l={x:Object(c.a)(e,"x","max")},d={reductionIndices:t,keepDims:n};return r.a.runKernel(o.Ib,l,d)}})},1225:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1235),c=n(1210),l=n(1226);function d(e,t="float32"){if("complex64"===t){const t=d(e,"float32"),n=Object(l.a)(e,"float32");return Object(c.a)(t,n)}const n=Object(o.D)(Object(o.O)(e),t);return r.a.makeTensor(n,e,t)}},1226:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(1175),o=n(1235),c=n(1210);function l(e,t="float32"){if("complex64"===t){const t=l(e,"float32"),n=l(e,"float32");return Object(c.a)(t,n)}const n=Object(o.F)(Object(o.O)(e),t);return r.a.makeTensor(n,e,t)}},1227:function(e,t){(function(t){e.exports=t}).call(this,{})},1228:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({relu_:function(e){const t={x:Object(c.a)(e,"x","relu")};return r.a.runKernel(o.mc,t)}})},1229:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({split_:function(e,t,n=0){const l={x:Object(c.a)(e,"x","split")},d={numOrSizeSplits:t,axis:n};return r.a.runKernel(o.Kc,l,d)}})},1230:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(1174),o=n(1235),c=n(1238);function l(e,t){Object(o.d)(e);const n=Object(r.c)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Object(c.a)(e,null,n,t)}},1231:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1173);const h=Object(d.a)({unstack_:function(e,t=0){const n=Object(c.a)(e,"x","unstack","string_or_numeric");l.b(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const d={value:n},h={axis:t};return r.a.runKernel(o.Zc,d,h)}})},1232:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({step_:function(e,t=0){const n={x:Object(c.a)(e,"x","step")},l={alpha:t};return r.a.runKernel(o.Oc,n,l)}})},1233:function(e,t,n){"use strict";n.d(t,"f",(function(){return m})),n.d(t,"e",(function(){return y})),n.d(t,"d",(function(){return x})),n.d(t,"g",(function(){return O})),n.d(t,"a",(function(){return w})),n.d(t,"b",(function(){return A})),n.d(t,"c",(function(){return r}));var r,o=n(1171),c=n(1267),l=n(1327);function d(e){return e instanceof o.Vc?{value:e.clone(),recurse:!1}:Object(l.e)(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class h{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class f extends h{constructor(){super(f.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let i=0;i<n;i++)t[i]=this.get(this.wrap(this.begin+i));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function m(e){return new v(e)}function y(e){return new k(e)}function x(e,t){return new F(e,t)}function O(e,t=r.FAIL){return new D(e,t)}f.INITIAL_CAPACITY=32;class w{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new $(this,e)}filter(e){return new T(this,e)}map(e){return new C(this,e)}mapAsync(e){return new E(this,e)}serialMapAsync(e){return new E(this,e).serial()}flatmap(e){return new R(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new S(this,e,t)}columnMajorBatch(e,t=!0,n=l.f){return this.rowMajorBatch(e,t).map((e=>Object(l.d)(e,n)))}concatenate(e,t){return new F(m([this,e]),t)}take(e){return e<0||null==e?this:new j(this,e)}skip(e){return e<0||null==e?this:new N(this,e)}prefetch(e){return new _(this,e)}shuffle(e,t){return new M(this,e,t)}serial(){return new I(this)}}class v extends w{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,Object(l.b)(t,d)),done:!1};var t}}class k extends w{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class I extends w{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class N extends w{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;o.Jd(e.value)}return this.upstream.next()}}class j extends w{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class S extends w{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class T extends w{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;o.Jd(e.value)}}}class C extends w{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=o.gf.getTensorsInContainer(e.value),n=this.transform(e.value),r=o.gf.getTensorsInContainer(n);for(const e of t)o.gf.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}}class $ extends w{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class E extends w{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=o.gf.getTensorsInContainer(e.value),n=await this.transform(e.value),r=o.gf.getTensorsInContainer(n);for(const e of t)o.gf.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}}class A extends w{constructor(){super(),this.outputQueue=new f,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class R extends A{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=o.gf.getTensorsInContainer(e.value),n=this.transform(e.value),r=o.gf.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const e of t)o.gf.isTensorInList(e,r)||e.dispose();return!0}}class F extends w{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(r||(r={}));class D extends w{constructor(e,t=r.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const o=await Object(l.c)(this.iterators,(function(e){if(e instanceof w){return{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}}return{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case r.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case r.SHORTEST:return{value:null,done:!0};case r.LONGEST:}return this.count++,{value:o,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class _ extends w{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new h(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class M extends _{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=c.alea(n||o.of.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}},1234:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1178);var h=n(1173);const f=Object(h.a)({batchNorm_:function(e,t,n,h,f,m){null==m&&(m=.001);const y=Object(c.a)(e,"x","batchNorm"),x=Object(c.a)(t,"mean","batchNorm"),O=Object(c.a)(n,"variance","batchNorm");let w,v;null!=f&&(w=Object(c.a)(f,"scale","batchNorm")),null!=h&&(v=Object(c.a)(h,"offset","batchNorm")),l.b(x.rank===O.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),l.b(null==v||x.rank===v.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),l.b(null==w||x.rank===w.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const k={x:function(e){let t;return t=0===e.rank||1===e.rank?Object(d.a)(e,[1,1,1,e.size]):2===e.rank?Object(d.a)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Object(d.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(y),scale:w,offset:v,mean:x,variance:O},I={varianceEpsilon:m},N=r.a.runKernel(o.jb,k,I);return Object(d.a)(N,y.shape)}})},1235:function(e,t,n){"use strict";function r(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function o(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n,r,o=e.length,c=0;for(;o>0;)c=Math.random()*o|0,o--,n=e[o],r=t[o],e[o]=e[c],t[o]=t[c],e[c]=n,t[c]=r}function c(e,t,n){return Math.max(e,Math.min(t,n))}function l(e){return e%2==0?e:e+1}function d(e){let t=0;for(let i=0;i<e.length;i++)t+=e[i];return t}function h(a,b){const e=Math.random();return b*e+(1-e)*a}function f(a,b){let e=0;for(let i=0;i<a.length;i++){const t=Number(a[i])-Number(b[i]);e+=t*t}return e}function m(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function y(e,t,n=""){m(k(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function x(a){m(null!=a,(()=>"The input to the tensor constructor must be a non-null value."))}function O(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||L(e)&&!n)for(let i=0;i<e.length;++i)O(e[i],t,n);else t.push(e);return t}function w(e){if(0===e.length)return 1;let t=e[0];for(let i=1;i<e.length;i++)t*=e[i];return t}function v(e){return 0===e.length}function k(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let i=0;i<e.length;i++)if(e[i]!==t[i])return!1;return!0}function I(a){return a%1==0}function N(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function j(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function S(e){const t=new Uint32Array(e);for(let i=0;i<e;++i)t[i]=i;return r(t),t}function T(a,e){return e<=a.length?a:a+" ".repeat(e-a.length)}function C(e,t=(e=>0),n){return new Promise(((r,o)=>{let c=0;const l=()=>{if(e())return void r();c++;const d=t(c);null!=n&&c>=n?o():setTimeout(l,d)};l()}))}function $(e,t){let n=1,r=-1;for(let i=0;i<e.length;++i)if(e[i]>=0)n*=e[i];else if(-1===e[i]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${i}`);r=i}else if(e[i]<0)throw Error(`Shapes can not be < 0. Found ${e[i]} at dim ${i}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const o=e.slice();return o[r]=t/n,o}function E(e,t){const n=t.length;return m((e=null==e?t.map(((s,i)=>i)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),m(e.every((e=>I(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((a=>a<0?n+a:a))}function A(e,t){const n=[],r=[],o=null!=t&&Array.isArray(t)&&0===t.length,c=null==t||o?null:E(t,e).sort();let l=0;for(let i=0;i<e.length;++i){if(null!=c){if(c[l]===i&&1!==e[i])throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(null==c[l]||c[l]>i)&&1===e[i]&&(n.push(e[i]),r.push(i)),c[l]<=i&&l++}1!==e[i]&&(n.push(e[i]),r.push(i))}return{newShape:n,keptDims:r}}function R(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function F(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function D(e,t){for(let i=0;i<e.length;i++){const n=e[i];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${t} being uploaded contains ${n}.`)}}function _(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function M(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function L(a){return a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array}function z(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function P(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function B(e){return"string"==typeof e||e instanceof String}function W(e){return"boolean"==typeof e}function V(e){return"number"==typeof e}function U(e){return Array.isArray(e)?U(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":V(e)?"float32":B(e)?"string":W(e)?"bool":"float32"}function G(e){return!!(e&&e.constructor&&e.call&&e.apply)}function H(e,t){for(let i=t;i<e;++i)if(e%i==0)return i;return e}function K(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let i=t-3;i>=0;--i)n[i]=n[i+1]*e[i+1];return n}function X(e,t,a,n=!1){const r=new Array;if(1===t.length){const o=t[0]*(n?2:1);for(let i=0;i<o;i++)r[i]=a[e+i]}else{const o=t[0],c=t.slice(1),l=c.reduce(((e,t)=>e*t))*(n?2:1);for(let i=0;i<o;i++)r[i]=X(e+i*l,c,a,n)}return r}function Y(e,a,t=!1){if(0===e.length)return a[0];const n=e.reduce(((e,t)=>e*t))*(t?2:1);if(0===n)return[];if(n!==a.length)throw new Error(`[${e}] does not match the input size ${a.length}${t?" for a complex tensor":""}.`);return X(0,e,a,t)}function J(e,t){const n=Z(e,t);for(let i=0;i<n.length;i++)n[i]=1;return n}function Z(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Q(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Y(e,new Float32Array(n));if("int32"===t)return Y(e,new Int32Array(n));if("bool"===t)return Y(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function ee(e){e.forEach((t=>{m(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function te(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let i=0;i<e.length-1;++i)r+=n[i]*e[i];return r}function ne(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let i=0;i<r.length-1;++i)r[i]=Math.floor(e/n[i]),e-=r[i]*n[i];return r[r.length-1]=e,r}function re(object){return object&&object.then&&"function"==typeof object.then}n.d(t,"M",(function(){return r})),n.d(t,"N",(function(){return o})),n.d(t,"i",(function(){return c})),n.d(t,"H",(function(){return l})),n.d(t,"R",(function(){return d})),n.d(t,"J",(function(){return h})),n.d(t,"l",(function(){return f})),n.d(t,"b",(function(){return m})),n.d(t,"e",(function(){return y})),n.d(t,"d",(function(){return x})),n.d(t,"m",(function(){return O})),n.d(t,"O",(function(){return w})),n.d(t,"y",(function(){return v})),n.d(t,"a",(function(){return k})),n.d(t,"v",(function(){return I})),n.d(t,"S",(function(){return N})),n.d(t,"P",(function(){return j})),n.d(t,"k",(function(){return S})),n.d(t,"L",(function(){return T})),n.d(t,"K",(function(){return C})),n.d(t,"s",(function(){return $})),n.d(t,"I",(function(){return E})),n.d(t,"Q",(function(){return A})),n.d(t,"o",(function(){return R})),n.d(t,"n",(function(){return F})),n.d(t,"h",(function(){return D})),n.d(t,"B",(function(){return _})),n.d(t,"p",(function(){return M})),n.d(t,"A",(function(){return L})),n.d(t,"g",(function(){return z})),n.d(t,"f",(function(){return P})),n.d(t,"z",(function(){return B})),n.d(t,"t",(function(){return W})),n.d(t,"w",(function(){return V})),n.d(t,"r",(function(){return U})),n.d(t,"u",(function(){return G})),n.d(t,"G",(function(){return H})),n.d(t,"j",(function(){return K})),n.d(t,"T",(function(){return Y})),n.d(t,"D",(function(){return J})),n.d(t,"F",(function(){return Z})),n.d(t,"E",(function(){return Q})),n.d(t,"c",(function(){return ee})),n.d(t,"C",(function(){return te})),n.d(t,"q",(function(){return ne})),n.d(t,"x",(function(){return re}))},1236:function(e,t,n){"use strict";n.d(t,"b",(function(){return d})),n.d(t,"a",(function(){return h})),n.d(t,"c",(function(){return f})),n.d(t,"e",(function(){return m})),n.d(t,"d",(function(){return y}));var r=n(1192),o=n(1284);const c=Object(o.a)("kernelRegistry",(()=>new Map)),l=Object(o.a)("gradRegistry",(()=>new Map));function d(e,t){const n=x(e,t);return c.get(n)}function h(e){return l.get(e)}function f(e){const t=c.entries(),n=[];for(;;){const{done:r,value:o}=t.next();if(r)break;const[c,l]=o,[d]=c.split("_");d===e&&n.push(l)}return n}function m(e){const{kernelName:t,backendName:n}=e,r=x(t,n);c.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),c.set(r,e)}function y(e){const{kernelName:t}=e;l.has(t)&&Object(r.b)().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),l.set(t,e)}function x(e,t){return`${t}_${e}`}},1237:function(e,t,n){"use strict";(function(e){n(1175);var t=n(1285),r=n(1192);const o=Object(r.b)();o.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),o.registerFlag("IS_BROWSER",(()=>t.isBrowser())),o.registerFlag("IS_NODE",(()=>void 0!==e&&void 0!==e.versions&&void 0!==e.versions.node)),o.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),o.registerFlag("PROD",(()=>!1)),o.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>o.getBool("DEBUG"))),o.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),o.registerFlag("IS_TEST",(()=>!1)),o.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),o.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1))}).call(this,n(109))},1238:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(1175),o=n(1235),c=n(1177);function l(e,t,n,l){if(null==l&&(l=Object(o.r)(e)),"complex64"===l)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(o.A)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Object(o.c)(t);const e=Object(o.O)(t),r=Object(o.O)(n);Object(o.b)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let i=0;i<n.length;++i){const e=n[i],r=i!==n.length-1||e!==Object(o.O)(t.slice(i));Object(o.b)(n[i]===t[i]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Object(o.A)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==l?Object(c.toTypedArray)(e,l):Object(o.m)(e,[],!0),r.a.makeTensor(e,t,l)}},1239:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1173),h=n(1178);const f=Object(d.a)({depthwiseConv2d_:function(e,filter,t,n,d="NHWC",f=[1,1],m){const y=Object(c.a)(e,"x","depthwiseConv2d"),x=Object(c.a)(filter,"filter","depthwiseConv2d");let O=y,w=!1;3===y.rank&&(w=!0,O=Object(h.a)(y,[1,y.shape[0],y.shape[1],y.shape[2]])),l.b(4===O.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${O.rank}.`)),l.b(4===x.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${x.rank}.`)),l.b(O.shape[3]===x.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${O.shape[3]}) must match the inChannels dimension in filter ${x.shape[2]}.`)),null!=m&&l.b(l.v(n),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${m} but got pad ${n}.`));const v={x:O,filter:x},k={strides:t,pad:n,dataFormat:d,dilations:f,dimRoundingMode:m},I=r.a.runKernel(o.O,v,k);return w?Object(h.a)(I,[I.shape[1],I.shape[2],I.shape[3]]):I}})},1240:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(1175),o=n(1172),c=n(1187),l=n(1174),d=n(1184),h=n(1173);const f=Object(h.a)({equal_:function(a,b){let e=Object(l.a)(a,"a","equal"),t=Object(l.a)(b,"b","equal");[e,t]=Object(c.makeTypesMatch)(e,t),Object(d.a)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.Y,n)}})},1241:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1173);const h=Object(d.a)({expandDims_:function(e,t=0){const n=Object(c.a)(e,"x","expandDims","string_or_numeric");l.b(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const d={input:n},h={dim:t};return r.a.runKernel(o.bb,d,h)}})},1242:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1173);const h=Object(d.a)({tile_:function(e,t){const n=Object(c.a)(e,"x","tile","string_or_numeric");l.b(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const d={x:n},h={reps:t};return r.a.runKernel(o.Uc,d,h)}})},1243:function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(1175),o=n(1172),c=n(1187),l=n(1174),d=n(1184),h=n(1181),f=n(1173);const m=Object(f.a)({maximum_:function(a,b){let e=Object(l.a)(a,"a","maximum"),t=Object(l.a)(b,"b","maximum");[e,t]=Object(c.makeTypesMatch)(e,t),"bool"===e.dtype&&(e=Object(h.a)(e,"int32"),t=Object(h.a)(t,"int32")),Object(d.a)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.Ob,n)}})},1244:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({mean_:function(e,t=null,n=!1){const l={x:Object(c.a)(e,"x","mean")},d={axis:t,keepDims:n};return r.a.runKernel(o.Pb,l,d)}})},1245:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({reverse_:function(e,t){const n={x:Object(c.a)(e,"x","reverse")},l={dims:t};return r.a.runKernel(o.tc,n,l)}})},1246:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({sigmoid_:function(e){const t={x:Object(c.a)(e,"x","sigmoid")};return r.a.runKernel(o.Ac,t)}})},1247:function(e,t,n){"use strict";n.r(t),n.d(t,"assertParamsValid",(function(){return o})),n.d(t,"maskToAxes",(function(){return c})),n.d(t,"computeOutShape",(function(){return l})),n.d(t,"stridesWithElidedDims",(function(){return d})),n.d(t,"getNormalizedAxes",(function(){return m})),n.d(t,"startIndicesWithElidedDims",(function(){return y})),n.d(t,"stopIndicesWithElidedDims",(function(){return x})),n.d(t,"stridesForAxis",(function(){return O})),n.d(t,"startForAxis",(function(){return w})),n.d(t,"stopForAxis",(function(){return v})),n.d(t,"isSliceContinous",(function(){return k})),n.d(t,"computeFlatOffset",(function(){return I})),n.d(t,"parseSliceParams",(function(){return N})),n.d(t,"sliceInfo",(function(){return j}));var r=n(1235);function o(input,e,t){const n=input.shape.length;r.b(n===e.length,(()=>`Error in slice${n}D: Length of begin ${e} must match the rank of the array (${n}).`)),r.b(n===t.length,(()=>`Error in slice${n}D: Length of size ${t} must match the rank of the array (${n}).`));for(let i=0;i<n;++i)r.b(e[i]+t[i]<=input.shape[i],(()=>`Error in slice${n}D: begin[${i}] + size[${i}] (${e[i]+t[i]}) would overflow input.shape[${i}] (${input.shape[i]})`))}function c(mask){const e=[];let t=0;for(;mask>0;)1&mask&&e.push(t),mask/=2,t++;return e}function l(e,t,n){const r=[];for(let o=0;o<e.length;o++)r[o]=Math.ceil((t[o]-e[o])/n[o]);return r}function d(e,t,n,r){const o=[...e];for(let i=o.length;i<r.length;i++)o.push(1);for(let i=0;i<n;i++)0===i?o[t]=1:(o.splice(t,0,1),o.pop());return o}function h(e,t,n){return n<=e?n:n-(t-1)}function f(e,t){const n=[];for(let i=0;i<e;i++)n.push(t+i);return n}function m(e,t,n,r,o,c,l,h,f){const m=e.length;let k=new Array(m),I=new Array(m),N=new Array(m);if(t.length&&n>0){const f=t[0],m=n+1;k=y(l,f,m,r,e),I=x(h,f,m,o,e),N=d(c,f,m,e)}else for(let t=0;t<m;t++)k[t]=w(l,r,c,e,t,f),I[t]=v(h,o,c,e,t,f),N[t]=O(c,t,f);return{begin:k,end:I,strides:N}}function y(e,t,n,r,o){const c=[...o],l=f(n,t);for(let o=0;o<c.length;o++)if(l.indexOf(o)>-1)c[o]=0;else{const l=h(t,n,o);let d=r[l];e&1<<l&&(d=0),c[o]=d}return c}function x(e,t,n,o,c){const l=[...c],d=f(n,t);for(let r=0;r<l.length;r++)if(d.indexOf(r)>-1)l[r]=Number.MAX_SAFE_INTEGER;else{const c=h(t,n,r);let d=o[c];e&1<<c&&(d=Number.MAX_SAFE_INTEGER),l[r]=d}for(let i=0;i<l.length;i++){const e=c[i];l[i]<0&&(l[i]+=e),l[i]=r.i(0,l[i],c[i])}return l}function O(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function w(e,t,n,o,c,l){let d=t[c];const h=n[c]||1;(e&1<<c||l&1<<c||null==d)&&(d=h>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const f=o[c];return d<0&&(d+=f),d=r.i(0,d,f-1),d}function v(e,t,n,o,c,l){let d=t[c];const h=n[c]||1;(e&1<<c||l&1<<c||null==d)&&(d=h>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const f=o[c];return d<0&&(d+=f),d=h>0?r.i(0,d,f):r.i(-1,d,f-1),d}function k(e,t,n){let r=n.length;for(let i=0;i<n.length;i++)if(n[i]>1){r=i;break}for(let i=r+1;i<n.length;i++)if(t[i]>0||n[i]!==e[i])return!1;return!0}function I(e,t){let n=e.length>0?e[e.length-1]:1;for(let i=0;i<e.length-1;i++)n+=e[i]*t[i];return n}function N(e,t,n){let o;const c=e.shape.length;let l;return o="number"==typeof t?[t,...new Array(c-1).fill(0)]:t.length<c?t.concat(new Array(c-t.length).fill(0)):t.slice(),o.forEach((e=>{r.b(-1!==e,(()=>"slice() does not support negative begin indexing."))})),l=null==n?new Array(c).fill(-1):"number"==typeof n?[n,...new Array(c-1).fill(-1)]:n.length<c?n.concat(new Array(c-n.length).fill(-1)):n,l=l.map(((t,i)=>t>=0?t:(r.b(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${i}.`)),e.shape[i]-o[i]))),[o,l]}function j(e,t,n,r,o,d,h,f,y){let x=t.slice(),O=n.slice(),w=r;null==r&&(w=new Array(x.length));const v=c(h);if(v.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==h&&0!==f)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==h&&0!==y)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const k=e.length-x.length,I=c(f),N=e.slice();I.forEach((e=>{x[e]=0,O[e]=1,N.splice(e,0,1)}));const{begin:j,end:S,strides:T}=m(N,v,k,x,O,w,o,d,h);x=j,O=S,w=T;const C=c(y);C.forEach((e=>{O[e]=x[e]+1,w[e]=1}));const $=l(x,O,w),E=$.filter(((e,t)=>-1===C.indexOf(t)));return{nonStrided:w.every((e=>1===e)),$begin:x,$end:O,$strides:w,size:$,newShape:N,outShape:E}}},1248:function(e,t,n){"use strict";n.d(t,"c",(function(){return o})),n.d(t,"b",(function(){return c})),n.d(t,"a",(function(){return l}));var r=n(1235);function o(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,o=t.rank>1?t.rank-1:1,c=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${o}.`;if(n.rank<o)throw new Error(c+` update.rank < ${o}. `);if(e.length<r+(n.rank-o))throw new Error(c+` Output shape length < ${r+(n.rank-o)}`);if(n.rank!==o+e.length-r)throw new Error(c+" update.rank != "+(o+e.length-r));for(let e=0;e<o;++e)if(n.shape[e]!==t.shape[e])throw new Error(c+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-o;++t)if(n.shape[t+o]!==e[t+r])throw new Error(c+` updates.shape[${t+o}] (${n.shape[t+o]}) != shape[${t+o}] (${e[t+o]})`)}function c(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}o(n,t,e)}function l(e,t,n){const o=t.shape.length,c=o>1?t.shape[o-1]:1,l=n.length;let d=1;for(let i=c;i<l;++i)d*=n[i];const h=c<1?1:c;return{sliceRank:c,numUpdates:Object(r.O)(t.shape)/h,sliceSize:d,strides:[...Object(r.j)(n.slice(0,c)),1],outputSize:Object(r.O)(n)}}},1249:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1173);const h=Object(d.a)({spaceToBatchND_:function(e,t,n){const d=Object(c.a)(e,"x","spaceToBatchND");l.b(d.rank>=1+t.length,(()=>`input rank ${d.rank} should be > than [blockShape] ${t.length}`)),l.b(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),l.b(d.shape.reduce(((a,b,i)=>i>0&&i<=t.length?a&&(b+n[i-1][0]+n[i-1][1])%t[i-1]==0:a),!0),(()=>`input spatial dimensions ${d.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const h={x:d},f={blockShape:t,paddings:n};return r.a.runKernel(o.Hc,h,f)}})},1250:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({logicalNot_:function(e){const t={x:Object(c.a)(e,"x","logicalNot","bool")};return r.a.runKernel(o.Gb,t)}})},1251:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1173);const h=Object(d.a)({batchToSpaceND_:function(e,t,n){const d=Object(c.a)(e,"x","batchToSpaceND"),h=t.reduce(((a,b)=>a*b));l.b(d.rank>=1+t.length,(()=>`input rank is ${d.rank} but should be > than blockShape.length ${t.length}`)),l.b(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),l.b(d.shape[0]%h==0,(()=>`input tensor batch is ${d.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${h}`));const f={x:d},m={blockShape:t,crops:n};return r.a.runKernel(o.t,f,m)}})},1252:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));const r={};function o(e){return r[e]}},1253:function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return o}));class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class o{refCount(e){return c("refCount")}incRef(e){return c("incRef")}timerAvailable(){return!0}time(e){return c("time")}read(e){return c("read")}readSync(e){return c("readSync")}numDataIds(){return c("numDataIds")}disposeData(e,t){return c("disposeData")}write(e,t,n){return c("write")}move(e,t,n,r,o){return c("move")}memory(){return c("memory")}floatPrecision(){return c("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return c("dispose")}}function c(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},1254:function(e,t,n){"use strict";n.d(t,"a",(function(){return y}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1181),h=n(1196),f=n(1173),m=n(1178);const y=Object(f.a)({avgPool_:function(e,t,n,f,y){const x=Object(c.a)(e,"x","avgPool","float32");l.b(h.h(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let O=x,w=!1;3===x.rank&&(w=!0,O=Object(m.a)(x,[1,x.shape[0],x.shape[1],x.shape[2]])),l.b(4===O.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${O.rank}.`)),null!=y&&l.b(l.v(f),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${y} but got pad ${f}.`));const v={x:O},k={filterSize:t,strides:n,pad:f,dimRoundingMode:y};let I=r.a.runKernel(o.o,v,k);return I=Object(d.a)(I,x.dtype),w?Object(m.a)(I,[I.shape[1],I.shape[2],I.shape[3]]):I}})},1255:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1187),l=n(1174),d=n(1173);const h=Object(d.a)({floorDiv_:function(a,b){let e=Object(l.a)(a,"a","floorDiv"),t=Object(l.a)(b,"b","floorDiv");[e,t]=Object(c.makeTypesMatch)(e,t);const n={a:e,b:t};return r.a.runKernel(o.hb,n)}})},1256:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({elu_:function(e){const t={x:Object(c.a)(e,"x","elu")};return r.a.runKernel(o.W,t)}})},1257:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(1175),o=n(1172);function c(e,t,n){const c={shape:e,value:t,dtype:n};return r.a.runKernel(o.eb,{},c)}},1258:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({floor_:function(e){const t={x:Object(c.a)(e,"x","floor")};return r.a.runKernel(o.gb,t)}})},1259:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({gather_:function(e,t,n=0,l=0){const d={x:Object(c.a)(e,"x","gather"),indices:Object(c.a)(t,"indices","gather","int32")},h={axis:n,batchDims:l};return r.a.runKernel(o.nb,d,h)}})},1260:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({leakyRelu_:function(e,t=.2){const n={x:Object(c.a)(e,"x","leakyRelu")},l={alpha:t};return r.a.runKernel(o.yb,n,l)}})},1261:function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1196),h=n(1173),f=n(1178);const m=Object(h.a)({maxPool_:function(e,t,n,h,m){const y=Object(c.a)(e,"x","maxPool");let x=y,O=!1;3===y.rank&&(O=!0,x=Object(f.a)(y,[1,y.shape[0],y.shape[1],y.shape[2]])),l.b(4===x.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${x.rank}.`)),l.b(d.h(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=m&&l.b(l.v(h),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${m} but got pad ${h}.`));const w={x:x},v={filterSize:t,strides:n,pad:h,dimRoundingMode:m},k=r.a.runKernel(o.Jb,w,v);return O?Object(f.a)(k,[k.shape[1],k.shape[2],k.shape[3]]):k}})},1262:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({min_:function(e,t=null,n=!1){const l={x:Object(c.a)(e,"x","min")},d={axis:t,keepDims:n};return r.a.runKernel(o.Qb,l,d)}})},1263:function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(1175),o=n(1172),c=n(1187),l=n(1174),d=n(1184),h=n(1181),f=n(1173);const m=Object(f.a)({minimum_:function(a,b){let e=Object(l.a)(a,"a","minimum"),t=Object(l.a)(b,"b","minimum");[e,t]=Object(c.makeTypesMatch)(e,t),"bool"===e.dtype&&(e=Object(h.a)(e,"int32"),t=Object(h.a)(t,"int32")),Object(d.a)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.Rb,n)}})},1264:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(1175),o=n(1172),c=n(1187),l=n(1174),d=n(1184),h=n(1173);const f=Object(h.a)({notEqual_:function(a,b){let e=Object(l.a)(a,"a","notEqual"),t=Object(l.a)(b,"b","notEqual");[e,t]=Object(c.makeTypesMatch)(e,t),Object(d.a)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.ac,n)}})},1265:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({pad_:function(e,t,n=0){const l=Object(c.a)(e,"x","pad");if(0===l.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const d={paddings:t,constantValue:n},h={x:l};return r.a.runKernel(o.ec,h,d)}})},1266:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({prelu_:function(e,t){const n={x:Object(c.a)(e,"x","prelu"),alpha:Object(c.a)(t,"alpha","prelu")};return r.a.runKernel(o.gc,n)}})},1267:function(e,t,n){var r=n(1411),o=n(1412),c=n(1413),l=n(1414),d=n(1415),h=n(1416),f=n(1417);f.alea=r,f.xor128=o,f.xorwow=c,f.xorshift7=l,f.xor4096=d,f.tychei=h,e.exports=f},1268:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1174),o=n(1235),c=n(1173),l=n(1178);const d=Object(c.a)({squeeze_:function(e,t){const n=Object(r.a)(e,"x","squeeze");return Object(l.a)(n,Object(o.Q)(n.shape,t).newShape)}})},1269:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(1175),o=n(1172),c=n(1174),l=n(1222),d=n(1173),h=n(1178);const f=Object(d.a)({broadcastTo_:function(e,t){let input=Object(c.a)(e,"broadcastTo","x");const n=input.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<input.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${input.rank}.`);if(t.length>input.rank){const e=input.shape.slice();for(;e.length<t.length;)e.unshift(1);input=Object(h.a)(input,e)}const d=input.shape,f=Array.from(t);for(let i=t.length-1;i>=0;i--)if(d[i]===t[i])f[i]=1;else if(1!==input.shape[i])throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${t}].`);if(0===f.map(((e,i)=>e>1?i:-1)).filter((i=>i>=0)).length)return Object(l.a)(input);const m={x:input},y={reps:f};return r.a.runKernel(o.Uc,m,y)}})},1270:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1235),l=n(1173);const d=Object(l.a)({fft_:function(input){Object(c.b)("complex64"===input.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${input.dtype}.`));const e={input:input};return r.a.runKernel(o.db,e)}})},1271:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1235),l=n(1173);const d=Object(l.a)({ifft_:function(input){Object(c.b)("complex64"===input.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${input.dtype}.`));const e={input:input};return r.a.runKernel(o.qb,e)}})},1272:function(e,t,n){"use strict";n.d(t,"a",(function(){return v}));var r=n(1235),o=n(1210),c=n(1198),l=n(1274),d=n(1173),h=n(1273),f=n(1178),m=n(1197),y=n(1229),x=n(1226),O=n(1186),w=n(1270);const v=Object(d.a)({rfft_:function(input,e){Object(r.b)("float32"===input.dtype,(()=>`The dtype for rfft() must be real value but got ${input.dtype}`));let t=input.shape[input.shape.length-1];const n=input.size/t;let d;if(null!=e&&e<t){const n=input.shape.map((e=>0)),r=input.shape.map((e=>e));r[input.shape.length-1]=e,d=Object(m.a)(input,n,r),t=e}else if(null!=e&&e>t){const n=input.shape.map((e=>e));n[input.shape.length-1]=e-t,d=Object(c.a)([input,Object(x.a)(n)],input.shape.length-1),t=e}else d=input;const v=Object(O.a)(d),k=Object(f.a)(Object(o.a)(d,v),[n,t]),I=Object(w.a)(k),N=Math.floor(t/2)+1,j=Object(h.a)(I),S=Object(l.a)(I),T=Object(y.a)(j,[N,t-N],j.shape.length-1),C=Object(y.a)(S,[N,t-N],S.shape.length-1),$=d.shape.slice();return $[d.shape.length-1]=N,Object(f.a)(Object(o.a)(T[0],C[0]),$)}})},1273:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({real_:function(input){const e={input:Object(c.a)(input,"input","real")};return r.a.runKernel(o.jc,e)}})},1274:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({imag_:function(input){const e={input:Object(c.a)(input,"input","imag")};return r.a.runKernel(o.sb,e)}})},1275:function(e,t,n){"use strict";n.d(t,"a",(function(){return I}));var r=n(1174),o=n(1235),c=n(1211),l=n(1202),d=n(1224),h=n(1262),f=n(1173),m=n(1215),y=n(1178),x=n(1185),O=n(1203),w=n(1190),v=n(1189);function k(e,p,t=null){if(0===e.rank)return Object(c.a)(e);if(1!==e.rank&&null===t)return k(Object(y.a)(e,[-1]),p,t);if(1===e.rank||"number"==typeof t||Array.isArray(t)&&1===t.length){if(1===p)return Object(v.a)(Object(c.a)(e),t);if(p===1/0)return Object(d.a)(Object(c.a)(e),t);if(p===-1/0)return Object(h.a)(Object(c.a)(e),t);if("euclidean"===p||2===p)return Object(O.a)(Object(v.a)(Object(m.a)(Object(c.a)(e),Object(x.a)(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${p}`)}if(Array.isArray(t)&&2===t.length){if(1===p)return Object(d.a)(Object(v.a)(Object(c.a)(e),t[0]),t[1]-1);if(p===1/0)return Object(d.a)(Object(v.a)(Object(c.a)(e),t[1]),t[0]);if(p===-1/0)return Object(h.a)(Object(v.a)(Object(c.a)(e),t[1]),t[0]);if("fro"===p||"euclidean"===p)return Object(O.a)(Object(v.a)(Object(w.a)(e),t));throw new Error(`Error in norm: invalid ord value: ${p}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const I=Object(f.a)({norm_:function(e,t="euclidean",n=null,c=!1){const d=k(e=Object(r.a)(e,"x","norm"),t,n);let h=d.shape;if(c){const t=Object(o.I)(n,e.shape);h=l.e(d.shape,t)}return Object(y.a)(d,h)}})},1276:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(1175),o=n(1172),c=n(1187),l=n(1174),d=n(1184),h=n(1173);const f=Object(h.a)({squaredDifference_:function(a,b){let e=Object(l.a)(a,"a","squaredDifference"),t=Object(l.a)(b,"b","squaredDifference");[e,t]=Object(c.makeTypesMatch)(e,t),Object(d.a)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.Nc,n,{})}})},1277:function(e,t,n){"use strict";n.d(t,"a",(function(){return w}));var r=n(1174),o=n(1235),c=n(1188),l=n(1202),d=n(1206),h=n(1223),f=n(1224),m=n(1173),y=n(1178),x=n(1183),O=n(1189);const w=Object(m.a)({logSumExp_:function(e,t=null,n=!1){const m=Object(r.a)(e,"x","logSumExp"),w=Object(o.I)(t,m.shape),v=Object(f.a)(m,w,!0),a=Object(x.a)(m,v),b=Object(d.a)(a),k=Object(O.a)(b,w),I=Object(h.a)(k),N=Object(c.a)(Object(y.a)(v,I.shape),I);if(n){const e=Object(l.e)(N.shape,w);return Object(y.a)(N,e)}return N}})},1278:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({relu6_:function(e){const t={x:Object(c.a)(e,"x","relu6")};return r.a.runKernel(o.nc,t)}})},1279:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({cumsum_:function(e,t=0,n=!1,l=!1){const d={x:Object(c.a)(e,"x","cumsum")},h={axis:t,exclusive:n,reverse:l};return r.a.runKernel(o.L,d,h)}})},1280:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1173);const h=Object(d.a)({unsortedSegmentSum_:function(e,t,n){const d=Object(c.a)(e,"x","unsortedSegmentSum"),h=Object(c.a)(t,"segmentIds","unsortedSegmentSum","int32");Object(l.b)(Object(l.v)(n),(()=>"numSegments must be of dtype int"));const f={x:d,segmentIds:h},m={numSegments:n};return r.a.runKernel(o.ad,f,m)}})},1281:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(1175),o=n(1172),c=n(1187),l=n(1174),d=n(1184),h=n(1173);const f=Object(h.a)({less_:function(a,b){let e=Object(l.a)(a,"a","less"),t=Object(l.a)(b,"b","less");[e,t]=Object(c.makeTypesMatch)(e,t),Object(d.a)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.zb,n)}})},1282:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({cos_:function(e){const t={x:Object(c.a)(e,"x","cos")};return r.a.runKernel(o.I,t)}})},1283:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1174),l=n(1184),d=n(1173);const h=Object(d.a)({logicalOr_:function(a,b){const e=Object(c.a)(a,"a","logicalOr","bool"),t=Object(c.a)(b,"b","logicalOr","bool");Object(l.a)(e.shape,t.shape);const n={a:e,b:t};return r.a.runKernel(o.Hb,n)}})},1284:function(e,t,n){"use strict";(function(e,r){let o;function c(){if(null==o){let t;if("undefined"!=typeof window)t=window;else if(void 0!==e)t=e;else if(void 0!==r)t=r;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}o=t}return o}function l(e,t){const n=function(){const e=c();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,"b",(function(){return c})),n.d(t,"a",(function(){return l}))}).call(this,n(39),n(109))},1285:function(e,t,n){"use strict";function r(nav){if(nav||"undefined"!=typeof navigator&&null!=navigator){if(nav||(nav=navigator),"ReactNative"===nav.product)return!0;const a=nav.userAgent||nav.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4))}return!1}function o(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}n.r(t),n.d(t,"isMobile",(function(){return r})),n.d(t,"isBrowser",(function(){return o}))},1286:function(e,t,n){"use strict";(function(e){var r=n(1407),o=n(1408),c=n(1409);function l(){return h.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function d(e,t){if(l()<t)throw new RangeError("Invalid typed array length");return h.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=h.prototype:(null===e&&(e=new h(t)),e.length=t),e}function h(e,t,n){if(!(h.TYPED_ARRAY_SUPPORT||this instanceof h))return new h(e,t,n);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return y(this,e)}return f(this,e,t,n)}function f(e,t,n,r){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,n,r){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");t=void 0===n&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,n):new Uint8Array(t,n,r);h.TYPED_ARRAY_SUPPORT?(e=t).__proto__=h.prototype:e=x(e,t);return e}(e,t,n,r):"string"==typeof t?function(e,t,n){"string"==typeof n&&""!==n||(n="utf8");if(!h.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|w(t,n),o=(e=d(e,r)).write(t,n);o!==r&&(e=e.slice(0,o));return e}(e,t,n):function(e,t){if(h.isBuffer(t)){var n=0|O(t.length);return 0===(e=d(e,n)).length||t.copy(e,0,0,n),e}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(r=t.length)!=r?d(e,0):x(e,t);if("Buffer"===t.type&&c(t.data))return x(e,t.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function m(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function y(e,t){if(m(t),e=d(e,t<0?0:0|O(t)),!h.TYPED_ARRAY_SUPPORT)for(var i=0;i<t;++i)e[i]=0;return e}function x(e,t){var n=t.length<0?0:0|O(t.length);e=d(e,n);for(var i=0;i<n;i+=1)e[i]=255&t[i];return e}function O(e){if(e>=l())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+l().toString(16)+" bytes");return 0|e}function w(e,t){if(h.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return X(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return Y(e).length;default:if(r)return X(e).length;t=(""+t).toLowerCase(),r=!0}}function v(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return M(this,t,n);case"utf8":case"utf-8":return R(this,t,n);case"ascii":return D(this,t,n);case"latin1":case"binary":return _(this,t,n);case"base64":return A(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return L(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function k(b,e,t){var i=b[e];b[e]=b[t],b[t]=i}function I(e,t,n,r,o){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=o?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(o)return-1;n=e.length-1}else if(n<0){if(!o)return-1;n=0}if("string"==typeof t&&(t=h.from(t,r)),h.isBuffer(t))return 0===t.length?-1:N(e,t,n,r,o);if("number"==typeof t)return t&=255,h.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):N(e,[t],n,r,o);throw new TypeError("val must be string, number or Buffer")}function N(e,t,n,r,o){var i,c=1,l=e.length,d=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;c=2,l/=2,d/=2,n/=2}function h(e,i){return 1===c?e[i]:e.readUInt16BE(i*c)}if(o){var f=-1;for(i=n;i<l;i++)if(h(e,i)===h(t,-1===f?0:i-f)){if(-1===f&&(f=i),i-f+1===d)return f*c}else-1!==f&&(i-=i-f),f=-1}else for(n+d>l&&(n=l-d),i=n;i>=0;i--){for(var m=!0,y=0;y<d;y++)if(h(e,i+y)!==h(t,y)){m=!1;break}if(m)return i}return-1}function j(e,t,n,r){n=Number(n)||0;var o=e.length-n;r?(r=Number(r))>o&&(r=o):r=o;var c=t.length;if(c%2!=0)throw new TypeError("Invalid hex string");r>c/2&&(r=c/2);for(var i=0;i<r;++i){var l=parseInt(t.substr(2*i,2),16);if(isNaN(l))return i;e[n+i]=l}return i}function S(e,t,n,r){return J(X(t,e.length-n),e,n,r)}function T(e,t,n,r){return J(function(e){for(var t=[],i=0;i<e.length;++i)t.push(255&e.charCodeAt(i));return t}(t),e,n,r)}function C(e,t,n,r){return T(e,t,n,r)}function $(e,t,n,r){return J(Y(t),e,n,r)}function E(e,t,n,r){return J(function(e,t){for(var n,r,o,c=[],i=0;i<e.length&&!((t-=2)<0);++i)r=(n=e.charCodeAt(i))>>8,o=n%256,c.push(o),c.push(r);return c}(t,e.length-n),e,n,r)}function A(e,t,n){return 0===t&&n===e.length?r.fromByteArray(e):r.fromByteArray(e.slice(t,n))}function R(e,t,n){n=Math.min(e.length,n);for(var r=[],i=t;i<n;){var o,c,l,d,h=e[i],f=null,m=h>239?4:h>223?3:h>191?2:1;if(i+m<=n)switch(m){case 1:h<128&&(f=h);break;case 2:128==(192&(o=e[i+1]))&&(d=(31&h)<<6|63&o)>127&&(f=d);break;case 3:o=e[i+1],c=e[i+2],128==(192&o)&&128==(192&c)&&(d=(15&h)<<12|(63&o)<<6|63&c)>2047&&(d<55296||d>57343)&&(f=d);break;case 4:o=e[i+1],c=e[i+2],l=e[i+3],128==(192&o)&&128==(192&c)&&128==(192&l)&&(d=(15&h)<<18|(63&o)<<12|(63&c)<<6|63&l)>65535&&d<1114112&&(f=d)}null===f?(f=65533,m=1):f>65535&&(f-=65536,r.push(f>>>10&1023|55296),f=56320|1023&f),r.push(f),i+=m}return function(e){var t=e.length;if(t<=F)return String.fromCharCode.apply(String,e);var n="",i=0;for(;i<t;)n+=String.fromCharCode.apply(String,e.slice(i,i+=F));return n}(r)}t.Buffer=h,t.SlowBuffer=function(e){+e!=e&&(e=0);return h.alloc(+e)},t.INSPECT_MAX_BYTES=50,h.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}(),t.kMaxLength=l(),h.poolSize=8192,h._augment=function(e){return e.__proto__=h.prototype,e},h.from=function(e,t,n){return f(null,e,t,n)},h.TYPED_ARRAY_SUPPORT&&(h.prototype.__proto__=Uint8Array.prototype,h.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&h[Symbol.species]===h&&Object.defineProperty(h,Symbol.species,{value:null,configurable:!0})),h.alloc=function(e,t,n){return function(e,t,n,r){return m(t),t<=0?d(e,t):void 0!==n?"string"==typeof r?d(e,t).fill(n,r):d(e,t).fill(n):d(e,t)}(null,e,t,n)},h.allocUnsafe=function(e){return y(null,e)},h.allocUnsafeSlow=function(e){return y(null,e)},h.isBuffer=function(b){return!(null==b||!b._isBuffer)},h.compare=function(a,b){if(!h.isBuffer(a)||!h.isBuffer(b))throw new TypeError("Arguments must be Buffers");if(a===b)return 0;for(var e=a.length,t=b.length,i=0,n=Math.min(e,t);i<n;++i)if(a[i]!==b[i]){e=a[i],t=b[i];break}return e<t?-1:t<e?1:0},h.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},h.concat=function(e,t){if(!c(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return h.alloc(0);var i;if(void 0===t)for(t=0,i=0;i<e.length;++i)t+=e[i].length;var n=h.allocUnsafe(t),r=0;for(i=0;i<e.length;++i){var o=e[i];if(!h.isBuffer(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(n,r),r+=o.length}return n},h.byteLength=w,h.prototype._isBuffer=!0,h.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var i=0;i<e;i+=2)k(this,i,i+1);return this},h.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var i=0;i<e;i+=4)k(this,i,i+3),k(this,i+1,i+2);return this},h.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var i=0;i<e;i+=8)k(this,i,i+7),k(this,i+1,i+6),k(this,i+2,i+5),k(this,i+3,i+4);return this},h.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?R(this,0,e):v.apply(this,arguments)},h.prototype.equals=function(b){if(!h.isBuffer(b))throw new TypeError("Argument must be a Buffer");return this===b||0===h.compare(this,b)},h.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(e+=" ... ")),"<Buffer "+e+">"},h.prototype.compare=function(e,t,n,r,o){if(!h.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===o&&(o=this.length),t<0||n>e.length||r<0||o>this.length)throw new RangeError("out of range index");if(r>=o&&t>=n)return 0;if(r>=o)return-1;if(t>=n)return 1;if(this===e)return 0;for(var c=(o>>>=0)-(r>>>=0),l=(n>>>=0)-(t>>>=0),d=Math.min(c,l),f=this.slice(r,o),m=e.slice(t,n),i=0;i<d;++i)if(f[i]!==m[i]){c=f[i],l=m[i];break}return c<l?-1:l<c?1:0},h.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},h.prototype.indexOf=function(e,t,n){return I(this,e,t,n,!0)},h.prototype.lastIndexOf=function(e,t,n){return I(this,e,t,n,!1)},h.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var o=this.length-t;if((void 0===n||n>o)&&(n=o),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var c=!1;;)switch(r){case"hex":return j(this,e,t,n);case"utf8":case"utf-8":return S(this,e,t,n);case"ascii":return T(this,e,t,n);case"latin1":case"binary":return C(this,e,t,n);case"base64":return $(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return E(this,e,t,n);default:if(c)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),c=!0}},h.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var F=4096;function D(e,t,n){var r="";n=Math.min(e.length,n);for(var i=t;i<n;++i)r+=String.fromCharCode(127&e[i]);return r}function _(e,t,n){var r="";n=Math.min(e.length,n);for(var i=t;i<n;++i)r+=String.fromCharCode(e[i]);return r}function M(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var o="",i=t;i<n;++i)o+=K(e[i]);return o}function L(e,t,n){for(var r=e.slice(t,n),o="",i=0;i<r.length;i+=2)o+=String.fromCharCode(r[i]+256*r[i+1]);return o}function z(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function P(e,t,n,r,o,c){if(!h.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>o||t<c)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function B(e,t,n,r){t<0&&(t=65535+t+1);for(var i=0,o=Math.min(e.length-n,2);i<o;++i)e[n+i]=(t&255<<8*(r?i:1-i))>>>8*(r?i:1-i)}function W(e,t,n,r){t<0&&(t=4294967295+t+1);for(var i=0,o=Math.min(e.length-n,4);i<o;++i)e[n+i]=t>>>8*(r?i:3-i)&255}function V(e,t,n,r,o,c){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function U(e,t,n,r,c){return c||V(e,0,n,4),o.write(e,t,n,r,23,4),n+4}function G(e,t,n,r,c){return c||V(e,0,n,8),o.write(e,t,n,r,52,8),n+8}h.prototype.slice=function(e,t){var n,r=this.length;if((e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e),h.TYPED_ARRAY_SUPPORT)(n=this.subarray(e,t)).__proto__=h.prototype;else{var o=t-e;n=new h(o,void 0);for(var i=0;i<o;++i)n[i]=this[i+e]}return n},h.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||z(e,t,this.length);for(var r=this[e],o=1,i=0;++i<t&&(o*=256);)r+=this[e+i]*o;return r},h.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||z(e,t,this.length);for(var r=this[e+--t],o=1;t>0&&(o*=256);)r+=this[e+--t]*o;return r},h.prototype.readUInt8=function(e,t){return t||z(e,1,this.length),this[e]},h.prototype.readUInt16LE=function(e,t){return t||z(e,2,this.length),this[e]|this[e+1]<<8},h.prototype.readUInt16BE=function(e,t){return t||z(e,2,this.length),this[e]<<8|this[e+1]},h.prototype.readUInt32LE=function(e,t){return t||z(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},h.prototype.readUInt32BE=function(e,t){return t||z(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},h.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||z(e,t,this.length);for(var r=this[e],o=1,i=0;++i<t&&(o*=256);)r+=this[e+i]*o;return r>=(o*=128)&&(r-=Math.pow(2,8*t)),r},h.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||z(e,t,this.length);for(var i=t,r=1,o=this[e+--i];i>0&&(r*=256);)o+=this[e+--i]*r;return o>=(r*=128)&&(o-=Math.pow(2,8*t)),o},h.prototype.readInt8=function(e,t){return t||z(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},h.prototype.readInt16LE=function(e,t){t||z(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},h.prototype.readInt16BE=function(e,t){t||z(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},h.prototype.readInt32LE=function(e,t){return t||z(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},h.prototype.readInt32BE=function(e,t){return t||z(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},h.prototype.readFloatLE=function(e,t){return t||z(e,4,this.length),o.read(this,e,!0,23,4)},h.prototype.readFloatBE=function(e,t){return t||z(e,4,this.length),o.read(this,e,!1,23,4)},h.prototype.readDoubleLE=function(e,t){return t||z(e,8,this.length),o.read(this,e,!0,52,8)},h.prototype.readDoubleBE=function(e,t){return t||z(e,8,this.length),o.read(this,e,!1,52,8)},h.prototype.writeUIntLE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||P(this,e,t,n,Math.pow(2,8*n)-1,0);var o=1,i=0;for(this[t]=255&e;++i<n&&(o*=256);)this[t+i]=e/o&255;return t+n},h.prototype.writeUIntBE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||P(this,e,t,n,Math.pow(2,8*n)-1,0);var i=n-1,o=1;for(this[t+i]=255&e;--i>=0&&(o*=256);)this[t+i]=e/o&255;return t+n},h.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,1,255,0),h.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},h.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,2,65535,0),h.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):B(this,e,t,!0),t+2},h.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,2,65535,0),h.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):B(this,e,t,!1),t+2},h.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,4,4294967295,0),h.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):W(this,e,t,!0),t+4},h.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,4,4294967295,0),h.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):W(this,e,t,!1),t+4},h.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t|=0,!r){var o=Math.pow(2,8*n-1);P(this,e,t,n,o-1,-o)}var i=0,c=1,sub=0;for(this[t]=255&e;++i<n&&(c*=256);)e<0&&0===sub&&0!==this[t+i-1]&&(sub=1),this[t+i]=(e/c>>0)-sub&255;return t+n},h.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t|=0,!r){var o=Math.pow(2,8*n-1);P(this,e,t,n,o-1,-o)}var i=n-1,c=1,sub=0;for(this[t+i]=255&e;--i>=0&&(c*=256);)e<0&&0===sub&&0!==this[t+i+1]&&(sub=1),this[t+i]=(e/c>>0)-sub&255;return t+n},h.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,1,127,-128),h.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},h.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,2,32767,-32768),h.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):B(this,e,t,!0),t+2},h.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,2,32767,-32768),h.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):B(this,e,t,!1),t+2},h.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,4,2147483647,-2147483648),h.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):W(this,e,t,!0),t+4},h.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),h.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):W(this,e,t,!1),t+4},h.prototype.writeFloatLE=function(e,t,n){return U(this,e,t,!0,n)},h.prototype.writeFloatBE=function(e,t,n){return U(this,e,t,!1,n)},h.prototype.writeDoubleLE=function(e,t,n){return G(this,e,t,!0,n)},h.prototype.writeDoubleBE=function(e,t,n){return G(this,e,t,!1,n)},h.prototype.copy=function(e,t,n,r){if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var i,o=r-n;if(this===e&&n<t&&t<r)for(i=o-1;i>=0;--i)e[i+t]=this[i+n];else if(o<1e3||!h.TYPED_ARRAY_SUPPORT)for(i=0;i<o;++i)e[i+t]=this[i+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+o),t);return o},h.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===e.length){var code=e.charCodeAt(0);code<256&&(e=code)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!h.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var i;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(i=t;i<n;++i)this[i]=e;else{var o=h.isBuffer(e)?e:X(new h(e,r).toString()),c=o.length;for(i=0;i<n-t;++i)this[i+t]=o[i%c]}return this};var H=/[^+\/0-9A-Za-z-_]/g;function K(e){return e<16?"0"+e.toString(16):e.toString(16)}function X(e,t){var n;t=t||1/0;for(var r=e.length,o=null,c=[],i=0;i<r;++i){if((n=e.charCodeAt(i))>55295&&n<57344){if(!o){if(n>56319){(t-=3)>-1&&c.push(239,191,189);continue}if(i+1===r){(t-=3)>-1&&c.push(239,191,189);continue}o=n;continue}if(n<56320){(t-=3)>-1&&c.push(239,191,189),o=n;continue}n=65536+(o-55296<<10|n-56320)}else o&&(t-=3)>-1&&c.push(239,191,189);if(o=null,n<128){if((t-=1)<0)break;c.push(n)}else if(n<2048){if((t-=2)<0)break;c.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;c.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;c.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return c}function Y(e){return r.toByteArray(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(H,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function J(e,t,n,r){for(var i=0;i<r&&!(i+n>=t.length||i>=e.length);++i)t[i+n]=e[i];return i}}).call(this,n(39))},1287:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(1174),o=n(1238);function c(e,t,n){const c=Object(r.c)(e,n);return Object(o.a)(e,t,c,n)}},1288:function(e,t,n){"use strict";function r(e,t=!1){console.log(e.toString(t))}n.d(t,"a",(function(){return r}))},1289:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({all_:function(e,t=null,n=!1){const l={x:Object(c.a)(e,"x","all","bool")},d={axis:t,keepDims:n};return r.a.runKernel(o.f,l,d)}})},1290:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({any_:function(e,t=null,n=!1){const l={x:Object(c.a)(e,"x","any","bool")},d={axis:t,keepDims:n};return r.a.runKernel(o.g,l,d)}})},1291:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({argMax_:function(e,t=0){const n={x:Object(c.a)(e,"x","argMax")},l={axis:t};return r.a.runKernel(o.h,n,l)}})},1292:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(1174),o=n(1235),c=n(1212),l=n(1196),d=n(1173),h=n(1178);const f=Object(d.a)({conv1d_:function(e,filter,t,n,d="NWC",f=1,m){const y=Object(r.a)(e,"x","conv1d"),x=Object(r.a)(filter,"filter","conv1d");let O=y,w=!1;2===y.rank&&(w=!0,O=Object(h.a)(y,[1,y.shape[0],y.shape[1]])),o.b(3===O.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${O.rank}.`)),o.b(3===x.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${x.rank}.`)),null!=m&&o.b(o.v(n),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${m} but got pad ${n}.`)),o.b(O.shape[2]===x.shape[1],(()=>`Error in conv1d: depth of input (${O.shape[2]}) must match input depth for filter ${x.shape[1]}.`)),o.b(l.h(t,f),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${f}'`)),o.b("NWC"===d,(()=>`Error in conv1d: got dataFormat of ${d} but only NWC is currently supported.`));const v=Object(h.a)(x,[1,x.shape[0],x.shape[1],x.shape[2]]),k=Object(h.a)(O,[O.shape[0],1,O.shape[1],O.shape[2]]),I=[1,t],N=[1,f],j=Object(c.a)(k,v,I,n,"NHWC",N,m);return w?Object(h.a)(j,[j.shape[2],j.shape[3]]):Object(h.a)(j,[j.shape[0],j.shape[2],j.shape[3]])}})},1293:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(1174),o=n(1294),c=n(1173);const l=Object(c.a)({conv2dTranspose_:function(e,filter,t,n,c,l){const d=Object(r.a)(e,"x","conv2dTranspose"),h=Object(r.a)(filter,"filter","conv2dTranspose");return Object(o.a)(t,d,h,n,c,"NHWC",l)}})},1294:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1235),l=n(1173),d=n(1178);const h=Object(l.a)({conv2DBackpropInput_:function(e,t,filter,n,l,h="NHWC",f){c.b(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let m=e,y=t,x=!1;3===t.rank&&(x=!0,y=Object(d.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),m=[1,e[0],e[1],e[2]]),c.b(4===m.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${m.length}.`)),c.b(4===y.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${y.rank}`)),c.b(4===filter.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${filter.rank}`));const O="NHWC"===h?m[3]:m[1],w="NHWC"===h?y.shape[3]:y.shape[1];c.b(O===filter.shape[2],(()=>`Error in conv2dDerInput: depth of input (${O}) must match input depth for filter ${filter.shape[2]}.`)),c.b(w===filter.shape[3],(()=>`Error in conv2dDerInput: depth of output (${w}) must match output depth for filter ${filter.shape[3]}.`)),null!=f&&c.b(c.v(l),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${f} but got pad ${l}.`));const v={dy:y,filter:filter},k={strides:n,pad:l,dataFormat:h,dimRoundingMode:f,inputShape:m},I=r.a.runKernel(o.E,v,k);return x?Object(d.a)(I,[I.shape[1],I.shape[2],I.shape[3]]):I}})},1295:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({oneHot_:function(e,t,n=1,l=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const d={indices:Object(c.a)(e,"indices","oneHot","int32")},h={depth:t,onValue:n,offValue:l};return r.a.runKernel(o.bc,d,h)}})},1296:function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return c}));var r=n(1267);n(1297);class o{constructor(e,t,n,o,c){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const l=c||Math.random();this.random=r.alea(l.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,o,s;do{r=2*this.random()-1,o=2*this.random()-1,s=r*r+o*o}while(s>=1||0===s);const c=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*c,t=this.mean+this.stdDev*o*c,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class c{constructor(e=0,t=1,n,o){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==o&&(o=Math.random()),"number"==typeof o&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=r.alea(o)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},1297:function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return c}));var r=n(1175);n(1174),n(1235),n(1177);function o(){return 32===r.a.backend.floatPrecision()?.001:.1}function c(a,e,t){if(null==t&&(t=o()),!l(a,e,t))throw new Error(`Numbers differ: actual === ${a}, expected === ${e}`)}function l(a,e,t){return!isFinite(a)&&!isFinite(e)||!(isNaN(a)||isNaN(e)||Math.abs(a-e)>t)}},1298:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(1208),o=n(1173),c=n(1296);const l=Object(o.a)({randomUniform_:function(e,t=0,n=1,o="float32",l){const d=Object(r.a)(e,o),h=new c.b(t,n,null,l);for(let i=0;i<d.values.length;i++)d.values[i]=h.nextValue();return d.toTensor()}})},1299:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({selu_:function(e){const t={x:Object(c.a)(e,"x","selu")};return r.a.runKernel(o.zc,t)}})},1300:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(1174),o=n(1235),c=n(1212),l=n(1239),d=n(1173),h=n(1178);const f=Object(d.a)({separableConv2d_:function(e,t,n,d,f,m=[1,1],y="NHWC"){const x=Object(r.a)(e,"x","separableConv2d"),O=Object(r.a)(t,"depthwiseFilter","separableConv2d"),w=Object(r.a)(n,"pointwiseFilter","separableConv2d");let v=x,k=!1;if(3===x.rank&&(k=!0,v=Object(h.a)(x,[1,x.shape[0],x.shape[1],x.shape[2]])),"NCHW"===y)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");o.b(4===v.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${v.rank}.`)),o.b(4===O.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${O.rank}.`)),o.b(4===w.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${O.rank}.`)),o.b(1===w.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${w.shape[0]}.`)),o.b(1===w.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${w.shape[1]}.`));const I=O.shape[2],N=O.shape[3];o.b(w.shape[2]===I*N,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${I*N}, but got ${w.shape[2]}.`));const j=Object(l.a)(v,O,d,f,y,m),S=Object(c.a)(j,w,1,"valid",y);return k?Object(h.a)(S,[S.shape[1],S.shape[2],S.shape[3]]):S}})},1301:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({softplus_:function(e){const t={x:Object(c.a)(e,"x","softplus")};return r.a.runKernel(o.Gc,t)}})},1302:function(e,t,n){"use strict";n.d(t,"a",(function(){return w}));var r=n(1210),o=n(1198),c=n(1274),l=n(1179),d=n(1173),h=n(1273),f=n(1178),m=n(1245),y=n(1185),x=n(1197),O=n(1271);const w=Object(d.a)({irfft_:function(input){const e=input.shape[input.shape.length-1],t=input.size/e;let n;if(e<=2){const r=Object(f.a)(input,[t,e]);n=Object(O.a)(r)}else{const d=[t,2*(e-1)],w=Object(f.a)(Object(h.a)(input),[t,e]),v=Object(f.a)(Object(c.a)(input),[t,e]),k=Object(m.a)(Object(x.a)(w,[0,1],[t,e-2]),1),I=Object(l.a)(Object(m.a)(Object(x.a)(v,[0,1],[t,e-2]),1),Object(y.a)(-1)),N=Object(o.a)([w,k],1),i=Object(o.a)([v,I],1),j=Object(f.a)(Object(r.a)(N,i),[d[0],d[1]]);n=Object(O.a)(j)}if(n=Object(h.a)(n),3===input.rank&&0!==input.shape[0]){const e=n,t=input.shape[0];n=Object(f.a)(n,[t,n.shape[0]/t,n.shape[1]]),e.dispose()}return n}})},1303:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(1175),o=n(1172);function c(e,t,n=1,c="float32"){if(0===n)throw new Error("Cannot have a step of zero");const l={start:e,stop:t,step:n,dtype:c};return r.a.runKernel(o.ic,{},l)}},1304:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({log1p_:function(e){const t={x:Object(c.a)(e,"x","log1p")};return r.a.runKernel(o.Db,t)}})},1305:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1235),l=n(1173),d=n(1178);const h=Object(l.a)({conv2DBackpropFilter_:function(e,t,n,l,h,f="NHWC",m){let y=e;3===e.rank&&(y=Object(d.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let x=t;3===x.rank&&(x=Object(d.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),c.b(4===y.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${y.shape}.`)),c.b(4===x.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${x.shape}.`)),c.b(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const O="NHWC"===f?y.shape[3]:y.shape[1],w="NHWC"===f?x.shape[3]:x.shape[1];c.b(O===n[2],(()=>`Error in conv2dDerFilter: depth of input ${O}) must match input depth in filter (${n[2]}.`)),c.b(w===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${w}) must match output depth for filter (${n[3]}).`)),null!=m&&c.b(c.v(h),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${m} but got pad ${h}.`));const v={x:y,dy:x},k={strides:l,pad:h,dataFormat:f,dimRoundingMode:m,filterShape:n};return r.a.runKernel(o.D,v,k)}})},1306:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(1174),o=n(1235),c=n(1238);function l(e,t,n){if(Object(o.d)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const l=Object(r.c)(e,n);if(3!==l.length&&1!==l.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===l.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object(c.a)(e,t,l,n)}},1307:function(e,t,n){"use strict";n.d(t,"b",(function(){return r})),n.d(t,"a",(function(){return o}));const r=1.7580993408473768,o=1.0507009873554805},1308:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(1208);function o(e,t){const n=[];for(let i=0;i<t.length;i++)t[i]&&n.push(i);const o=Object(r.a)(e,"int32"),c=Object(r.a)([n.length,e.length],"int32");for(let i=0;i<n.length;i++){const t=o.indexToLoc(n[i]),r=i*e.length;c.values.set(t,r)}return c.toTensor()}},1309:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({sin_:function(e){const t={x:Object(c.a)(e,"x","sin")};return r.a.runKernel(o.Cc,t)}})},1310:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({sinh_:function(e){const t={x:Object(c.a)(e,"x","sinh")};return r.a.runKernel(o.Dc,t)}})},1311:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({rsqrt_:function(e){const t={x:Object(c.a)(e,"x","rsqrt")};return r.a.runKernel(o.wc,t)}})},1312:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({cosh_:function(e){const t={x:Object(c.a)(e,"x","cosh")};return r.a.runKernel(o.J,t)}})},1313:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({argMin_:function(e,t=0){const n={x:Object(c.a)(e,"x","argMin")},l={axis:t};return r.a.runKernel(o.i,n,l)}})},1314:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1187),l=n(1174),d=n(1173);const h=Object(d.a)({atan2_:function(a,b){let e=Object(l.a)(a,"a","atan2"),t=Object(l.a)(b,"b","atan2");[e,t]=Object(c.makeTypesMatch)(e,t);const n={a:e,b:t};return r.a.runKernel(o.m,n)}})},1315:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1173);const h=Object(d.a)({depthToSpace_:function(e,t,n="NHWC"){const d=Object(c.a)(e,"x","depthToSpace"),h="NHWC"===n?d.shape[1]:d.shape[2],f="NHWC"===n?d.shape[2]:d.shape[3],m="NHWC"===n?d.shape[3]:d.shape[1];l.b(h*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${h} and ${t}  for depthToSpace with input shape\n    ${d.shape}`)),l.b(f*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${f} and ${t} for depthToSpace with input shape\n        ${d.shape}`)),l.b(m%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${m} for depthToSpace with input shape ${d.shape}`));const y={x:d},x={blockSize:t,dataFormat:n};return r.a.runKernel(o.N,y,x)}})},1316:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1173),h=n(1178);const f=Object(d.a)({dilation2d_:function(e,filter,t,n,d=[1,1],f="NHWC"){const m=Object(c.a)(e,"x","dilation2d"),y=Object(c.a)(filter,"filter","dilation2d");l.b(3===m.rank||4===m.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${m.rank}.`)),l.b(3===y.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${y.rank}.`)),l.b("NHWC"===f,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${f}`));let x=m,O=!1;3===m.rank&&(x=Object(h.a)(m,[1,m.shape[0],m.shape[1],m.shape[2]]),O=!0);const w={x:x,filter:y},v={strides:t,pad:n,dilations:d},k=r.a.runKernel(o.S,w,v);return O?Object(h.a)(k,[k.shape[1],k.shape[2],k.shape[3]]):k}})},1317:function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(1187),o=n(1174),c=n(1182),l=n(1240),d=n(1173),h=n(1200),f=n(1186);const m=Object(d.a)({divNoNan_:function(a,b){let e=Object(o.a)(a,"a","div"),t=Object(o.a)(b,"b","div");[e,t]=Object(r.makeTypesMatch)(e,t);const n=Object(c.a)(e,t),d=Object(f.a)(n),m=Object(l.a)(t,d);return Object(h.a)(m,d,n)}})},1318:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1174),o=n(1235),c=n(1219),l=n(1173),d=n(1178);const h=Object(l.a)({dot_:function(e,t){const n=Object(r.a)(e,"t1","dot"),l=Object(r.a)(t,"t2","dot");o.b(!(1!==n.rank&&2!==n.rank||1!==l.rank&&2!==l.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${l.rank}.`));const h=1===n.rank?n.size:n.shape[1],f=1===l.rank?l.size:l.shape[0];if(o.b(h===f,(()=>`Error in dot: inner dimensions of inputs must match, but got ${h} and ${f}.`)),1===n.rank&&1===l.rank){const e=Object(d.a)(n,[1,-1]),t=Object(d.a)(l,[-1,1]),r=Object(c.a)(e,t);return Object(d.a)(r,[])}if(1===n.rank&&2===l.rank){const e=Object(d.a)(n,[1,-1]),t=Object(d.a)(l,[l.shape[0],l.shape[1]]),r=Object(c.a)(e,t);return Object(d.a)(r,[r.size])}if(2===n.rank&&1===l.rank){const e=Object(d.a)(l,[-1,1]),t=Object(c.a)(n,e);return Object(d.a)(t,[t.size])}{const e=Object(d.a)(l,[l.shape[0],l.shape[1]]);return Object(c.a)(n,e)}}})},1319:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1173),h=n(1178);const f=Object(d.a)({localResponseNormalization_:function(e,t=5,n=1,d=1,f=.5){const m=Object(c.a)(e,"x","localResponseNormalization");l.b(4===m.rank||3===m.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${m.rank}.`)),l.b(l.v(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let y=m,x=!1;3===m.rank&&(x=!0,y=Object(h.a)(m,[1,m.shape[0],m.shape[1],m.shape[2]]));const O={x:y},w={depthRadius:t,bias:n,alpha:d,beta:f},v=r.a.runKernel(o.wb,O,w);return x?Object(h.a)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},1320:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(1174),o=n(1184),c=n(1214),l=n(1250),d=n(1283),h=n(1173);const f=Object(h.a)({logicalXor_:function(a,b){const e=Object(r.a)(a,"a","logicalXor","bool"),t=Object(r.a)(b,"b","logicalXor","bool");return Object(o.a)(e.shape,t.shape),Object(c.a)(Object(d.a)(a,b),Object(l.a)(Object(c.a)(a,b)))}})},1321:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1173);const h=Object(d.a)({mirrorPad_:function(e,t,n){l.b("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const d=Object(c.a)(e,"x","mirrorPad");if(0===d.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");l.b(t.length===d.rank,(()=>`Padding doesn't match input. Must be ${d.rank}. Got ${t.length}.`));const h="reflect"===n?1:0;for(let i=0;i<d.rank;i++)l.b(2===t[i].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),l.b(t[i][0]>=0&&t[i][0]<=d.shape[i]-h&&t[i][1]>=0&&t[i][1]<=d.shape[i]-h,(()=>`Padding in dimension ${i} cannot be greater than or equal to ${d.shape[i]-h} or less than 0 for input of shape ${d.shape}`));const f={paddings:t,mode:n},m={x:d};return r.a.runKernel(o.Sb,m,f)}})},1322:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1187),l=n(1174),d=n(1173);const h=Object(d.a)({mod_:function(a,b){let e=Object(l.a)(a,"a","mod"),t=Object(l.a)(b,"b","mod");[e,t]=Object(c.makeTypesMatch)(e,t);const n={a:e,b:t};return r.a.runKernel(o.Tb,n)}})},1323:function(e,t,n){"use strict";n.d(t,"a",(function(){return x}));var r=n(1174),o=n(1235),c=n(1254),l=n(1251),d=n(1196),h=n(1261),f=n(1173),m=n(1178),y=n(1249);const x=Object(f.a)({pool_:function(input,e,t,n,f,x){null==f&&(f=[1,1]),null==x&&(x=1),0===n&&(n="valid");const O=Object(r.a)(input,"x","maxPool");let w=O,v=!1;3===O.rank&&(v=!0,w=Object(m.a)(O,[1,O.shape[0],O.shape[1],O.shape[2]])),o.b(d.h(x,f),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${x} and dilations '${f}'`));const k=d.e(w.shape,e,x,f,n),I=[k.dilationHeight,k.dilationWidth];let N;N="same"===n?function(e,t){const n=e.map(((s,i)=>s+(s-1)*(t[i]-1))).map((s=>s-1)),r=n.map((s=>Math.floor(s/2))),o=n.map(((s,i)=>s-r[i]));return n.map(((e,i)=>[r[i],o[i]]))}([k.filterHeight,k.filterWidth],I):[[0,0],[0,0]];const j=1===I[0]&&1===I[1],[S,T]=function(e,t,n){const r=n.map((b=>b[0])),o=n.map((b=>b[1])),c=e.concat(r,o),l=t.map(((b,i)=>(b-c[i]%b)%b)),d=o.map(((s,i)=>s+l[i])),h=t.map(((e,i)=>[r[i],d[i]])),f=t.map(((e,i)=>[0,l[i]]));return[h,f]}([k.inHeight,k.inWidth],I,N),C=j?n:"valid",$=j?w:Object(y.a)(w,I,S),E=("avg"===t?()=>Object(c.a)($,e,x,C):()=>Object(h.a)($,e,x,C))(),A=j?E:Object(l.a)(E,I,T);return v?Object(m.a)(A,[A.shape[1],A.shape[2],A.shape[3]]):A}})},1324:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1174),l=n(1181),d=n(1173);const h=Object(d.a)({prod_:function(e,t=null,n=!1){let d=Object(c.a)(e,"x","prod");"bool"===d.dtype&&(d=Object(l.a)(d,"int32"));const h={x:d},f={axis:t,keepDims:n};return r.a.runKernel(o.hc,h,f)}})},1325:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({topk_:function(e,t=1,n=!0){const l=Object(c.a)(e,"x","topk");if(0===l.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const d=l.shape[l.shape.length-1];if(t>d)throw new Error(`'k' passed to topk() must be <= the last dimension (${d}) but got ${t}`);const h={x:l},f={k:t,sorted:n},[m,y]=r.a.runKernel(o.Vc,h,f);return{values:m,indices:y}}})},1326:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1173);const h=Object(d.a)({unique_:function(e,t=0){const n=Object(c.a)(e,"x","unique","string_or_numeric");Object(l.b)(n.rank>0,(()=>"The input tensor must be at least 1D"));const d={x:n},h={axis:t},[f,m]=r.a.runKernel(o.Yc,d,h);return{values:f,indices:m}}})},1327:function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"d",(function(){return l})),n.d(t,"f",(function(){return h})),n.d(t,"c",(function(){return f})),n.d(t,"e",(function(){return m})),n.d(t,"a",(function(){return y}));var r=n(1171);function o(input,e){return c(input,e)}function c(input,e,t=new Map,n=new Set){if(null==input)return null;if(n.has(input))throw new Error("Circular references are not supported.");if(t.has(input))return t.get(input);const r=e(input);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(m(input)){const r=Array.isArray(input)?[]:{};n.add(input);for(const o in input){const l=c(input[o],e,t,n);r[o]=l}return n.delete(input),r}throw new Error(`Can't recurse into non-iterable type: ${input}`)}return t.set(input,r.value),r.value}function l(e,t=h){return d(e,t)}function d(e,t,n=new Set){const input=e[0];if(n.has(input))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(m(input)){const r=Array.isArray(input)?[]:{};n.add(input);for(const o in input){const c=d(e.map((e=>e[o])),t,n);r[o]=c}return n.delete(input),r}throw new Error(`Can't recurse into non-iterable type: ${input}`)}return r.value}function h(e){return null===e?null:m(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function f(input,e){const t=new Map;c(input,e,t);for(const e of Array.from(t.keys())){const n=t.get(e);if(r.of.isPromise(n)){const r=await n;t.set(e,r)}}return c(input,e,t)}function m(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof r.Vc))}function y(e){return null==e||(null===(t=e)||"object"!=typeof t&&"function"!=typeof t)||Array.isArray(e)||"object"==typeof e&&e instanceof r.Vc||r.of.isTypedArray(e);var t}},1328:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},1331:function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1181),h=n(1173),f=n(1178);const m=Object(h.a)({avgPool3d_:function(e,t,n,h,m,y="NDHWC"){const x=Object(c.a)(e,"x","avgPool3d","float32");let O=x,w=!1;4===x.rank&&(w=!0,O=Object(f.a)(x,[1,x.shape[0],x.shape[1],x.shape[2],x.shape[3]])),l.b(5===O.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${O.rank}.`)),l.b("NDHWC"===y,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${y}`)),null!=m&&l.b(l.v(h),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${m} but got pad ${h}.`));const v={x:O},k={filterSize:t,strides:n,pad:h,dimRoundingMode:m,dataFormat:y};let I=r.a.runKernel(o.p,v,k);return I=Object(d.a)(I,O.dtype),w?Object(f.a)(I,[I.shape[1],I.shape[2],I.shape[3],I.shape[4]]):I}})},1332:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1173);const h=Object(d.a)({clipByValue_:function(e,t,n){const d=Object(c.a)(e,"x","clipByValue");l.b(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const h={x:d},f={clipValueMin:t,clipValueMax:n};return r.a.runKernel(o.y,h,f)}})},1333:function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1196),h=n(1173),f=n(1178);const m=Object(h.a)({conv3d_:function(e,filter,t,n,h="NDHWC",m=[1,1,1]){const y=Object(c.a)(e,"x","conv3d"),x=Object(c.a)(filter,"filter","conv3d");let O=y,w=!1;4===y.rank&&(w=!0,O=Object(f.a)(y,[1,y.shape[0],y.shape[1],y.shape[2],y.shape[3]])),l.b(5===O.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${O.rank}.`)),l.b(5===x.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${x.rank}.`)),l.b(O.shape[4]===x.shape[3],(()=>`Error in conv3d: depth of input (${O.shape[4]}) must match input depth for filter ${x.shape[3]}.`)),l.b(Object(d.h)(t,m),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${m}'`)),l.b("NDHWC"===h,(()=>`Error in conv3d: got dataFormat of ${h} but only NDHWC is currently supported.`));const v={x:O,filter:x},k={strides:t,pad:n,dataFormat:h,dilations:m},I=r.a.runKernel(o.F,v,k);return w?Object(f.a)(I,[I.shape[1],I.shape[2],I.shape[3],I.shape[4]]):I}})},1334:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1235),l=n(1173),d=n(1178);const h=Object(l.a)({conv3DBackpropInput_:function(e,t,filter,n,l){c.b(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let h=e,f=t,m=!1;4===t.rank&&(m=!0,f=Object(d.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),h=[1,e[0],e[1],e[2],e[3]]);const y=h[4],x=f.shape[4];c.b(5===h.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${h.length}.`)),c.b(5===f.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${f.rank}`)),c.b(5===filter.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${filter.rank}`)),c.b(y===filter.shape[3],(()=>`Error in conv3dDerInput: depth of input (${y}) must match input depth for filter ${filter.shape[3]}.`)),c.b(x===filter.shape[4],(()=>`Error in conv3dDerInput: depth of output (${x}) must match output depth for filter ${filter.shape[4]}.`));const O={dy:f,filter:filter},w={pad:l,strides:n,inputShape:h},v=r.a.runKernel(o.H,O,w);return m?Object(d.a)(v,[v.shape[1],v.shape[2],v.shape[3],v.shape[4]]):v}})},1335:function(e,t,n){"use strict";n.d(t,"a",(function(){return O}));var r=n(1195),o=n(1174),c=n(1181),l=n(1206),d=n(1223),h=n(1224),f=n(1179),m=n(1173),y=n(1183),x=n(1189);const O=Object(m.a)({logSoftmax_:function(e,t=-1){const n=Object(o.a)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Object(r.a)(((e,n)=>{const r=Object(h.a)(e,t,!0),o=Object(y.a)(e,r),m=Object(y.a)(Object(c.a)(o,"float32"),Object(d.a)(Object(x.a)(Object(l.a)(o),t,!0)));n([m]);return{value:m,gradFunc:(e,n)=>{const[r]=n,o=Object(l.a)(r);return Object(y.a)(e,Object(f.a)(Object(x.a)(e,t,!0),o))}}}))(n)}})},1336:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1173),h=n(1178);const f=Object(d.a)({maxPool3d_:function(e,t=[1,1,1],n,d,f,m="NDHWC"){const y=Object(c.a)(e,"x","maxPool3d");let x=y,O=!1;4===y.rank&&(O=!0,x=Object(h.a)(y,[1,y.shape[0],y.shape[1],y.shape[2],y.shape[3]])),l.b(5===x.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${x.rank}.`)),l.b("NDHWC"===m,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${m}`)),null!=f&&l.b(l.v(d),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${f} but got pad ${d}.`));const w={x:x},v={filterSize:t,strides:n,pad:d,dimRoundingMode:f,dataFormat:m},k=r.a.runKernel(o.Kb,w,v);return O?Object(h.a)(k,[k.shape[1],k.shape[2],k.shape[3],k.shape[4]]):k}})},1337:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({onesLike_:function(e){const t={x:Object(c.a)(e,"x","onesLike")};return r.a.runKernel(o.cc,t)}})},1339:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({softmax_:function(e,t=-1){const n=Object(c.a)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const l={logits:n},d={dim:t};return r.a.runKernel(o.Fc,l,d)}})},1340:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({tanh_:function(e){const t={x:Object(c.a)(e,"x","tanh")};return r.a.runKernel(o.Tc,t)}})},1341:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(1208),o=n(1173),c=n(1296);const l=Object(o.a)({truncatedNormal_:function(e,t=0,n=1,o,l){if(null!=o&&"bool"===o)throw new Error("Unsupported data type $ { dtype }");const d=new c.a(t,n,o,!0,l),h=Object(r.a)(e,o);for(let i=0;i<h.values.length;i++)h.values[i]=d.nextValue();return h.toTensor()}})},1342:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1173),h=n(1178);const f=Object(d.a)({resizeNearestNeighbor_:function(e,t,n=!1,d=!1){const f=Object(c.a)(e,"images","resizeNearestNeighbor");l.b(3===f.rank||4===f.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${f.rank}.`)),l.b(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),l.b("float32"===f.dtype||"int32"===f.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),l.b(!1===d||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let m=f,y=!1;3===f.rank&&(y=!0,m=Object(h.a)(f,[1,f.shape[0],f.shape[1],f.shape[2]]));const[]=t,x={images:m},O={alignCorners:n,halfPixelCenters:d,size:t},w=r.a.runKernel(o.rc,x,O);return y?Object(h.a)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})},1343:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1173),h=n(1178);const f=Object(d.a)({resizeBilinear_:function(e,t,n=!1,d=!1){const f=Object(c.a)(e,"images","resizeBilinear");l.b(3===f.rank||4===f.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${f.rank}.`)),l.b(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),l.b(!1===d||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let m=f,y=!1;3===f.rank&&(y=!0,m=Object(h.a)(f,[1,f.shape[0],f.shape[1],f.shape[2]]));const[]=t,x={images:m},O={alignCorners:n,halfPixelCenters:d,size:t},w=r.a.runKernel(o.pc,x,O);return y?Object(h.a)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})},1344:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1173),l=n(1178);const d=Object(c.a)({depthwiseConv2dNativeBackpropInput_:function(e,t,filter,n,c,d=[1,1],h){let f=t,m=!1;3===t.rank&&(m=!0,f=Object(l.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const y={dy:f,filter:filter},x={strides:n,pad:c,dimRoundingMode:h,dilations:d,inputShape:e},O=r.a.runKernel(o.Q,y,x);return m?Object(l.a)(O,[O.shape[1],O.shape[2],O.shape[3]]):O}})},1345:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1173),l=n(1178);const d=Object(c.a)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,c,d,h=[1,1],f){let m=e;3===e.rank&&(m=Object(l.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let y=t;3===y.rank&&(y=Object(l.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const x={x:m,dy:y},O={strides:c,pad:d,dimRoundingMode:f,dilations:h,filterShape:n};return r.a.runKernel(o.P,x,O)}})},1346:function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return o}));const r="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:void 0!==e?e:e=>e();function o(){return new Promise((e=>r((()=>e()))))}}).call(this,n(634).setImmediate)},1347:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({acos_:function(e){const t={x:Object(c.a)(e,"x","acos")};return r.a.runKernel(o.b,t)}})},1348:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({acosh_:function(e){const t={x:Object(c.a)(e,"x","acosh")};return r.a.runKernel(o.c,t)}})},1349:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({asin_:function(e){const t={x:Object(c.a)(e,"x","asin")};return r.a.runKernel(o.j,t)}})},1350:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({asinh_:function(e){const t={x:Object(c.a)(e,"x","asinh")};return r.a.runKernel(o.k,t)}})},1351:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({atan_:function(e){const t={x:Object(c.a)(e,"x","atan")};return r.a.runKernel(o.l,t)}})},1352:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({atanh_:function(e){const t={x:Object(c.a)(e,"x","atanh")};return r.a.runKernel(o.n,t)}})},1353:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({ceil_:function(e){const t={x:Object(c.a)(e,"x","ceil")};return r.a.runKernel(o.x,t)}})},1354:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1181),h=n(1173);const f=Object(h.a)({erf_:function(e){let t=Object(c.a)(e,"x","erf");l.b("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Object(d.a)(t,"float32"));const n={x:t};return r.a.runKernel(o.Z,n)}})},1355:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({expm1_:function(e){const t={x:Object(c.a)(e,"x","expm1")};return r.a.runKernel(o.cb,t)}})},1356:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({isFinite_:function(e){const t={x:Object(c.a)(e,"x","isFinite")};return r.a.runKernel(o.tb,t)}})},1357:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({isInf_:function(e){const t={x:Object(c.a)(e,"x","isInf")};return r.a.runKernel(o.ub,t)}})},1358:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({isNaN_:function(e){const t={x:Object(c.a)(e,"x","isNaN")};return r.a.runKernel(o.vb,t)}})},1359:function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(1195),o=n(1174),c=n(1179),l=n(1193),d=n(1173),h=n(1246),f=n(1301);const m=Object(d.a)({logSigmoid_:function(e){const t=Object(o.a)(e,"x","logSigmoid");return Object(r.a)((e=>({value:Object(l.a)(Object(f.a)(Object(l.a)(e))),gradFunc:t=>Object(c.a)(t,Object(h.a)(Object(l.a)(e)))})))(t)}})},1360:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({reciprocal_:function(e){const t={x:Object(c.a)(e,"x","reciprocal")};return r.a.runKernel(o.lc,t)}})},1361:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({round_:function(e){const t={x:Object(c.a)(e,"x","round")};return r.a.runKernel(o.vc,t)}})},1362:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({sign_:function(e){const t={x:Object(c.a)(e,"x","sign")};return r.a.runKernel(o.Bc,t)}})},1363:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({stridedSlice_:function(e,t,n,l,d=0,h=0,f=0,m=0,y=0){const x={x:Object(c.a)(e,"x","stridedSlice")},O={begin:t,end:n,strides:l,beginMask:d,endMask:h,ellipsisMask:f,newAxisMask:m,shrinkAxisMask:y};return r.a.runKernel(o.Pc,x,O)}})},1364:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({tan_:function(e){const t={x:Object(c.a)(e,"x","tan")};return r.a.runKernel(o.Sc,t)}})},1365:function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return E})),n.d(t,"i",(function(){return R})),n.d(t,"c",(function(){return F})),n.d(t,"f",(function(){return D})),n.d(t,"e",(function(){return L})),n.d(t,"d",(function(){return z})),n.d(t,"k",(function(){return B})),n.d(t,"g",(function(){return W})),n.d(t,"h",(function(){return V})),n.d(t,"j",(function(){return U})),n.d(t,"b",(function(){return G}));var r=n(1171),o=n(1418),c=n(1252),l=n(1191),d=n(1419),h=n(1420),f=n(1421),m=n(1422),y=n(1423),x=n(1424),O=n(1425),w=n(1426),v=n(1427),k=n(1428),I=n(1429),N=n(1430),j=n(1431),S=n(1432),T=n(1433),C=n(1434),$=n(1435);class E{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[d,h,f,m,y,x,O,I,k,w,N,j,S,T,C,$,v].map((e=>e.json)));this.opMappers=e.reduce(((map,e)=>(map[e.tfOpName]=e,map)),{})}transformGraph(e,t={}){const n=e.node,r=[],o=[],c=[],d=n.reduce(((map,e)=>(map[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?r.push(map[e.name]):"Const"===e.op?o.push(map[e.name]):null!=e.input&&0!==e.input.length||c.push(map[e.name]),map)),{});let h=[];const f=[];let m={},y={};null!=t&&(m=this.mapSignatureEntries(t.inputs),y=this.mapSignatureEntries(t.outputs));const x=Object.keys(d);x.forEach((e=>{const t=d[e];t.inputNames.forEach((e=>{const[n]=Object(l.b)(e);t.inputs.push(d[n]),d[n].children.push(t)}))})),0===Object.keys(y).length?x.forEach((e=>{const t=d[e];0===t.children.length&&f.push(t)})):Object.keys(y).forEach((e=>{const[t]=Object(l.b)(e),n=d[t];null!=n&&(n.signatureKey=y[e],f.push(n))})),Object.keys(m).length>0?Object.keys(m).forEach((e=>{const[t]=Object(l.b)(e),n=d[t];n&&(n.signatureKey=m[e],h.push(n))})):h=r;let O={};null!=e.library&&null!=e.library.function&&(O=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const w={nodes:d,inputs:h,outputs:f,weights:o,placeholders:r,signature:t,functions:O};return c.length>0&&(w.initNodes=c),w}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=Object(c.a)(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((input=>input.startsWith("^")?input.substr(1):input)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((map,param)=>(map[param.name]={type:param.type,inputIndexStart:param.start,inputIndexEnd:param.end},map)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((map,param)=>{const t=param.type;let n;switch(param.type){case"string":n=R(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=R(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"string[]":n=V(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=V(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"number":n=D(e.attr,param.tfName,param.defaultValue||0),void 0===n&&param.tfDeprecatedName&&(n=D(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"number[]":n=W(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=W(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"bool":n=F(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=F(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"bool[]":n=G(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=G(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"shape":n=B(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=B(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"shape[]":n=U(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=U(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"dtype":n=L(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=L(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"dtype[]":n=z(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=z(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"func":n=M(e.attr,param.tfName,param.defaultValue),void 0===n&&param.tfDeprecatedName&&(n=M(e.attr,param.tfDeprecatedName,param.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${param.type} for op: ${e.op}`)}return map[param.name]={value:n,type:t},map}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((map,e)=>(map[e.name]=this.mapNode(e),"Const"===e.op&&n.push(map[e.name]),map)),{}));const o=[],c=[];e.signature.inputArg.forEach((e=>{const[t]=Object(l.b)(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:_(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,o.push(n),r[t]=n}));Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach((e=>{const[n]=Object(l.b)(e);t.inputs.push(r[n]),r[n].children.push(t)}))}));const d=e.ret;e.signature.outputArg.forEach((output=>{const[e,t]=Object(l.b)(d[output.name]),n=r[e];null!=n&&(n.defaultOutput=t,c.push(n))}));const h=this.mapArgsToSignature(e);return{nodes:r,inputs:o,outputs:c,weights:n,placeholders:[],signature:h}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((map,e)=>(map[e.name]=this.mapArgToTensorInfo(e),map)),{}),outputs:e.signature.outputArg.reduce(((map,t)=>(map[t.name]=this.mapArgToTensorInfo(t,e.ret),map)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function A(s,t){const n=Array.isArray(s)?String.fromCharCode.apply(null,s):function(text){const t=Object(r.Od)().global;if(void 0!==t.atob)return t.atob(text);if(void 0!==e)return new e(text,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(s);return t?n:n.toLowerCase()}function R(e,t,n,r=!1){const param=e[t];return null!=param?A(param.s,r):n}function F(e,t,n){const param=e[t];return param?param.b:n}function D(e,t,n){const param=e[t]||{},r=null!=param.i?param.i:null!=param.f?param.f:n;return"number"==typeof r?r:parseInt(r,10)}function _(e){switch("string"==typeof e&&(e=o.a[e]),e){case o.a.DT_FLOAT:return"float32";case o.a.DT_INT32:case o.a.DT_INT64:case o.a.DT_INT8:case o.a.DT_UINT8:return"int32";case o.a.DT_BOOL:return"bool";case o.a.DT_DOUBLE:return"float32";case o.a.DT_STRING:return"string";default:return null}}function M(e,t,n){const param=e[t];return param&&param.func?param.func.name:n}function L(e,t,n){const param=e[t];return param&&param.type?_(param.type):n}function z(e,t,n){const param=e[t];return param&&param.list&&param.list.type?param.list.type.map((e=>_(e))):n}function P(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function B(e,t,n){const param=e[t];return param&&param.shape?P(param.shape):n}function W(e,t,n){const param=e[t];return param?((param.list.f&&param.list.f.length?param.list.f:param.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function V(e,t,n,r=!1){const param=e[t];return param&&param.list&&param.list.s?param.list.s.map((e=>A(e,r))):n}function U(e,t,n){const param=e[t];return param&&param.list&&param.list.shape?param.list.shape.map((e=>P(e))):n}function G(e,t,n){const param=e[t];return param&&param.list&&param.list.b?param.list.b:n}}).call(this,n(1286).Buffer)},1366:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1173);const h=Object(d.a)({addN_:function(e){l.b(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),l.b(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,i)=>Object(c.a)(e,`tensors${i}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!l.a(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const d=t;return r.a.runKernel(o.e,d)}})},1367:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({maxPoolWithArgmax_:function(e,t,n,l,d=!1){const h={x:Object(c.a)(e,"x","maxPoolWithArgmax")},f={filterSize:t,strides:n,pad:l,includeBatchInIndex:d},m=r.a.runKernel(o.Nb,h,f);return{result:m[0],indexes:m[1]}}})},1368:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(1175),o=n(1172);function c(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const c={start:e,stop:t,num:n};return r.a.runKernel(o.Bb,{},c)}},1369:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173),d=n(1178);const h=Object(l.a)({multinomial_:function(e,t,n,l=!1){const h=Object(c.a)(e,"logits","multinomial"),f=h.size,m=h.rank;if(f<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${f}.`);if(m>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${m}`);n=n||Math.random();const y={logits:1===m?Object(d.a)(h,[1,-1]):h},x={numSamples:t,seed:n,normalized:l},O=r.a.runKernel(o.Ub,y,x);return 1===m?Object(d.a)(O,[O.size]):O}})},1370:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(1308),o=n(1174);const c=async function(e){const t=Object(o.a)(e,"condition","whereAsync","bool"),n=await t.data(),c=Object(r.a)(t.shape,n);return e!==t&&t.dispose(),c}},1371:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(1176),o=n(1174),c=n(1235);const l=async function(e,t){const n=Object(o.a)(e,"x","setdiff1d"),l=Object(o.a)(t,"y","setdiff1d");c.b(n.dtype===l.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${l.dtype}).`)),c.b(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),c.b(1===l.rank,(()=>`y should be 1D tensor, but got y (${l.shape}).`));const d=await n.data(),h=await l.data(),f=new Set(h);let m=0;for(let i=0;i<d.length;i++)f.has(d[i])||m++;const y=new r.b([m],n.dtype),x=new r.b([m],"int32");for(let i=0,p=0;i<d.length;i++)f.has(d[i])||(y.values[p]=d[i],x.values[p]=i,p++);return[y.toTensor(),x.toTensor()]}},1372:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({einsum_:function(e,...t){const n=t.map(((e,i)=>Object(c.a)(e,`tensors${i}`,"einsum"))),l={equation:e};return r.a.runKernel(o.V,n,l)}})},1373:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1173);const h=Object(d.a)({bincount_:function(e,t,n){const d=Object(c.a)(e,"x","bincount"),h=Object(c.a)(t,"weights","bincount");l.b("int32"===d.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${d.dtype}`)),l.b(n>=0,(()=>`size must be non-negative, but got ${n}.`)),l.b(h.size===d.size||0===h.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${d.shape}, weights shape: ${h.shape}.`));const f={x:d,weights:h},m={size:n};return r.a.runKernel(o.u,f,m)}})},1374:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1174),l=n(1235),d=n(1173);const h=Object(d.a)({denseBincount_:function(e,t,n,d=!1){const h=Object(c.a)(e,"x","denseBincount"),f=Object(c.a)(t,"weights","denseBincount");l.b("int32"===h.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${h.dtype}`)),l.b(h.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${h.rank}.`)),l.b(n>=0,(()=>`size must be non-negative, but got ${n}.`)),l.b(f.size===h.size||0===f.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${h.shape}, weights shape: ${f.shape}.`));const m={x:h,weights:f},y={size:n,binaryOutput:d};return r.a.runKernel(o.M,m,y)}})},1375:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173),d=n(1248);const h=Object(l.a)({scatterND_:function(e,t,n){const l=Object(c.a)(e,"indices","scatterND","int32"),h=Object(c.a)(t,"updates","scatterND");d.b(h,l,n);const f={indices:l,updates:h},m={shape:n};return r.a.runKernel(o.xc,f,m)}})},1376:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172),c=n(1174),l=n(1173);const d=Object(l.a)({gatherND_:function(e,t){const n=Object(c.a)(t,"indices","gatherND","int32"),l={params:Object(c.a)(e,"x","gatherND"),indices:n};return r.a.runKernel(o.mb,l)}})},1382:function(e,t,n){"use strict";n.d(t,"b",(function(){return o.Jd})),n.d(t,"a",(function(){return o.sd})),n.d(t,"c",(function(){return _l}));var r={};n.r(r),n.d(r,"simpleAbsImpl",(function(){return Ad})),n.d(r,"addImpl",(function(){return kd})),n.d(r,"bincountImpl",(function(){return bh})),n.d(r,"bincountReduceImpl",(function(){return gh})),n.d(r,"ceilImpl",(function(){return Oh})),n.d(r,"concatImpl",(function(){return jh})),n.d(r,"expImpl",(function(){return Op})),n.d(r,"expm1Impl",(function(){return Np})),n.d(r,"floorImpl",(function(){return Wp})),n.d(r,"gatherV2Impl",(function(){return Jp})),n.d(r,"greaterImpl",(function(){return Qp})),n.d(r,"lessImpl",(function(){return pf})),n.d(r,"linSpaceImpl",(function(){return xf})),n.d(r,"logImpl",(function(){return wf})),n.d(r,"maxImpl",(function(){return _f})),n.d(r,"maximumImpl",(function(){return zf})),n.d(r,"minimumImpl",(function(){return Xf})),n.d(r,"multiplyImpl",(function(){return ep})),n.d(r,"negImpl",(function(){return om})),n.d(r,"notEqualImpl",(function(){return fm})),n.d(r,"prodImpl",(function(){return Sm})),n.d(r,"rangeImpl",(function(){return Cm})),n.d(r,"rsqrtImpl",(function(){return Bm})),n.d(r,"sliceImpl",(function(){return hh})),n.d(r,"sparseReshapeImpl",(function(){return ib})),n.d(r,"squaredDifferenceImpl",(function(){return fb})),n.d(r,"stridedSliceImpl",(function(){return xb})),n.d(r,"subImpl",(function(){return Ep})),n.d(r,"tileImpl",(function(){return Nb})),n.d(r,"topKImpl",(function(){return Sb})),n.d(r,"transposeImpl",(function(){return zd})),n.d(r,"uniqueImpl",(function(){return Fb}));var o=n(1171),c=n(1172),l=n(1181),d=n(1179),h=n(1232);const f={kernelName:c.a,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(h.a)(Object(l.a)(n,"float32"),-1))}}};var div=n(1182),m=n(1193),y=n(1185),x=n(1203),O=n(1190),sub=n(1183);const w={kernelName:c.b,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const a=Object(O.a)(Object(l.a)(n,"float32")),b=Object(x.a)(Object(sub.a)(Object(y.a)(1),a));return Object(m.a)(Object(div.a)(e,b))}}}},v={kernelName:c.c,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const a=Object(x.a)(Object(sub.a)(Object(O.a)(Object(l.a)(n,"float32")),1));return Object(div.a)(e,a)}}}};var k=n(1184),I=n(1178),N=n(1189);const j={kernelName:c.d,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t,n=k.a(a.shape,b.shape);return{a:()=>{let t=e;const r=k.c(a.shape,n);return r.length>0&&(t=Object(N.a)(t,r)),Object(I.a)(t,a.shape)},b:()=>{let t=e;const r=k.c(b.shape,n);return r.length>0&&(t=Object(N.a)(t,r)),Object(I.a)(t,b.shape)}}}},S={kernelName:c.e,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,i)=>{n[i]=()=>e.clone()})),n}};var T=n(1186);const C={kernelName:c.h,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(T.a)(n)}}},$={kernelName:c.i,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(T.a)(n)}}},E={kernelName:c.j,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(div.a)(e,Object(x.a)(Object(sub.a)(Object(y.a)(1),Object(O.a)(Object(l.a)(n,"float32")))))}}};var A=n(1188);const R={kernelName:c.k,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const a=Object(x.a)(Object(A.a)(Object(y.a)(1),Object(O.a)(Object(l.a)(n,"float32"))));return Object(div.a)(e,a)}}}},F={kernelName:c.m,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t,n=Object(k.a)(a.shape,b.shape);return{a:()=>{const t=Object(A.a)(Object(O.a)(a),Object(O.a)(b));let r=Object(d.a)(e,Object(div.a)(b,t));const o=Object(k.c)(a.shape,n);return o.length>0&&(r=Object(N.a)(r,o)),Object(I.a)(r,a.shape)},b:()=>{const t=Object(A.a)(Object(O.a)(a),Object(O.a)(b));let r=Object(m.a)(Object(d.a)(e,Object(div.a)(a,t)));const o=Object(k.c)(b.shape,n);return o.length>0&&(r=Object(N.a)(r,o)),Object(I.a)(r,b.shape)}}}},D={kernelName:c.l,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(div.a)(e,Object(A.a)(Object(O.a)(Object(l.a)(n,"float32")),1))}}},_={kernelName:c.n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(div.a)(e,Object(sub.a)(Object(y.a)(1),Object(O.a)(Object(l.a)(n,"float32"))))}}};var M=n(1175),L=n(1174),z=n(1235),P=n(1173);const B=Object(P.a)({avgPool3dGrad_:function(e,input,t,n,r,o){const l=Object(L.a)(e,"dy","avgPool3dGrad"),d=Object(L.a)(input,"input","avgPool3dGrad");let h=l,f=d,m=!1;4===d.rank&&(m=!0,h=Object(I.a)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),f=Object(I.a)(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]])),z.b(5===h.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`)),z.b(5===f.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${f.rank}.`)),null!=o&&z.b(z.v(r),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`));const y={dy:h,input:f},x={filterSize:t,strides:n,pad:r,dimRoundingMode:o},O=M.a.runKernel(c.q,y,x);return m?Object(I.a)(O,[O.shape[1],O.shape[2],O.shape[3],O.shape[4]]):O}}),W={kernelName:c.p,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:o,strides:c,pad:l,dimRoundingMode:d}=n;return{x:()=>B(e,r,o,c,l,d)}}};const V=Object(P.a)({avgPoolGrad_:function(e,input,t,n,r){const o=Object(L.a)(e,"dy","avgPoolGrad"),l=Object(L.a)(input,"input","avgPoolGrad");z.b(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`));let d=l,h=o,f=!1;3===l.rank&&(f=!0,d=Object(I.a)(l,[1,l.shape[0],l.shape[1],l.shape[2]]),h=Object(I.a)(o,[1,o.shape[0],o.shape[1],o.shape[2]])),z.b(4===h.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${h.rank}.`)),z.b(4===d.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${d.rank}.`));const m={dy:h,input:d},y={filterSize:t,strides:n,pad:r},x=M.a.runKernel(c.r,m,y);return f?Object(I.a)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}}),U={kernelName:c.o,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:o,strides:c,pad:l}=n;return{x:()=>V(e,r,o,c,l)}}};var G=n(1219);const H={kernelName:c.s,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[a,b]=t,{transposeA:r,transposeB:o}=n;return r||o?!r&&o?{a:()=>Object(G.a)(e,b,!1,!1),b:()=>Object(G.a)(e,a,!0,!1)}:r&&!o?{a:()=>Object(G.a)(b,e,!1,!0),b:()=>Object(G.a)(a,e,!1,!1)}:{a:()=>Object(G.a)(b,e,!0,!0),b:()=>Object(G.a)(e,a,!0,!0)}:{a:()=>Object(G.a)(e,b,!1,!0),b:()=>Object(G.a)(a,e,!0,!1)}}};var K=n(1249);const X={kernelName:c.t,gradFunc:(e,t,n)=>{const{blockShape:r,crops:o}=n;return{x:()=>Object(K.a)(e,r,o)}}},Y={kernelName:c.v,gradFunc:(e,t,n)=>{const r=n,o=r.inputShape,c=r.shape,l=Array.from(c);for(let i=o.length-1;i>=0;i--)if(o[i]===c[i])l[i]=1;else if(1!==o[i])throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${c}].`);const d=[];for(let i=0;i<l.length;i++)l[i]>1&&d.push(i);return{x:()=>Object(N.a)(e,d,!0)}}},J={kernelName:c.w,gradFunc:e=>({x:()=>e.clone()})},Z={kernelName:c.x,gradFunc:e=>({x:()=>Object(T.a)(e)})};var Q=n(1213),ee=n(1218),te=n(1214),ne=n(1200);const re={kernelName:c.y,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:o,clipValueMax:c}=n;return{x:()=>Object(ne.a)(Object(te.a)(Object(Q.a)(r,o),Object(ee.a)(r,c)),e,Object(T.a)(e))}}},ae={kernelName:c.A,inputsToSave:["x"],gradFunc:f.gradFunc};var se=n(1229);const oe={kernelName:c.B,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:o}=n,c=Object(z.I)(o,t[0].shape)[0],l=r.map((s=>s[c]));return Object(se.a)(e,l,c).map((e=>()=>e))}};var ie=n(1305),ue=n(1294),ce=n(1196);const le={kernelName:c.C,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,o]=t,{dilations:c,strides:l,pad:d,dataFormat:h}=n;return z.b(ce.i(c),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${c}'`)),{x:()=>Object(ue.a)(r.shape,e,o,l,d,h),filter:()=>Object(ie.a)(r,e,o.shape,l,d,h)}}};var de=n(1212);const he={kernelName:c.E,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,filter]=t,{strides:o,pad:c,dataFormat:l,dimRoundingMode:d}=n;return{dy:()=>Object(de.a)(e,filter,o,c,l,1,d),filter:()=>Object(ie.a)(e,r,filter.shape,o,c,l,d)}}};const pe=Object(P.a)({conv3DBackpropFilter_:function(e,t,n,r,o){let l=e;4===e.rank&&(l=Object(I.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let d=t;4===d.rank&&(d=Object(I.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),z.b(5===l.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${l.shape}.`)),z.b(5===d.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${d.shape}.`)),z.b(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),z.b(l.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${l.shape[4]}) must match input depth in filter (${n[3]}.`)),z.b(d.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${d.shape[4]}) must match output depth for filter (${n[4]}).`));const h={x:l,dy:d},f={strides:r,pad:o,filterShape:n};return M.a.runKernel(c.G,h,f)}});var fe=n(1334);const me={kernelName:c.F,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:o,pad:c}=n;z.b(Object(ce.i)(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[l,d]=t;return{x:()=>Object(fe.a)(l.shape,e,d,o,c),filter:()=>pe(l,e,d.shape,o,c)}}};var be=n(1309);const ge={kernelName:c.I,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(Object(m.a)(Object(be.a)(Object(l.a)(n,"float32"))),e)}}};var ye=n(1310);const xe={kernelName:c.J,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(Object(ye.a)(Object(l.a)(n,"float32")),e)}}};var Oe=n(1202),we=n(1279),ve=n(1217);const ke={kernelName:c.L,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:o,exclusive:c,reverse:l}=n;return{x:()=>{const t=Object(Oe.f)([o],r.rank);let n=Object(we.a)(e,o,c,!l);return null!=t&&(n=Object(ve.a)(n,t)),n}}}};var Ie=n(1345),Ne=n(1344);const je={kernelName:c.O,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:o,pad:c,dimRoundingMode:l}=n,d=null==r?[1,1]:r;z.b(ce.i(d),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${d}'`));const[h,filter]=t;return z.b(4===h.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${h.rank}.`)),z.b(4===filter.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${filter.rank}.`)),z.b(h.shape[3]===filter.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${filter.shape[2]}.`)),z.b(ce.h(o,d),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${d}'.`)),null!=l&&z.b(z.v(c),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${l} but got pad ${c}.`)),{x:()=>Object(Ne.a)(h.shape,e,filter,o,c,r,l),filter:()=>Object(Ie.a)(h,e,filter.shape,o,c,r,l)}}},Se={kernelName:c.S,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,filter]=t,o={x:r,filter:filter,dy:e},l={x:r,filter:filter,dy:e};return{x:()=>M.a.runKernel(c.U,o,n),filter:()=>M.a.runKernel(c.T,l,n)}}},Te={kernelName:c.W,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>M.a.runKernel(c.X,r)}}};var Ce=n(1206);const $e={kernelName:c.Z,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=Object(d.a)(Object(Ce.a)(Object(m.a)(Object(O.a)(n))),2/Math.sqrt(Math.PI));return{x:()=>Object(d.a)(e,a)}}},Ee={kernelName:c.ab,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,n)}}},Ae={kernelName:c.bb,inputsToSave:["input"],gradFunc:(e,t)=>{const[input]=t;return{input:()=>Object(I.a)(e,input.shape)}}},Re={kernelName:c.cb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(Ce.a)(n))}}},Fe={kernelName:c.gb,gradFunc:e=>({x:()=>Object(T.a)(e)})},De={kernelName:c.hb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t,n=Object(k.a)(a.shape,b.shape);return{a:()=>{const t=Object(div.a)(e,Object(l.a)(b,"float32")),r=Object(k.c)(a.shape,n);return r.length>0?Object(I.a)(Object(N.a)(t,r),a.shape):t},b:()=>{let t=Object(d.a)(e,Object(l.a)(a,"float32"));const r=Object(k.c)(b.shape,n);r.length>0&&(t=Object(I.a)(Object(N.a)(t,r),b.shape));const o=Object(O.a)(b);return Object(m.a)(Object(div.a)(t,Object(l.a)(o,"float32")))}}}};var _e=n(1311),Me=n(1242);const Le={kernelName:c.jb,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[o,c,l,h]=t,f=null==h?Object(y.a)(1):h,m=Object(k.c)(c.shape,o.shape),x=[];if(1===c.rank){for(let i=0;i<o.shape.length-1;++i)x.push(o.shape[i]);x.push(1)}const O=Object(sub.a)(o,c),w=Object(d.a)(e,f),v=Object(_e.a)(Object(A.a)(l,Object(y.a)(r))),j=Object(d.a)(Object(d.a)(Object(d.a)(v,v),v),Object(y.a)(-.5));return{x:()=>1===c.rank?Object(I.a)(Object(d.a)(Object(d.a)(e,Object(Me.a)(Object(I.a)(v,[1,1,1,c.shape[0]]),x)),f),o.shape):Object(I.a)(Object(d.a)(Object(d.a)(e,v),f),o.shape),mean:()=>{let e=Object(d.a)(Object(d.a)(v,Object(y.a)(-1)),w);return 1===c.rank&&(e=Object(N.a)(e,m)),Object(I.a)(e,c.shape)},variance:()=>{let e=Object(d.a)(Object(d.a)(j,O),w);return 1===c.rank&&(e=Object(N.a)(e,m)),Object(I.a)(e,c.shape)},scale:()=>{const t=Object(d.a)(O,v);let n=Object(d.a)(e,t);return 1===c.rank&&(n=Object(N.a)(n,m)),Object(I.a)(n,c.shape)},offset:()=>{let t=e;return 1===c.rank&&(t=Object(N.a)(t,m)),Object(I.a)(t,c.shape)}}}};var ze=n(1280);const Pe={kernelName:c.nb,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,o]=t,{axis:c}=n,l=Object(z.I)(c,r.shape)[0];return{x:()=>{const t=r.shape,n=o.size,d=t.slice(0,l),h=d.length,f=t.slice(c,t.length).slice(1),m=f.length,y=Be(0,h),x=Be(h+1,h+1+m),O=We([d,[n],f]),w=Object(I.a)(e,O),v=Object(I.a)(o,[n]),k=We([[h],y,x]),N=Object(ve.a)(w,k);let j=Object(ze.a)(N,v,r.shape[l]);const S=Object(Oe.h)(k);return j=Object(ve.a)(j,S),j},indices:()=>o}}};function Be(e,t){const n=[];for(let i=e;i<t;++i)n.push(i);return n}function We(e){const t=[];for(let i=0;i<e.length;++i)for(let n=0;n<e[i].length;++n)t.push(e[i][n]);return t}const Ve={kernelName:c.pb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t;return{a:()=>Object(T.a)(a),b:()=>Object(T.a)(b)}}},Ue={kernelName:c.rb,gradFunc:e=>({x:()=>Object(l.a)(e,"float32")})},Ge={kernelName:c.tb,gradFunc:e=>({x:()=>Object(T.a)(e)})},He={kernelName:c.ub,gradFunc:e=>({x:()=>Object(T.a)(e)})},Ke={kernelName:c.vb,gradFunc:e=>({x:()=>Object(T.a)(e)})};var qe=n(1207);const Xe={kernelName:c.yb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:o}=n,mask=Object(qe.a)(r,0);return{x:()=>Object(ne.a)(mask,e,Object(d.a)(e,o))}}},Ye={kernelName:c.Db,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(div.a)(e,Object(A.a)(n,1))}}},Je={kernelName:c.Cb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(div.a)(e,Object(l.a)(n,"float32"))}}},Ze={kernelName:c.Eb,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:o}=n;return{logits:()=>{const t=Object(Ce.a)(r);return Object(sub.a)(e,Object(d.a)(Object(N.a)(e,o,!0),t))}}}};const Qe=Object(P.a)({localResponseNormalizationBackprop_:function(e,t,n,r=5,o=1,l=1,d=.5){const h={x:e,y:t,dy:n},f={depthRadius:r,bias:o,alpha:l,beta:d};return M.a.runKernel(c.xb,h,f)}}),et={kernelName:c.wb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,o]=t,{depthRadius:c,bias:l,alpha:d,beta:h}=n;return{x:()=>Qe(r,o,e,c,l,d,h)}}};var tt=n(1240);function nt(e,t,n,r){return t.rank<n.rank&&(t=Object(I.a)(t,Oe.e(t.shape,r))),e.rank<n.rank&&(e=Object(I.a)(e,Oe.e(e.shape,r))),{x:()=>Object(d.a)(e,Object(l.a)(Object(tt.a)(n,t),e.dtype))}}const at={kernelName:c.Ib,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:o}=r,c=t[0],l=nt(e,t[1],c,z.I(o,c.shape));return{x:()=>l.x()}}};var st=n(1281);const ot={kernelName:c.Ob,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t;return{a:()=>Object(d.a)(e,Object(l.a)(Object(Q.a)(a,b),"float32")),b:()=>Object(d.a)(e,Object(l.a)(Object(st.a)(a,b),"float32"))}}};const it=Object(P.a)({maxPool3dGrad_:function(e,input,output,t,n,r,o){const l=Object(L.a)(e,"dy","maxPool3dGrad"),d=Object(L.a)(input,"input","maxPool3dGrad"),h=Object(L.a)(output,"output","maxPool3dGrad");let f=l,m=d,y=h,x=!1;4===d.rank&&(x=!0,f=Object(I.a)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),m=Object(I.a)(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]]),y=Object(I.a)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),z.b(5===f.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${f.rank}.`)),z.b(5===m.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${m.rank}.`)),z.b(5===y.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${y.rank}.`)),null!=o&&z.b(z.v(r),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`));const O={dy:f,input:m,output:y},w={filterSize:t,strides:n,pad:r,dimRoundingMode:o},v=M.a.runKernel(c.Lb,O,w);return x?Object(I.a)(v,[v.shape[1],v.shape[2],v.shape[3],v.shape[4]]):v}}),ut={kernelName:c.Kb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,o]=t,{filterSize:c,strides:l,pad:d,dimRoundingMode:h}=n;return{x:()=>it(e,r,o,c,l,d,h)}}};const ct=Object(P.a)({maxPoolGrad_:function(e,input,output,t,n,r,o){const l=Object(L.a)(e,"dy","maxPoolGrad"),d=Object(L.a)(input,"input","maxPoolGrad"),h=Object(L.a)(output,"output","maxPoolGrad");z.b(d.rank===l.rank,(()=>`Rank of input (${d.rank}) does not match rank of dy (${l.rank})`)),z.b(4===l.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),z.b(4===d.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${d.rank}.`)),null!=o&&z.b(z.v(r),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`));const f={dy:l,input:d,output:h},m={filterSize:t,strides:n,pad:r,dimRoundingMode:o};return M.a.runKernel(c.Mb,f,m)}}),lt={kernelName:c.Jb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,o]=t,{filterSize:c,strides:l,pad:d}=n;return{x:()=>ct(e,r,o,c,l,d)}}};var ht=n(1225);const pt={kernelName:c.Pb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:o}=n,c=z.I(o,r.shape),l=Object(Oe.d)(r.shape,c)[1],h=z.O(l);return{x:()=>{const t=r.shape.slice();c.forEach((e=>{t[e]=1}));const n=Object(I.a)(e,t);return Object(div.a)(Object(d.a)(n,Object(ht.a)(r.shape,"float32")),h)}}}},ft={kernelName:c.Qb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:o}=r,[c,l]=t,d=nt(e,l,c,z.I(o,c.shape));return{x:()=>d.x()}}},mt={kernelName:c.Rb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t;return{a:()=>Object(d.a)(e,Object(l.a)(Object(ee.a)(a,b),"float32")),b:()=>Object(d.a)(e,Object(l.a)(Object(qe.a)(a,b),"float32"))}}};var bt=n(1197);const gt={kernelName:c.Sb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:o}=n,c=o.map((p=>p[0]));return{x:()=>Object(bt.a)(e,c,r.shape)}}};var yt=n(1258);const xt={kernelName:c.Tb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t,n=Object(k.a)(a.shape,b.shape);return{a:()=>{const t=Object(k.c)(a.shape,n);return t.length>0?Object(I.a)(Object(N.a)(e,t),a.shape):e},b:()=>{const t=Object(d.a)(e,Object(m.a)(Object(yt.a)(Object(div.a)(a,b)))),r=Object(k.c)(b.shape,n);return r.length>0?Object(I.a)(Object(N.a)(t,r),b.shape):t}}}},Ot={kernelName:c.Vb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t,n=Object(k.a)(a.shape,b.shape);return{a:()=>{const t=Object(d.a)(e,Object(l.a)(b,"float32")),r=Object(k.c)(a.shape,n);return r.length>0?Object(I.a)(Object(N.a)(t,r),a.shape):t},b:()=>{const t=Object(d.a)(e,Object(l.a)(a,"float32")),r=Object(k.c)(b.shape,n);return r.length>0?Object(I.a)(Object(N.a)(t,r),b.shape):t}}}},wt={kernelName:c.Wb,gradFunc:e=>({x:()=>Object(m.a)(e)})};var vt=n(1226);const kt={kernelName:c.bc,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Object(vt.a)(n.shape,"float32")}}},It={kernelName:c.cc,gradFunc:e=>({x:()=>Object(T.a)(e)})};var Nt=n(1231);const jt={kernelName:c.dc,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return Object(Nt.a)(e,r).map((e=>()=>e))}},St={kernelName:c.ec,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:o}=n,c=o.map((p=>p[0]));return{x:()=>Object(bt.a)(e,c,r.shape)}}};var Tt=n(1223),Ct=n(1215);const $t={kernelName:c.fc,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[a,b,n]=t,base=a,r=b,o=k.a(base.shape,r.shape);return{a:()=>{const t=Object(l.a)(r,"float32");let n=Object(d.a)(e,Object(d.a)(t,Object(Ct.a)(base,Object(sub.a)(t,Object(y.a)(1)))));const c=k.c(base.shape,o);return c.length>0&&(n=Object(N.a)(n,c)),Object(I.a)(n,base.shape)},b:()=>{const t=Object(qe.a)(base,0),c=Object(ne.a)(t,Object(Tt.a)(base),Object(T.a)(base));let l=Object(d.a)(e,Object(d.a)(n,c));const h=k.c(r.shape,o);return h.length>0&&(l=Object(N.a)(l,h)),Object(I.a)(l,r.shape)}}}},Et={kernelName:c.gc,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,mask=Object(qe.a)(n,0);return{x:()=>Object(ne.a)(mask,e,Object(d.a)(e,r)),alpha:()=>{let t=Object(ne.a)(mask,Object(T.a)(e),Object(d.a)(e,n));const o=Object(k.c)(r.shape,e.shape);return o.length>0&&(t=Object(N.a)(t,o)),Object(I.a)(t,r.shape)}}}},At={kernelName:c.kc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t,n=k.a(a.shape,b.shape);return{a:()=>{const t=Object(div.a)(e,Object(l.a)(b,"float32")),r=k.c(a.shape,n);return r.length>0?Object(I.a)(Object(N.a)(t,r),a.shape):t},b:()=>{let t=Object(d.a)(e,Object(l.a)(a,"float32"));const r=k.c(b.shape,n);r.length>0&&(t=Object(I.a)(Object(N.a)(t,r),b.shape));const o=Object(O.a)(b);return Object(m.a)(Object(div.a)(t,Object(l.a)(o,"float32")))}}}},Rt={kernelName:c.lc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(div.a)(e,Object(m.a)(Object(O.a)(n)))}}},Ft={kernelName:c.nc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,mask=Object(d.a)(Object(ee.a)(n,6),Object(h.a)(n));return{x:()=>Object(d.a)(e,Object(l.a)(mask,"float32"))}}},Dt={kernelName:c.mc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(l.a)(Object(h.a)(n),"float32"))}}},_t={kernelName:c.oc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(I.a)(e,n.shape)}}},Mt={kernelName:c.pc,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,o={dy:e,images:r};return{images:()=>M.a.runKernel(c.qc,o,n)}}},Lt={kernelName:c.rc,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,o={dy:e,images:r};return{images:()=>M.a.runKernel(c.sc,o,n)}}};var zt=n(1245);const Pt={kernelName:c.tc,gradFunc:(e,t,n)=>{const{dims:r}=n,o=Object(z.I)(r,e.shape);return{x:()=>Object(zt.a)(e,o)}}},Bt={kernelName:c.vc,gradFunc:e=>({x:()=>Object(T.a)(e)})},Wt={kernelName:c.wc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(m.a)(Object(div.a)(e,Object(d.a)(Object(Ct.a)(n,1.5),2)))}}};var Vt=n(1250);const Ut={kernelName:c.yc,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Object(l.a)(Object(T.a)(n),"float32"),t:()=>Object(d.a)(e,Object(l.a)(n,e.dtype)),e:()=>Object(d.a)(e,Object(l.a)(Object(Vt.a)(n),e.dtype))}}};var Gt=n(1307);const Ht={kernelName:c.zc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const mask=Object(qe.a)(n,Object(y.a)(0)),t=Object(y.a)(Gt.b),r=Object(y.a)(Gt.a),o=Object(d.a)(e,r),c=Object(d.a)(Object(d.a)(e,t),Object(Ce.a)(Object(l.a)(n,"float32")));return Object(ne.a)(mask,o,c)}}}},Kt={kernelName:c.Ac,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(d.a)(n,Object(sub.a)(Object(y.a)(1),n)))}}},qt={kernelName:c.Bc,gradFunc:e=>({x:()=>Object(T.a)(e)})};var Xt=n(1282);const Yt={kernelName:c.Cc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(Object(Xt.a)(Object(l.a)(n,"float32")),e)}}};var Jt=n(1312);const Zt={kernelName:c.Dc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(Object(Jt.a)(Object(l.a)(n,"float32")),e)}}};var Qt=n(1265),en=n(1247);const tn={kernelName:c.Ec,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:o,size:c}=n,l=r.shape,[d,h]=Object(en.parseSliceParams)(r,o,c),f=[];for(let i=0;i<e.rank;i++)f.push([d[i],l[i]-d[i]-h[i]]);return{x:()=>Object(Qt.a)(e,f)}}},nn={kernelName:c.Fc,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:o}=n,c=Object(d.a)(e,r);return{logits:()=>Object(sub.a)(c,Object(d.a)(Object(N.a)(c,[o],true),r))}}};var rn=n(1246);const an={kernelName:c.Gc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(rn.a)(n))}}};var sn=n(1251);const on={kernelName:c.Hc,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:o}=n;return{x:()=>Object(sn.a)(e,r,o)}}};var un=n(1198);const cn={kernelName:c.Kc,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Object(un.a)(e,r)}}},ln={kernelName:c.Lc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(div.a)(e,Object(d.a)(Object(x.a)(Object(l.a)(n,"float32")),2))}}},dn={kernelName:c.Mc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(e,Object(d.a)(Object(l.a)(n,"float32"),2))}}},hn={kernelName:c.Nc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t,n=Object(y.a)(2);return{a:()=>Object(d.a)(e,Object(d.a)(n,Object(sub.a)(a,b))),b:()=>Object(d.a)(e,Object(d.a)(n,Object(sub.a)(b,a)))}}},pn={kernelName:c.Oc,gradFunc:e=>({x:()=>Object(T.a)(e)})},fn={kernelName:c.Qc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[a,b]=t,n=k.a(a.shape,b.shape);return{a:()=>{let t=e;const r=k.c(a.shape,n);return r.length>0&&(t=Object(N.a)(t,r)),Object(I.a)(t,a.shape)},b:()=>{let t=e;const r=k.c(b.shape,n);return r.length>0&&(t=Object(N.a)(t,r)),Object(I.a)(Object(m.a)(t),b.shape)}}}},mn={kernelName:c.Rc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,o=r.shape.slice(),{axis:c}=n;Object(z.I)(c,r.shape).forEach((e=>{o[e]=1}));const l=Object(I.a)(e,o),h=Object(d.a)(l,Object(ht.a)(r.shape,"float32"));return{x:()=>h}}},bn={kernelName:c.Sc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(div.a)(e,Object(O.a)(Object(Xt.a)(n)))}}},gn={kernelName:c.Tc,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(d.a)(Object(sub.a)(Object(y.a)(1),Object(O.a)(n)),e)}}},yn={kernelName:c.Uc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:o}=n;return{x:()=>{let t=Object(T.a)(r);if(1===r.rank)for(let i=0;i<o[0];++i)t=Object(A.a)(t,Object(bt.a)(e,[i*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let i=0;i<o[0];++i)for(let n=0;n<o[1];++n)t=Object(A.a)(t,Object(bt.a)(e,[i*r.shape[0],n*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let i=0;i<o[0];++i)for(let n=0;n<o[1];++n)for(let c=0;c<o[2];++c)t=Object(A.a)(t,Object(bt.a)(e,[i*r.shape[0],n*r.shape[1],c*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let i=0;i<o[0];++i)for(let n=0;n<o[1];++n)for(let c=0;c<o[2];++c)for(let l=0;l<o[3];++l)t=Object(A.a)(t,Object(bt.a)(e,[i*r.shape[0],n*r.shape[1],c*r.shape[2],l*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},xn={kernelName:c.Xc,gradFunc:(e,t,n)=>{const r=n,{perm:o}=r,c=Oe.h(o);return{x:()=>Object(ve.a)(e,c)}}};var On=n(1216);const wn={kernelName:c.Zc,gradFunc:(e,t,n)=>{const r=n,{axis:o}=r;return{value:()=>Object(On.a)(e,o)}}};var vn=n(1241),kn=n(1259),In=n(1243);const Nn={kernelName:c.ad,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Object(In.a)(t,Object(T.a)(t)),r=Object(kn.a)(e,n);let o=Object(Q.a)(t,Object(y.a)(0,"int32"));const c=r.rank-o.rank;for(let i=0;i<c;++i)o=Object(vn.a)(o,i+1);o=Object(te.a)(o,Object(ht.a)(r.shape,"bool"));const l=Object(T.a)(r);return Object(ne.a)(o,r,l)}(e,n)}}};const jn={kernelName:c.bd,gradFunc:e=>({x:()=>Object(T.a)(e)})};var Sn=n(1236);const Tn=[f,w,v,j,S,C,$,E,R,F,D,_,W,U,H,X,Y,J,Z,re,ae,oe,he,le,me,ge,xe,ke,je,Se,At,Te,$e,Ee,Ae,Re,De,Fe,Le,Pe,Ve,Ue,Ge,He,Ke,Xe,Ye,Je,Ze,et,at,at,ot,ut,lt,pt,ft,mt,gt,xt,Ot,wt,kt,It,jt,St,St,$t,Et,Rt,Ft,Dt,_t,Mt,Lt,Pt,Bt,Wt,Ut,Ht,Kt,qt,Yt,Zt,tn,nn,an,on,on,cn,cn,ln,hn,dn,pn,fn,mn,bn,gn,yn,xn,wn,Nn,jn];for(const e of Tn)Object(Sn.d)(e);var Cn=n(1211),$n=n(1176);Object($n.d)().prototype.abs=function(){return this.throwIfDisposed(),Object(Cn.a)(this)};var En=n(1347);Object($n.d)().prototype.acos=function(){return this.throwIfDisposed(),Object(En.a)(this)};var An=n(1348);Object($n.d)().prototype.acosh=function(){return this.throwIfDisposed(),Object(An.a)(this)},Object($n.d)().prototype.add=function(b){return this.throwIfDisposed(),Object(A.a)(this,b)};var Rn=n(1289);Object($n.d)().prototype.all=function(e,t){return this.throwIfDisposed(),Object(Rn.a)(this,e,t)};var Fn=n(1290);Object($n.d)().prototype.any=function(e,t){return this.throwIfDisposed(),Object(Fn.a)(this,e,t)};var Dn=n(1291);Object($n.d)().prototype.argMax=function(e){return this.throwIfDisposed(),Object(Dn.a)(this,e)};var _n=n(1313);Object($n.d)().prototype.argMin=function(e){return this.throwIfDisposed(),Object(_n.a)(this,e)},Object($n.d)().prototype.asScalar=function(){return this.throwIfDisposed(),Object(z.b)(1===this.size,(()=>"The array must have only 1 element.")),Object(I.a)(this,[])},Object($n.d)().prototype.asType=function(e){return this.throwIfDisposed(),Object(l.a)(this,e)},Object($n.d)().prototype.as1D=function(){return this.throwIfDisposed(),Object(I.a)(this,[this.size])},Object($n.d)().prototype.as2D=function(e,t){return this.throwIfDisposed(),Object(I.a)(this,[e,t])},Object($n.d)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Object(I.a)(this,[e,t,n])},Object($n.d)().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Object(I.a)(this,[e,t,n,r])},Object($n.d)().prototype.as5D=function(e,t,n,r,o){return this.throwIfDisposed(),Object(I.a)(this,[e,t,n,r,o])};var Mn=n(1349);Object($n.d)().prototype.asin=function(){return this.throwIfDisposed(),Object(Mn.a)(this)};var Ln=n(1350);Object($n.d)().prototype.asinh=function(){return this.throwIfDisposed(),Object(Ln.a)(this)};var zn=n(1351);Object($n.d)().prototype.atan=function(){return this.throwIfDisposed(),Object(zn.a)(this)};var Pn=n(1314);Object($n.d)().prototype.atan2=function(b){return this.throwIfDisposed(),Object(Pn.a)(this,b)};var Bn=n(1352);Object($n.d)().prototype.atanh=function(){return this.throwIfDisposed(),Object(Bn.a)(this)};var Wn=n(1254);Object($n.d)().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Object(Wn.a)(this,e,t,n,r)},Object($n.d)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Object(sn.a)(this,e,t)};var Vn=n(1234);Object($n.d)().prototype.batchNorm=function(e,t,n,r,o){return this.throwIfDisposed(),Object(Vn.a)(this,e,t,n,r,o)};var Un=n(1269);Object($n.d)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Object(Un.a)(this,e)},Object($n.d)().prototype.cast=function(e){return this.throwIfDisposed(),Object(l.a)(this,e)};var Gn=n(1353);Object($n.d)().prototype.ceil=function(){return this.throwIfDisposed(),Object(Gn.a)(this)};var Hn=n(1332);Object($n.d)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Object(Hn.a)(this,e,t)},Object($n.d)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof $n.a&&(e=[e]),Object(un.a)([this,...e],t)};var Kn=n(1292);Object($n.d)().prototype.conv1d=function(filter,e,t,n,r,o){return this.throwIfDisposed(),Object(Kn.a)(this,filter,e,t,n,r,o)};var qn=n(1293);Object($n.d)().prototype.conv2dTranspose=function(filter,e,t,n,r){return this.throwIfDisposed(),Object(qn.a)(this,filter,e,t,n,r)},Object($n.d)().prototype.conv2d=function(filter,e,t,n,r,o){return this.throwIfDisposed(),Object(de.a)(this,filter,e,t,n,r,o)},Object($n.d)().prototype.cos=function(){return this.throwIfDisposed(),Object(Xt.a)(this)},Object($n.d)().prototype.cosh=function(){return this.throwIfDisposed(),Object(Jt.a)(this)},Object($n.d)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Object(we.a)(this,e,t,n)};var Xn=n(1315);Object($n.d)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Object(Xn.a)(this,e,t)};var Yn=n(1239);Object($n.d)().prototype.depthwiseConv2d=function(filter,e,t,n,r,o){return this.throwIfDisposed(),Object(Yn.a)(this,filter,e,t,n,r,o)};var Jn=n(1316);Object($n.d)().prototype.dilation2d=function(filter,e,t,n,r){return this.throwIfDisposed(),Object(Jn.a)(this,filter,e,t,n,r)};var Zn=n(1317);Object($n.d)().prototype.divNoNan=function(b){return this.throwIfDisposed(),Object(Zn.a)(this,b)},Object($n.d)().prototype.div=function(b){return this.throwIfDisposed(),Object(div.a)(this,b)};var Qn=n(1318);Object($n.d)().prototype.dot=function(b){return this.throwIfDisposed(),Object(Qn.a)(this,b)};var er=n(1256);Object($n.d)().prototype.elu=function(){return this.throwIfDisposed(),Object(er.a)(this)},Object($n.d)().prototype.equal=function(b){return this.throwIfDisposed(),Object(tt.a)(this,b)};var nr=n(1354);Object($n.d)().prototype.erf=function(){return this.throwIfDisposed(),Object(nr.a)(this)},Object($n.d)().prototype.exp=function(){return this.throwIfDisposed(),Object(Ce.a)(this)},Object($n.d)().prototype.expandDims=function(e){return this.throwIfDisposed(),Object(vn.a)(this,e)};var rr=n(1355);Object($n.d)().prototype.expm1=function(){return this.throwIfDisposed(),Object(rr.a)(this)};var ar=n(1270);Object($n.d)().prototype.fft=function(){return this.throwIfDisposed(),Object(ar.a)(this)},Object($n.d)().prototype.flatten=function(){return this.throwIfDisposed(),Object(I.a)(this,[this.size])},Object($n.d)().prototype.floor=function(){return this.throwIfDisposed(),Object(yt.a)(this)};var sr=n(1255);Object($n.d)().prototype.floorDiv=function(b){return this.throwIfDisposed(),Object(sr.a)(this,b)},Object($n.d)().prototype.gather=function(e,t){return this.throwIfDisposed(),Object(kn.a)(this,e,t)},Object($n.d)().prototype.greaterEqual=function(b){return this.throwIfDisposed(),Object(Q.a)(this,b)},Object($n.d)().prototype.greater=function(b){return this.throwIfDisposed(),Object(qe.a)(this,b)};var or=n(1271);Object($n.d)().prototype.ifft=function(){return this.throwIfDisposed(),Object(or.a)(this)};var ir=n(1302);Object($n.d)().prototype.irfft=function(){return this.throwIfDisposed(),Object(ir.a)(this)};var ur=n(1356);Object($n.d)().prototype.isFinite=function(){return this.throwIfDisposed(),Object(ur.a)(this)};var cr=n(1357);Object($n.d)().prototype.isInf=function(){return this.throwIfDisposed(),Object(cr.a)(this)};var lr=n(1358);Object($n.d)().prototype.isNaN=function(){return this.throwIfDisposed(),Object(lr.a)(this)};var dr=n(1260);Object($n.d)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Object(dr.a)(this,e)},Object($n.d)().prototype.lessEqual=function(b){return this.throwIfDisposed(),Object(ee.a)(this,b)},Object($n.d)().prototype.less=function(b){return this.throwIfDisposed(),Object(st.a)(this,b)};var pr=n(1319);Object($n.d)().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Object(pr.a)(this,e,t,n,r)};var fr=n(1359);Object($n.d)().prototype.logSigmoid=function(){return this.throwIfDisposed(),Object(fr.a)(this)};var mr=n(1335);Object($n.d)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Object(mr.a)(this,e)};var gr=n(1277);Object($n.d)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Object(gr.a)(this,e,t)},Object($n.d)().prototype.log=function(){return this.throwIfDisposed(),Object(Tt.a)(this)};var yr=n(1304);Object($n.d)().prototype.log1p=function(){return this.throwIfDisposed(),Object(yr.a)(this)},Object($n.d)().prototype.logicalAnd=function(b){return this.throwIfDisposed(),Object(te.a)(this,b)},Object($n.d)().prototype.logicalNot=function(){return this.throwIfDisposed(),Object(Vt.a)(this)};var xr=n(1283);Object($n.d)().prototype.logicalOr=function(b){return this.throwIfDisposed(),Object(xr.a)(this,b)};var Or=n(1320);Object($n.d)().prototype.logicalXor=function(b){return this.throwIfDisposed(),Object(Or.a)(this,b)},Object($n.d)().prototype.matMul=function(b,e,t){return this.throwIfDisposed(),Object(G.a)(this,b,e,t)};var wr=n(1261);Object($n.d)().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Object(wr.a)(this,e,t,n,r)};var vr=n(1224);Object($n.d)().prototype.max=function(e,t){return this.throwIfDisposed(),Object(vr.a)(this,e,t)},Object($n.d)().prototype.maximum=function(b){return this.throwIfDisposed(),Object(In.a)(this,b)};var kr=n(1244);Object($n.d)().prototype.mean=function(e,t){return this.throwIfDisposed(),Object(kr.a)(this,e,t)};var Ir=n(1262);Object($n.d)().prototype.min=function(e,t){return this.throwIfDisposed(),Object(Ir.a)(this,e,t)};var Nr=n(1263);Object($n.d)().prototype.minimum=function(b){return this.throwIfDisposed(),Object(Nr.a)(this,b)};var jr=n(1321);Object($n.d)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Object(jr.a)(this,e,t)};var Sr=n(1322);Object($n.d)().prototype.mod=function(b){return this.throwIfDisposed(),Object(Sr.a)(this,b)},Object($n.d)().prototype.mul=function(b){return this.throwIfDisposed(),Object(d.a)(this,b)},Object($n.d)().prototype.neg=function(){return this.throwIfDisposed(),Object(m.a)(this)};var Tr=n(1275);Object($n.d)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Object(Tr.a)(this,e,t,n)};var Cr=n(1264);Object($n.d)().prototype.notEqual=function(b){return this.throwIfDisposed(),Object(Cr.a)(this,b)};var $r=n(1295);Object($n.d)().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Object($r.a)(this,e,t,n)};var Er=n(1337);Object($n.d)().prototype.onesLike=function(){return this.throwIfDisposed(),Object(Er.a)(this)},Object($n.d)().prototype.pad=function(e,t){return this.throwIfDisposed(),Object(Qt.a)(this,e,t)};var Ar=n(1323);Object($n.d)().prototype.pool=function(e,t,n,r,o){return this.throwIfDisposed(),Object(Ar.a)(this,e,t,n,r,o)},Object($n.d)().prototype.pow=function(e){return this.throwIfDisposed(),Object(Ct.a)(this,e)};var Rr=n(1266);Object($n.d)().prototype.prelu=function(e){return this.throwIfDisposed(),Object(Rr.a)(this,e)};var Fr=n(1324);Object($n.d)().prototype.prod=function(e,t){return this.throwIfDisposed(),Object(Fr.a)(this,e,t)};var Dr=n(1360);Object($n.d)().prototype.reciprocal=function(){return this.throwIfDisposed(),Object(Dr.a)(this)};var _r=n(1228);Object($n.d)().prototype.relu=function(){return this.throwIfDisposed(),Object(_r.a)(this)};var Mr=n(1278);Object($n.d)().prototype.relu6=function(){return this.throwIfDisposed(),Object(Mr.a)(this)},Object($n.d)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Object(I.a)(this,e.shape)},Object($n.d)().prototype.reshape=function(e){return this.throwIfDisposed(),Object(I.a)(this,e)};var Lr=n(1343);Object($n.d)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Object(Lr.a)(this,e,t,n)};var zr=n(1342);Object($n.d)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Object(zr.a)(this,e,t,n)},Object($n.d)().prototype.reverse=function(e){return this.throwIfDisposed(),Object(zt.a)(this,e)};var Pr=n(1272);Object($n.d)().prototype.rfft=function(){return this.throwIfDisposed(),Object(Pr.a)(this)};var Br=n(1361);Object($n.d)().prototype.round=function(){return this.throwIfDisposed(),Object(Br.a)(this)},Object($n.d)().prototype.rsqrt=function(){return this.throwIfDisposed(),Object(_e.a)(this)};var Wr=n(1299);Object($n.d)().prototype.selu=function(){return this.throwIfDisposed(),Object(Wr.a)(this)};var Vr=n(1300);Object($n.d)().prototype.separableConv2d=function(e,t,n,r,o,c){return this.throwIfDisposed(),Object(Vr.a)(this,e,t,n,r,o,c)},Object($n.d)().prototype.sigmoid=function(){return this.throwIfDisposed(),Object(rn.a)(this)};var Ur=n(1362);Object($n.d)().prototype.sign=function(){return this.throwIfDisposed(),Object(Ur.a)(this)},Object($n.d)().prototype.sin=function(){return this.throwIfDisposed(),Object(be.a)(this)},Object($n.d)().prototype.sinh=function(){return this.throwIfDisposed(),Object(ye.a)(this)},Object($n.d)().prototype.slice=function(e,t){return this.throwIfDisposed(),Object(bt.a)(this,e,t)};var Gr=n(1339);Object($n.d)().prototype.softmax=function(e){return this.throwIfDisposed(),Object(Gr.a)(this,e)};var Hr=n(1301);Object($n.d)().prototype.softplus=function(){return this.throwIfDisposed(),Object(Hr.a)(this)},Object($n.d)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Object(K.a)(this,e,t)},Object($n.d)().prototype.split=function(e,t){return this.throwIfDisposed(),Object(se.a)(this,e,t)},Object($n.d)().prototype.sqrt=function(){return this.throwIfDisposed(),Object(x.a)(this)},Object($n.d)().prototype.square=function(){return this.throwIfDisposed(),Object(O.a)(this)};var Kr=n(1276);Object($n.d)().prototype.squaredDifference=function(b){return this.throwIfDisposed(),Object(Kr.a)(this,b)};var qr=n(1268);Object($n.d)().prototype.squeeze=function(e){return this.throwIfDisposed(),Object(qr.a)(this,e)},Object($n.d)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof $n.a?[this,e]:[this,...e];return Object(On.a)(n,t)},Object($n.d)().prototype.step=function(e){return this.throwIfDisposed(),Object(h.a)(this,e)};var Xr=n(1363);Object($n.d)().prototype.stridedSlice=function(e,t,n,r,o,c,l,d){return this.throwIfDisposed(),Object(Xr.a)(this,e,t,n,r,o,c,l,d)},Object($n.d)().prototype.sub=function(b){return this.throwIfDisposed(),Object(sub.a)(this,b)},Object($n.d)().prototype.sum=function(e,t){return this.throwIfDisposed(),Object(N.a)(this,e,t)};var Yr=n(1364);Object($n.d)().prototype.tan=function(){return this.throwIfDisposed(),Object(Yr.a)(this)};var Jr=n(1340);Object($n.d)().prototype.tanh=function(){return this.throwIfDisposed(),Object(Jr.a)(this)},Object($n.d)().prototype.tile=function(e){return this.throwIfDisposed(),Object(Me.a)(this,e)},Object($n.d)().prototype.toBool=function(){return this.throwIfDisposed(),Object(l.a)(this,"bool")},Object($n.d)().prototype.toFloat=function(){return this.throwIfDisposed(),Object(l.a)(this,"float32")},Object($n.d)().prototype.toInt=function(){return this.throwIfDisposed(),Object(l.a)(this,"int32")};var Zr=n(1325);Object($n.d)().prototype.topk=function(e,t){return this.throwIfDisposed(),Object(Zr.a)(this,e,t)},Object($n.d)().prototype.transpose=function(e){return this.throwIfDisposed(),Object(ve.a)(this,e)};var Qr=n(1326);let ea;function ta(){return null==ea&&(ea=Object(o.nd)().epsilon()),ea}Object($n.d)().prototype.unique=function(e){return this.throwIfDisposed(),Object(Qr.a)(this,e)},Object($n.d)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Object(ze.a)(this,e,t)},Object($n.d)().prototype.unstack=function(e){return this.throwIfDisposed(),Object(Nt.a)(this,e)},Object($n.d)().prototype.where=function(e,t){return this.throwIfDisposed(),Object(ne.a)(e,this,t)},Object($n.d)().prototype.zerosLike=function(){return this.throwIfDisposed(),Object(T.a)(this)};class na extends Error{constructor(e){super(e),Object.setPrototypeOf(this,na.prototype)}}class ra extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ra.prototype)}}class aa extends Error{constructor(e){super(e),Object.setPrototypeOf(this,aa.prototype)}}class sa extends Error{constructor(e){super(e),Object.setPrototypeOf(this,sa.prototype)}}class oa extends Error{constructor(e){super(e),Object.setPrototypeOf(this,oa.prototype)}}Error;function ia(e,t){if(Array.isArray(e)){let n=[];for(let i=0;i<t;i++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function ua(e,t){if(!e)throw new oa(t)}function ca(e,t){let n=0;for(const r of e)r===t&&n++;return n}function la(e){return 1===e.length?e[0]:e}function da(e){return Array.isArray(e)?e:[e]}function ha(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function pa(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let fa={};function ma(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function ba(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>ba(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?ba(t):e[n]=t.value)}}}function ga(e,t={},n={},r="object",o=!1){if("string"==typeof e){const o=e;let c;if(o in n)c=n[o];else if(o in fa)c=fa[o];else if(c=t[o],null==c)throw new aa(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return c}{const c=e;if(null==c.className||null==c.config)throw new aa(`${r}: Improper config format: ${JSON.stringify(c)}.\n'className' and 'config' must set.`);const l=c.className;let d,h;if(l in n?[d,h]=n[l]:l in fa?[d,h]=fa.className:l in t&&([d,h]=t[l]),null==d)throw new aa(`Unknown ${r}: ${l}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=h){const e={};for(const t of Object.keys(fa))e[t]=fa[t];for(const t of Object.keys(n))e[t]=n[t];c.config.customObjects=e;const t=Object.assign({},fa);for(const e of Object.keys(n))fa[e]=n[e];ba(c.config);const r=h(d,c.config,n,o);return fa=Object.assign({},t),r}{const e=Object.assign({},fa);for(const e of Object.keys(n))fa[e]=n[e];const t=new d(c.config);return fa=Object.assign({},e),t}}}function ya(a,b){return-1*function(a,b){return a<b?-1:a>b?1:0}(a,b)}function xa(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Oa(e){if(null==e)throw new aa(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function wa(e,label,t){if(null!=t&&e.indexOf(t)<0)throw new aa(`${t} is not a valid ${label}.  Valid values are ${e} or null/undefined.`)}function va(e,t,n=0,r=1/0){return ua(n>=0),ua(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function ka(e,t){Array.isArray(e)?(o.of.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,i)=>ka(e,`element ${i+1} of ${t}`)))):o.of.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Ia(e)}.`))}function Ia(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Ia(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Na(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function ja(e,t){return Object(o.hf)((()=>o.We(o.af(o.qe(e,e),t,!0))))}class Sa extends o.Ke.Serializable{getConfig(){return{}}}class Ta extends Sa{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(o.hf)((()=>{const t=ja(e,this.axis),n=o.vd(t,0,this.maxValue);return o.qe(e,o.Kd(n,o.hd(ta(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Ta.className="MaxNorm",o.Ke.registerClass(Ta);class Ca extends Sa{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(o.hf)((()=>o.Kd(e,o.hd(ta(),ja(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Ca.className="UnitNorm",o.Ke.registerClass(Ca);class $a extends Sa{apply(e){return o.Ee(e)}}$a.className="NonNeg",o.Ke.registerClass($a);class Ea extends Sa{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(o.hf)((()=>{const t=ja(e,this.axis),n=o.hd(o.qe(this.rate,o.vd(t,this.minValue,this.maxValue)),o.qe(1-this.rate,t));return o.qe(e,o.Kd(n,o.hd(ta(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Ea.className="MinMaxNorm",o.Ke.registerClass(Ea);const Aa={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ra(e){return ma(e)}function Fa(e,t={}){return ga(e,o.Ke.SerializationMap.getMap().classNameMap,t,"constraint")}function Da(e){if(null==e)return null;if("string"==typeof e){return Fa({className:e in Aa?Aa[e]:e,config:{}})}return e instanceof Sa?e:Fa(e)}const _a=["channelsFirst","channelsLast"],Ma=["nearest","bilinear"],La=["valid","same","causal"],za=["max","avg"],Pa=["sum","mul","concat","ave"],Ba=new Map;function Wa(e){wa(_a,"DataFormat",e)}function Va(e){wa(La,"PaddingMode",e)}function Ua(e){wa(za,"PoolMode",e)}const Ga=[];function Ha(e,t){Ga.push(e);try{const e=t();return Ga.pop(),e}catch(e){throw Ga.pop(),e}}function Ka(e){if(!Ya(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Ga.length?"":Ga.join("/")+"/")+e}function qa(e){if(!Ya(e))throw new Error("Not a valid tensor name: '"+e+"'");Ba.has(e)||Ba.set(e,0);const t=Ba.get(e);if(Ba.set(e,Ba.get(e)+1),t>0){const n=`${e}_${t}`;return Ba.set(n,1),n}return e}const Xa=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Ya(e){return!!e.match(Xa)}function Ja(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let i=t;i<n;++i)r*=e[i];return r}function Za(e){return e=Array.isArray(e)?new Float32Array(e):e,Object(o.ef)(e)}function Qa(e){return o.ne(Za(e)).dataSync()[0]}function es(e){return o.he(Za(e)).dataSync()[0]}function ts(e,t){if(t<e)throw new aa(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let i=e;i<t;++i)n.push(i);return n}function ns(e,t){return e.asType(t)}function rs(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function as(e,t,n){return Object(o.hf)((()=>{switch(e.rank){case 1:return o.Oe(e,t,n);case 2:return o.Pe(e,[t,0],[n,e.shape[1]]);case 3:return o.Qe(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return o.Re(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return o.Ne(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return o.Ne(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new aa(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ss(e,t,n){return Object(o.hf)((()=>{switch(e.rank){case 1:return o.Oe(e,t,n);case 2:return o.Pe(e,[0,t],[e.shape[0],n]);case 3:return o.Qe(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return o.Re(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new aa(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function os(e,t,n,r){return Object(o.hf)((()=>{switch(e.rank){case 1:return o.Oe(e,t,n);case 2:switch(r){case 1:return as(e,t,n);case 2:return ss(e,t,n);default:throw new aa(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return as(e,t,n);case 2:return o.Qe(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return ss(e,t,n);default:throw new aa(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return as(e,t,n);case 2:return o.Re(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return o.Re(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return ss(e,t,n);default:throw new aa(`The axis is not within the rank of the tensor ${r}`)}default:throw new aa(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function is(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),o.xd(e,t)}function us(a,b){switch(a.rank){case 1:return o.yd([a,b]);case 2:return o.zd([a,b],0);case 3:return o.Ad([a,b],0);case 4:return o.Bd([a,b],0);default:throw new aa(`concatAlongFirstAxis() received an unsupported tensor rank: ${a.rank}`)}}function cs(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new aa(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return o.if(e,t)}function ls(e,t=0,n=1,r,c){return o.Ae(e,t,n,r,c)}function ds(a,b,e,t){if(a.rank<2||b.rank<2)throw new sa(`dot requires both inputs to be rank >= 2 but got x shape = ${a.shape} and y shape = ${b.shape}`);if(b.rank>=3){if(a.shape.slice(-1)[0]!==b.shape.slice(-2)[0])throw new sa(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${a.shape} and  y shape = ${b.shape}`)}if(2===a.rank&&2===b.rank){const n=!1,r=!1;return o.Ud.matMul({a:a,b:b,transposeA:n,transposeB:r,bias:t?fs(a.rank,t,"channelsLast"):null,activation:e})}{const n=a.shape.slice(),r=n.pop();a=a.reshape([-1,r]);const c=b.shape.slice(),l=c.pop(),d=c.pop(),h=[...c,l],f=Array.from({length:b.rank},((e,i)=>0===i?b.rank-2:i<=b.rank-2?i-1:i));b=b.transpose(f).reshape([d,-1]);const m=[...n,...h],y=!1,x=!1;return o.Ud.matMul({a:a,b:b,transposeA:y,transposeB:x,bias:t?fs(a.rank,t,"channelsLast"):null,activation:e}).reshape(m)}}function hs(e,t,n){return Object(o.hf)((()=>(t=Array.isArray(t)?Object(o.ef)(t,"int32"):t.toInt(),o.Vd(e,t,n))))}function ps(e){return o.qe(e,e)}function fs(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new aa(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1,1]):t.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,1,r[0]]):t.reshape([1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1]):t.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,r[0]]):t.reshape([1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1]):t.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,r[0]]):t.reshape([1].concat(r))}else if(e<3)return t;throw new aa(`Unsupported input rank by biasAdd: ${t.rank}`)}function ms(e,t,n){return Object(o.hf)((()=>(null==n&&(n="channelsLast"),Wa(n),e.add(fs(e.rank,t,n)))))}function bs(e,t,n,r){return Object(o.hf)((()=>o.Ld(e,t,n,r)))}function gs(e,t,n=!1){return n?e():t()}const ys=["fanIn","fanOut","fanAvg"],xs=["normal","uniform","truncatedNormal"];class Os extends o.Ke.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class ws extends Os{apply(e,t){return Object(o.tf)(e,t)}}ws.className="Zeros",o.Ke.registerClass(ws);class vs extends Os{apply(e,t){return Object(o.ve)(e,t)}}vs.className="Ones",o.Ke.registerClass(vs);class ks extends Os{constructor(e){if(super(),"object"!=typeof e)throw new aa(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new aa(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Object(o.hf)((()=>Object(o.qe)(Object(o.He)(this.value),Object(o.ve)(e,t))))}getConfig(){return{value:this.value}}}ks.className="Constant",o.Ke.registerClass(ks);class Is extends Os{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Object(o.Be)(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Is.className="RandomUniform",o.Ke.registerClass(Is);class Ns extends Os{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new sa(`randomNormal does not support dType ${t}.`);return ls(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ns.className="RandomNormal",o.Ke.registerClass(Ns);class js extends Os{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new sa(`truncatedNormal does not support dType ${t}.`);return Object(o.lf)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}js.className="TruncatedNormal",o.Ke.registerClass(js);class Ss extends Os{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Object(o.hf)((()=>{if(2!==e.length||e[0]!==e[1])throw new aa("Identity matrix initializer can only be used for 2D square matrices.");return Object(o.qe)(this.gain,Object(o.Rd)(e[0]))}))}getConfig(){return{gain:this.gain}}}Ss.className="Identity",o.Ke.registerClass(Ss);class Ts extends Os{constructor(e){if(super(),e.scale<0)throw new aa(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,wa(ys,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){wa(xs,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Wa(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Ja(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=Ja(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=Ja(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],c=n[1];let l=this.scale;if("fanIn"===this.mode?l/=Math.max(1,r):"fanOut"===this.mode?l/=Math.max(1,c):l/=Math.max(1,(r+c)/2),"normal"===this.distribution){const n=Math.sqrt(l);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new sa(`${this.getClassName()} does not support dType ${t}.`);return Object(o.lf)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*l);return Object(o.Be)(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Ts.className="VarianceScaling",o.Ke.registerClass(Ts);class Cs extends Ts{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ts.className}}Cs.className="GlorotUniform",o.Ke.registerClass(Cs);class $s extends Ts{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ts.className}}$s.className="GlorotNormal",o.Ke.registerClass($s);class Es extends Ts{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ts.className}}Es.className="HeNormal",o.Ke.registerClass(Es);class As extends Ts{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ts.className}}As.className="HeUniform",o.Ke.registerClass(As);class Rs extends Ts{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ts.className}}Rs.className="LeCunNormal",o.Ke.registerClass(Rs);class Fs extends Ts{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ts.className}}Fs.className="LeCunNormal",o.Ke.registerClass(Fs);class Ds extends Os{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new sa("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Object(o.hf)((()=>{if(e.length<2)throw new sa("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const a=ls(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let q=o.de.gramSchmidt(a);return e[0]>e[1]&&(q=q.transpose()),Object(o.qe)(this.gain,q)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Ds.className="Orthogonal",o.Ke.registerClass(Ds);const _s={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Ms(e,t={}){return ga(e,o.Ke.SerializationMap.getMap().classNameMap,t,"initializer")}function Ls(e){return ma(e)}function zs(e){if("string"==typeof e){const t=e in _s?_s[e]:e;if("GlorotNormal"===t)return new $s;if("GlorotUniform"===t)return new Cs;if("HeNormal"===t)return new Es;if("HeUniform"===t)return new As;if("LeCunNormal"===t)return new Rs;if("LeCunUniform"===t)return new Fs;{const e={};return e.className=t,e.config={},Ms(e)}}return e instanceof Os?e:Ms(e)}let Ps=0;function Bs(){return Ps++}const Ws={};function Vs(e=""){return e in Ws||(Ws[e]=0),Ws[e]+=1,e+Ws[e].toString()}function Us(e){return Array.isArray(e)&&Array.isArray(e[0])}function Gs(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Hs(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new aa(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Ks(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new aa(`Expected exactly 1 Shape; got ${e.length}`)}return e}function qs(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((a,b)=>a*b));return t}const Xs="Variable";class Ys{constructor(e,t="float32",n="Variable",r=!0,c=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Bs(),n=null==n?Xs:n,this.originalName=Ka(n),this.name=qa(this.originalName),this.trainable_=r,this.constraint=c,this.val=o.pf(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Js(e){return e.map((e=>e.read()))}function Zs(e){e.forEach((e=>{e[0].write(e[1])}))}class Qs{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class eo{constructor(e,t,n,r,o,c,l){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=o,this.outputTensorIndex=l,this.id=Bs(),null!=c&&(this.originalName=Ka(c),this.name=qa(this.originalName)),this.rank=t.length}}let to=0;class no{constructor(e,t){this.callArgs=t,this.id=to++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let ro=0;class ao extends o.Ke.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=ro++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=ha(e)+"_"+Vs(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new ra(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new aa(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return la(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return la(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new na(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new na(`Layer ${this.name} is not connected, no input to return.`);return la(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new na(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new na(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return la(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=da(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=da(this.inputSpec);if(e.length!==t.length)throw new aa(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],o=t[n];if(null==o)continue;const c=r.rank;if(null!=o.ndim&&c!==o.ndim)throw new aa(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${o.ndim}, found ndim=${c}`);if(null!=o.maxNDim&&c>o.maxNDim)throw new aa(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${o.maxNDim}, found ndim=${c}`);if(null!=o.minNDim&&c<o.minNDim)throw new aa(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${o.minNDim}, found ndim=${c}.`);if(null!=o.dtype&&r.dtype!==o.dtype)throw new aa(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${o.dtype}, found dtype=${r.dtype}.`);if(o.axes){const e=r.shape;for(const t in o.axes){const r=Number(t),c=o.axes[t],l=r>=0?e[r]:e[e.length+r];if(null!=c&&-1===[c,null].indexOf(l))throw new aa(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${c} but got shape ${e}.`)}}if(null!=o.shape)for(let i=0;i<o.shape.length;++i){const e=o.shape[i],t=r.shape[i];if(null!=e&&null!=t&&e!==t)throw new aa(`Input ${n} is incompatible with layer ${this.name}: expected shape=${o.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=da(e);let r=!0;for(const input of n)if(!(input instanceof eo)){r=!1;break}let o=!0;for(const input of n)if(input instanceof eo){o=!1;break}if(r===o)throw new aa("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ha(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of da(e))t.push(n.shape);this.build(la(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&o&&(this._refCount=1)}if(this.assertInputCompatibility(e),o){let output=this.call(e,t);const r=da(output),o=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),o.push(e);if(output=la(o),null!=this.activityRegularizer)throw new sa("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return output}{const n=function(e){e=da(e);const t=[];for(const n of e)t.push(n.shape);return la(t)}(e),r=this.computeOutputShape(n);let output;const o="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),output=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new eo(o,n,this,da(e),t,this.name,r))):new eo(o,r,this,da(e),t,this.name),this.addInboundNode(e,output,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new sa("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return output}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,i)=>{null!=n&&null!=e[i]&&e[i]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new na(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new na(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new ra(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return qs(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Js(e?this.trainableWeights:this.weights)}setWeights(e){Object(o.hf)((()=>{const t=this.weights;if(t.length!==e.length)throw new aa(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Js(t);for(let i=0;i<r.length;++i){const c=r[i],p=t[i],l=e[i];if(!o.of.arraysEqual(c.shape,l.shape))throw new aa(`Layer weight shape ${c.shape} not compatible with provided weight shape ${l.shape}`);n.push([p,l])}Zs(n)}))}addWeight(e,t,n,r,o,c,l){if(-1!==this._addedWeightNames.indexOf(e))throw new aa(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=zs("zeros"));const d=r.apply(t,n),h=new Ys(d,n,e,c,l);return d.dispose(),null!=o&&this.addLoss((()=>o.apply(h.read()))),null==c&&(c=!0),c?this._trainableWeights.push(h):this._nonTrainableWeights.push(h),h}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=da(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,mask){if(!this.supportsMasking){if(null!=mask){if(!Array.isArray(mask))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);mask.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return mask}addInboundNode(e,t,n,r,o,c,l=null){const d=da(e);t=da(t),n=da(n),r=da(r),o=Gs(o),c=Gs(c);const h=[],f=[],m=[];for(const e of d)h.push(e.sourceLayer),f.push(e.nodeIndex),m.push(e.tensorIndex);new no({outboundLayer:this,inboundLayers:h,nodeIndices:f,tensorIndices:m,inputTensors:d,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:o,outputShapes:c},l);for(let i=0;i<t.length;i++)t[i].sourceLayer=this,t[i].nodeIndex=this.inboundNodes.length-1,t[i].tensorIndex=i}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function so(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let i=0;i<e.inboundLayers.length;i++){const n=so(e.inputTensors[i],e.inboundLayers[i],e.nodeIndices[i]);for(const e of n)-1===t.indexOf(e)&&t.push(e)}return t}}}class oo extends ao{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Vs("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new aa("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new aa("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new aa("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new eo(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new no({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new aa(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function io(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new aa("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;null==n&&(n="float32");return new oo({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function uo(e){if(null==e)return;const t=[],n=[],r=[];for(const o in e){const c=e[o];if("number"!=typeof c){const e=c;t.push(e.data()),n.push(o),r.push(e)}}if(t.length>0){const c=await Promise.all(t);for(let i=0;i<c.length;++i)e[n[i]]=c[i][0];Object(o.Jd)(r)}}function co(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var lo;oo.className="InputLayer",o.Ke.registerClass(oo),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(lo||(lo={}));class ho{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class po{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class fo extends ho{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const c=Object(o.hf)((()=>Object(o.hd)(this.totals[e],Object(o.qe)(r,n))));this.totals[e]=c,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Object(o.hf)((()=>{const n=Object(o.qe)(Object(o.Kd)(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Object(o.ae)(t[e])})))}}class mo extends ho{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const o=this.history[r];for(let i=0;i<o.length;++i)if("number"!=typeof o[i]){const c=o[i];e.push(c.data()),t.push(r),n.push(i)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e){this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}}class bo extends ho{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");o.of.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,r=o.of.now();return(...c)=>{const l=o.of.now();return l-r<t||(r=l,n=e(...c)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await uo(n),r.push(this.yield(e,t,n))),r.push(Object(o.se)()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await uo(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await uo(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(Object(o.se)()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await uo(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await uo(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(Object(o.se)()):o.of.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await uo(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await uo(e),await this.trainEnd(e))}}function go(e,t){if(null==e&&(e={}),e instanceof ho)return[e];if(Array.isArray(e)&&e[0]instanceof ho)return e;return da(e).map((e=>new bo(e,t)))}class yo{constructor(){}static registerCallbackConstructor(e,t){o.of.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),yo.checkForDuplicate(t),null==yo.constructors[e]&&(yo.constructors[e]=[]),yo.constructors[e].push(t)}static checkForDuplicate(e){for(const t in yo.constructors){yo.constructors[+t].forEach((t=>{if(t===e)throw new aa("Duplicate callback constructor.")}))}}static clear(){yo.constructors={}}static createCallbacks(e){const t=[];for(const n in yo.constructors){const r=+n;e>=r&&t.push(...yo.constructors[r])}return t.map((e=>new e))}}function xo(e,t,n,r,o,c,l,d,h){const f=new mo,m=[new fo,...yo.createCallbacks(t)];null!=e&&m.push(...e),m.push(f);const y=new po(m);return y.setParams({epochs:n,initialEpoch:r,samples:o,steps:c,batchSize:l,verbose:t,doValidation:d,metrics:h}),{callbackList:y,history:f}}function Oo(e,t={},n=!1){return ga(e,o.Ke.SerializationMap.getMap().classNameMap,t,"layer",n)}function wo(e,t){return Object(o.hf)((()=>{"float32"!==e.dtype&&(e=e.asType("float32"));const n=o.af(ps(e),t,!0),r=o.Sd(n.shape,ta()),c=o.We(o.ke(n,r));return o.Kd(e,c)}))}function vo(e,t){return Object(o.hf)((()=>o.le(ps(o.Ze(t,e)),-1)))}function ko(e,t){return Object(o.hf)((()=>o.le(o.gd(o.Ze(t,e)),-1)))}function Io(e,t){return Object(o.hf)((()=>{const n=o.Ze(e,t),r=o.vd(o.gd(e),ta(),Number.MAX_VALUE),c=o.gd(o.Kd(n,r));return o.qe(100,o.le(c,-1))}))}function No(e,t){return Object(o.hf)((()=>{const n=o.vd(t,ta(),Number.MAX_VALUE),r=o.ee(o.hd(1,n)),c=o.vd(e,ta(),Number.MAX_VALUE),l=o.ee(o.hd(1,c));return o.le(ps(o.Ze(r,l)),-1)}))}function jo(e,output,t=!1){return Object(o.hf)((()=>{if(t)output=o.Te(output);else{const e=o.af(output,output.shape.length-1,!0);output=o.Kd(output,e)}return output=o.vd(output,ta(),1-ta()),o.re(o.af(o.qe(e.toFloat(),o.ee(output)),output.shape.length-1))}))}function So(e,output,t=!1){return Object(o.hf)((()=>{const n=o.Td(function(e){const t=[Ja(e.shape)];return e.reshape(t)}(e)).toInt(),r=(output=o.vd(output,ta(),1-ta())).shape;return jo(o.ue(n,r[r.length-1]).reshape(r),output,t)}))}function To(e,t){return Object(o.hf)((()=>{let n;return n=o.vd(t,ta(),1-ta()),n=o.ee(o.Kd(n,o.Ze(1,n))),o.le(function(e,t){if(!o.of.arraysEqual(e.shape,t.shape))throw new aa(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Object(o.hf)((()=>{const n=t.relu(),r=t.abs().neg();return n.sub(t.mul(e)).add(r.exp().log1p())}))}(e,n),-1)}))}function Co(e,t){return Object(o.hf)((()=>{const n=o.vd(e,ta(),1),r=o.vd(t,ta(),1);return o.af(o.qe(e,o.ee(o.Kd(n,r))),-1)}))}function $o(e,t){return Object(o.hf)((()=>{const n=wo(e,-1),r=wo(t,-1),c=o.qe(n,r);return o.re(o.af(c,-1))}))}yo.constructors={};const Eo={meanSquaredError:vo,meanAbsoluteError:ko,meanAbsolutePercentageError:Io,meanSquaredLogarithmicError:No,squaredHinge:function(e,t){return Object(o.hf)((()=>{const n=o.ke(0,o.Ze(1,o.qe(e,t)));return o.le(ps(n),-1)}))},hinge:function(e,t){return Object(o.hf)((()=>{const n=o.ke(0,o.Ze(1,o.qe(e,t)));return o.le(n,-1)}))},categoricalHinge:function(e,t){return Object(o.hf)((()=>{const n=o.af(o.qe(e,t),-1),r=o.he(o.qe(o.Ze(1,e),t),-1);return o.ke(0,o.hd(1,o.Ze(r,n)))}))},logcosh:function(e,t){return Object(o.hf)((()=>{const n=Math.log(2),r=o.Ze(t,e),c=o.Ze(o.hd(r,o.Ue(o.qe(-2,r))),n);return o.le(c,-1)}))},categoricalCrossentropy:jo,sparseCategoricalCrossentropy:So,binaryCrossentropy:To,kullbackLeiblerDivergence:Co,poisson:function(e,t){return Object(o.hf)((()=>{const n=o.ee(o.hd(ta(),t));return o.le(o.Ze(t,o.qe(e,n)),-1)}))},cosineProximity:$o};function Ao(e){if("string"==typeof e){if(e in Eo)return Eo[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new aa(t)}return e}function Ro(e,t){return Object(o.hf)((()=>{const n=o.qe(.5,o.we(t)),r=ns(o.Wd(t,n),e.dtype);return o.le(o.Pd(e,r),-1)}))}function Fo(e,t){return Object(o.hf)((()=>ns(o.Pd(o.kd(e,-1),o.kd(t,-1)),"float32")))}function Do(e,t){return Object(o.hf)((()=>o.ge(e.equal(1),t.equal(1)).sum().cast("float32")))}function _o(e,t){return Object(o.hf)((()=>{const n=Do(e,t),r=function(e,t){return Object(o.hf)((()=>o.ge(e.equal(0),t.equal(1)).sum().cast("float32")))}(e,t),c=n.add(r);return o.sf(o.Wd(c,0),n.div(c),0).cast("float32")}))}function Mo(e,t){return To(e,t)}function Lo(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),o.Pd(e,t).asType("float32")}const zo=jo,Po=So,Bo={binaryAccuracy:Ro,categoricalAccuracy:Fo,precision:_o,categoricalCrossentropy:zo,sparseCategoricalCrossentropy:Po,mse:vo,MSE:vo,mae:ko,MAE:ko,mape:Io,MAPE:Io,cosine:$o};function Wo(e){if("string"==typeof e&&e in Bo)return Bo[e];if("string"!=typeof e&&null!=e)return e;throw new aa(`Unknown metric ${e}`)}function Vo(e){if(ua(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(Eo))if(Eo[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Bo))if(Bo[n]===e){t=n;break}return void 0!==t?t:e.name}}const Uo=1048576;function Go(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Ho(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>Uo&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Ho(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Ho(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Ho(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Ko(e,t,n,r=console.log){const o=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const o of n.inboundNodes)if(-1!==r.indexOf(o)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),c=["Layer (type)","Output shape","Param #"];let l;if(o?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((p=>Math.floor(t*p)))),!o){c.push("Receives inputs"),l=[];for(const t in e.nodesByDepth)l.push(...e.nodesByDepth[t])}r("_".repeat(t)),qo(c,n,r),r("=".repeat(t));const d=e.layers;for(let i=0;i<d.length;++i)o?Xo(d[i],n,r):Yo(d[i],n,l,r),r((i===d.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const h=function(e){let t;t=null!=e.collectedTrainableWeights?qs(e.collectedTrainableWeights):qs(e.trainableWeights);return t}(e),f=qs(e.nonTrainableWeights);r(`Total params: ${h+f}`),r(`Trainable params: ${h}`),r(`Non-trainable params: ${f}`),r("_".repeat(t))}function qo(e,t,n=console.log){let line="";for(let i=0;i<e.length;++i)i>0&&(line=line.slice(0,line.length-1)+" "),line+=e[i],line=line.slice(0,t[i]),line+=" ".repeat(t[i]-line.length);n(line)}function Xo(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}qo([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function Yo(e,t,n,r){let o;try{o=JSON.stringify(e.outputShape)}catch(e){o="multiple"}const c=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let i=0;i<t.inboundLayers.length;++i){const e=t.inboundLayers[i].name,n=t.nodeIndices[i],r=t.tensorIndices[i];c.push(`${e}[${n}][${r}]`)}const l=e.name,d=e.getClassName(),h=0===c.length?"":c[0];qo([`${l} (${d})`,o,e.countParams().toString(),h],t,r);for(let i=1;i<c.length;++i)qo(["","","",c[i]],t,r)}function Jo(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Zo(e,t){if(null===e)return null;if("string"==typeof e)return pa(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let i=0;i<r;++i){const r=e[i];Jo(t,i,r)?n.push(r):n.push(Zo(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=pa(n);t[e]=Zo(r,e)}}return t}}function Qo(e,t){if(null==e)return null;if("string"==typeof e)return ha(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let i=0;i<r;++i){const r=e[i];Jo(t,i,r)?n.push(r):n.push(Qo(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n],o=ha(n);t[o]="name"!==n&&"className"!==n||"string"!=typeof r?Qo(r,n):r}return t}}class ei{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof ei)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,mask){if(null!=this.id2Value[e.id])throw new aa(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Object(o.ud)(t,e.dtype)}catch(n){throw new aa(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=mask&&(this.id2Mask[e.id]=mask),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof eo){if(null==this.id2Value[e.id])throw new aa(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new aa(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof eo){if(null==this.id2Value[e.id])throw new aa(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new aa(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Object(o.Jd)(this.id2Mask)}}const ti={},ni={};function ri(e,t,n,r){const c=null!=n&&n.training,l=Array.isArray(e),d=l?e:[e],h=d.map((e=>e.name)),f=[],m=t.names();for(const e of h)-1!==m.indexOf(e)?f.push(t.getValue(e)):f.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const y=h.join(",")+"|"+t.names().join(",");let x,O;if(null==ti[y]){const e=function(e,t){o.of.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const o=si(e[0],t);n=o.sorted,r=o.recipientMap}else{const o=new Set;for(const c of e){const{sorted:e,recipientMap:l}=si(c,t);for(const t of e)o.has(t.name)||(n.push(t),o.add(t.name));for(const e in l)null==r[e]&&(r[e]=new Set),l[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:ai(r)}}(d,t);x=e.sorted,O=e.recipientCounts,ti[y]=x,ni[y]=O}x=ti[y],O={},c||Object.assign(O,ni[y]);const w=new ei(t);for(let i=0;i<x.length;++i){if(null!=r){const e=Object(o.me)().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const e=x[i],l=e.sourceLayer;if(l instanceof oo)continue;const d=[],m=[],y=[];let v=!1;for(const input of e.inputs){const e=w.getValue(input),mask=w.getMask(input);d.push(e),m.push(mask),null!=mask&&(v=!0),c||(O[input.name]--,0!==O[input.name]||t.hasKey(input)||-1!==h.indexOf(input.name)||e.isDisposed||!0===input.sourceLayer.stateful||y.push(e))}v&&((n=n||{}).mask=m[0]);const k=da(l.apply(d,n));let I=null;l.supportsMasking&&(I=l.computeMask(d,m));const N=oi(e),j=Array.isArray(N)?N:[N];for(let i=0;i<j.length;++i){w.hasKey(j[i])||w.add(j[i],k[i],Array.isArray(I)?I[0]:I);const e=h.indexOf(j[i].name);-1!==e&&(f[e]=k[i])}c||Object(o.Jd)(y)}return w.disposeMasks(),l?f:f[0]}function ai(e){const t={};for(const n in e)t[n]=e[n].size;return t}function si(e,t){const n=new Set,r=[],o={};for(const e of t.names())n.add(e);const c=[],l=[];for(c.push(e);c.length>0;){const e=c[c.length-1];if(n.has(e.name)){c.pop();continue}const t=l[l.length-1]===c.length-1;if(0===e.inputs.length||t)c.pop(),r.push(e),n.add(e.name),t&&l.pop();else{l.push(c.length-1);for(const input of e.inputs)null==o[input.name]&&(o[input.name]=new Set),o[input.name].add(e.name),n.has(input.name)||c.push(input)}}return{sorted:r,recipientMap:o}}function oi(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let i=0;i<e.sourceLayer.inboundNodes.length;++i)for(const t of e.sourceLayer.inboundNodes[i].outputTensors)if(t.id===e.id){n=i;break}t=e.sourceLayer.getOutputAt(n)}return t}class ii extends ao{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Vs(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],xa(this.inputs).length!==this.inputs.length)throw new aa(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);xa(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;ua(0===n,"input layer has >1 nodes"),ua(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let i=0;i<this.inputLayers.length;i++){const t=this.inputLayers[i];if(!(t instanceof oo))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${i} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},o={},c={},l=[],d=(e,t,n,r,o,h)=>{null!=r&&null!=o&&null!=h||(r=e.sourceLayer,o=e.nodeIndex,h=e.tensorIndex);const f=r.inboundNodes[o];if(-1!==n.indexOf(f))throw new ra(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(f))return;this.containerNodes.add(ii.nodeKey(r,o)),r.id in c||(c[r.id]=Object.keys(c).length),-1===n.indexOf(f)&&n.push(f);const m=f.inboundLayers.length;for(let i=0;i<m;i++){const e=f.inputTensors[i],r=f.inboundLayers[i],o=f.nodeIndices[i],c=f.tensorIndices[i];d(e,t,n,r,o,c)}for(t.push(f);n.indexOf(f)>=0;)n.splice(n.indexOf(f),1);l.push(f)},h=[],f=[];for(const e of this.outputs)d(e,h,f);const m=l.slice().reverse();for(const e of m){n[e.id]=e,e.id in t||(t[e.id]=0);let c=t[e.id];const l=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];c=Math.max(c,l),r[e.outboundLayer.id]=c,o[e.outboundLayer.id]=e.outboundLayer,t[e.id]=c;for(let i=0;i<e.inboundLayers.length;i++){const r=e.inboundLayers[i],o=e.nodeIndices[i],l=r.inboundNodes[o],d=null==t[l.id]?0:t[l.id];t[l.id]=Math.max(c+1,d),n[l.id]=l}}const y={};for(const e in t){const r=t[e];r in y||(y[r]=[]),y[r].push(n[e])}const x={};for(const e in r){const t=r[e];t in x||(x[t]=[]),x[t].push(o[e])}let O=Object.keys(x).map((e=>parseInt(e,10))).sort(ya);this.layers=[];for(const e of O){const t=x[e];t.sort(((a,b)=>{const e=c[a.id],t=c[b.id];return e<t?-1:e>t?1:0}));for(const e of t)e instanceof ii&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=x,O=Object.keys(y).map((e=>parseInt(e,10))).sort(ya);const w=this.inputs.slice(),v=[];for(const e of O)for(const t of y[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===w.indexOf(n))throw new ra(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${v}`);for(const e of t.outputTensors)w.push(e);v.push(e.name)}}this.nodesByDepth=y;const k=this.layers.map((e=>e.name));for(const e of k){const t=k.filter((t=>t===e)).length;if(1!==t)throw new ra(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(k))}this.outboundNodes=[],this.inboundNodes=[],new no({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new aa("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new aa(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const o=[];for(const r in e){let c=r;if(null==n[r]){const e=r.split("/");c=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[c])o.push([n[c],e[r]]);else if(t)throw new aa(`Provided weight data has no target variable: ${r}`);delete n[c]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new aa(`${e.length} of ${r} weights are not set: ${e}`)}Zs(o)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 3.5.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Qo(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Object(o.hf)((()=>{e=da(e);const n=new ei;for(let i=0;i<this.inputs.length;++i)n.add(this.inputs[i],e[i]);return ri(this.outputs,n,t)}))}computeMask(e,mask){return Object(o.hf)((()=>{let t;return e=da(e),t=null==mask?ia(null,e.length):da(mask),this.runInternalGraph(e,t)[1]}))}computeOutputShape(e){const t=Gs(e);if(t.length!==this.inputLayers.length)throw new aa(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let i=0;i<t.length;i++){const e=this.inputLayers[i],r=t[i];n[e.name+"_0_0"]=r}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ya);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const o=e.inboundLayers[t],c=e.nodeIndices[t],l=e.tensorIndices[t],d=n[`${o.name}_${c}_${l}`];r.push(d)}const o=Gs(t.computeOutputShape(la(r))),c=t.inboundNodes.indexOf(e);for(let e=0;e<o.length;e++){n[`${t.name}_${c}_${e}`]=o[e]}}}const o=[],c=[];for(let i=0;i<this.outputLayers.length;i++){const e=this.outputLayers[i],t=this.outputLayersNodeIndices[i],n=this.outputLayersTensorIndices[i],r=`${e.name}_${t}_${n}`;c.push(r)}for(let i=0;i<c.length;i++){const e=c[i];ua(e in n),o.push(n[e])}return la(o)}runInternalGraph(e,t){null==t&&(t=ia(null,e.length));const n={};for(let i=0;i<this.inputs.length;++i){const r=this.inputs[i],o=e[i],mask=t[i];n[r.id]=[o,mask]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ya);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,o=e.outputTensors,c=new Array;for(const e of r)e.id in n&&c.push(n[e.id]);if(c.length===r.length){let r,l,d,h,f={};if(null!=e.callArgs&&(f=e.callArgs),1===c.length){const[e,n]=c[0];null==f.mask&&(f.mask=n),d=da(t.call(e,f)),h=da(t.computeMask(e,n)),r=[e],l=[n]}else r=c.map((e=>e[0])),l=c.map((e=>e[1])),null==f.mask&&(f.mask=l),d=da(t.call(r,f)),h=da(t.computeMask(r,l));if(t.activityRegularizer)throw new sa("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let i=0;i<o.length;++i){const e=o[i],t=d[i],mask=h[i];n[e.id]=[t,mask]}}}}const o=[],c=[],l=[];for(const e of this.outputs){ua(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,mask]=n[e.id];l.push(t.shape),o.push(t),c.push(mask)}return[o,c,l]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof ii?1:0;for(let r=0;r<e.inboundNodes.length;r++){const o=ii.nodeKey(e,r);this.containerNodes.has(o)&&(t[o]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new aa(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new aa("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new aa(`No such layer: ${e}`)}calculateLosses(){return Object(o.hf)((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=ii.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),o=e.getConfig(),c=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],o=ii.nodeKey(e,n);let l={};if(this.containerNodes.has(o)){if(r.callArgs)try{JSON.stringify(r.callArgs),l=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),l={}}if(r.inboundLayers.length>0){const e=[];for(let i=0;i<r.inboundLayers.length;i++){const n=r.inboundLayers[i],o=r.nodeIndices[i],c=r.tensorIndices[i];let d=t[ii.nodeKey(n,o)];null==d&&(d=0),e.push([n.name,d,c,l])}c.push(e)}}}const l={};l.name=e.name,l.className=r,l.config=o,l.inboundNodes=c,n.push(l)}e.layers=n;const r=[];for(let i=0;i<this.inputLayers.length;i++){const e=this.inputLayers[i],n=this.inputLayersNodeIndices[i],o=ii.nodeKey(e,n);if(!this.containerNodes.has(o))continue;let c=t[o];null==c&&(c=0);const l=this.inputLayersTensorIndices[i];r.push([e.name,c,l])}e.inputLayers=r;const o=[];for(let i=0;i<this.outputLayers.length;i++){const e=this.outputLayers[i],n=this.outputLayersNodeIndices[i],r=ii.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let c=t[r];null==c&&(c=0);const l=this.outputLayersTensorIndices[i];o.push([e.name,c,l])}return e.outputLayers=o,e}static fromConfig(e,t,n={},r=!1){const o={},c={};function l(e,t){e.name in c?c[e.name].push(t):c[e.name]=[t]}function d(e,t){const n=[];let r;for(const c of t){const d=c[0],h=c[1],f=c[2];if(r=null==c[3]?{}:c[3],!(d in o))return void l(e,t);const m=o[d];if(m.inboundNodes.length<=h)return void l(e,t);const y=m.inboundNodes[h];n.push(y.outputTensors[f])}n.length>0&&e.apply(la(n),r)}function h(e){const n=e.name,c=Oo(e,null!=t.customObjects?t.customObjects:{});c.setFastWeightInitDuringBuild(r),o[n]=c;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new aa(`Corrupted configuration, expected array for nodeData: ${e}`);l(c,e)}))}const f=t.name,m=t.layers;for(const e of m)h(e);for(;!Oa(c);)for(const e of m){const t=o[e.name];if(t.name in c){const e=c[t.name];delete c[t.name];for(const n of e)d(t,n)}}const y=[],x=[],O=t.inputLayers;for(const e of O){const t=e[0],n=e[1],r=e[2];ua(t in o);const c=o[t].inboundNodes[n].outputTensors;y.push(c[r])}const w=t.outputLayers;for(const e of w){const t=e[0],n=e[1],r=e[2];ua(t in o);const c=o[t].inboundNodes[n].outputTensors;x.push(c[r])}return new e({inputs:y,outputs:x,name:f})}get stateful(){if(this._stateful)throw new aa("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Object(o.hf)((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function ui(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const output=[];return t.forEach((t=>{t in e?output.push(e[t]):output.push(null)})),output}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function ci(e,t){return ui(e,t,"classWeight")}async function di(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Object(o.hf)((()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1){const t=1;return e.argMax(t)}if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());Object(o.Jd)(t);const c=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);c.push(n[e])})),Object(o.ef)(c,"float32")}return null}function hi(e,t){return Object(o.qe)(e,t)}function pi(e,t){let n,r;const c=t;n=c.xs,r=c.ys,o.of.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const l=fi("input",e.inputNames,n),d=fi("output",e.outputNames,r),h=l[0].shape[0];o.of.assert(l.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${l.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),o.of.assert(d.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${d.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<l.length;t++)o.of.assert(l[t].shape[0]===h,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${l[t].shape[0]}; expected  ${h} based on input ${e.inputNames[0]}.`));for(let t=0;t<d.length;t++)o.of.assert(d[t].shape[0]===h,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${d[t].shape[0]}; expected  ${h} based on input ${e.inputNames[0]}.`));return{xs:l,ys:d}}function fi(e,t,n){if(n instanceof o.Vc)return[n];if(Array.isArray(n))return o.of.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const o of t){if(null==n[o])throw new aa(`The feature data generated by the dataset lacks the required ${e} key '${o}'.`);r.push(n[o])}return r}}async function mi(e,t,n){const r=null!=n.batchesPerEpoch;if(o.of.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),o.of.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),o.of.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),o.of.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),o.of.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const c=null!=n.validationData;let l,d;if(c)if(bi(n.validationData))o.of.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(data){if(3===data.length)throw new sa("Validation with sample weights is not implemented yet.");return{xs:data[0],ys:data[1]}}(n.validationData);l=e.xs,d=e.ys}const h=e.makeTrainFunction(),f=e.getDedupedMetricsNames();let m;m=c?f.slice().concat(f.map((e=>"val_"+e))):f.slice();const y=go(n.callbacks,n.yieldEvery),x=null==n.verbose?1:n.verbose,{callbackList:O,history:w}=xo(y,x,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,c,m);O.setModel(e),e.history=w,await O.onTrainBegin(),e.stopTraining_=!1;let v=null==n.initialEpoch?0:n.initialEpoch,k=await t.iterator();for(;v<n.epochs;){const m={};await O.onEpochBegin(v);let y=0,x=0;for(r||(k=await t.iterator());!r||y<n.batchesPerEpoch;){const t=await k.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:c}=pi(e,t.value),l={};l.batch=x,l.size=r[0].shape[0],await O.onBatchBegin(x,l);const d=[];if(null!=n.classWeight){const t=ci(n.classWeight,e.outputNames);for(let i=0;i<t.length;++i)d.push(await di(c[i],null,t[i]))}const ins=r.concat(c).concat(d),m=h(ins);o.Jd(ins);for(let i=0;i<f.length;++i){const label=f[i],e=m[i];l[label]=e,o.ae(e)}await O.onBatchEnd(x,l),co(l),x++,y++}if(r?y>=n.batchesPerEpoch:t.done){if(c){let t;t=bi(n.validationData)?da(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):da(e.evaluate(l,d,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let i=0;i<e.metricsNames.length;++i)m[`val_${e.metricsNames[i]}`]=t[i]}break}if(e.stopTraining_)break}if(await O.onEpochEnd(v,m),v++,e.stopTraining_)break}return await O.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function bi(e){return"function"==typeof e.iterator}function gi(e){o.of.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function yi(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>as(e,t,n-t))):as(e,t,n-t)}function xi(e,t){return o.hf((()=>null==e?null:Array.isArray(e)?e.map((e=>xi(e,t))):hs(e,"int32"===t.dtype?t:t.toInt())))}function Oi(e,t){const output=[];let n=0,r=null;for(;n<e;)r=n+t,r>=e&&(r=e),output.push([n,r]),n=r;return output}async function wi(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let c,l,d,h,f,m,y;e.isTraining=!0;try{const x=null==r.batchSize?32:r.batchSize;gi(x);const O=!1,w=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,O,x);c=w[0],l=w[1],y=w[2];let v,k=!1;if(null!=r.validationData&&r.validationData.length>0){if(k=!0,2!==r.validationData.length)throw 3===r.validationData.length?new sa("validationData including sample weights is not supported yet."):new aa(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);d=r.validationData[0],h=r.validationData[1];const t=!0,n=await e.standardizeUserData(d,h,null,null,t,x);f=n[0],m=n[1],v=f.concat(m)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){k=!0;const e=Math.floor(c[0].shape[0]*(1-r.validationSplit)),t=c[0].shape[0];f=yi(c,e,t),c=yi(c,0,e),m=yi(l,e,t),l=yi(l,0,e),v=f.concat(m)}else null!=r.validationSteps&&(k=!0);const ins=c.concat(l).concat(y);e.checkTrainableWeightsConsistency();const I=e.makeTrainFunction(),N=e.getDedupedMetricsNames();let j,S;k?(e.makeTestFunction(),j=e.testFunction,S=N.slice().concat(N.map((e=>"val_"+e)))):(j=null,v=[],S=N.slice());const T=go(r.callbacks,r.yieldEvery);return await async function(e,t,ins,n,r,c,l,d,h,f,m,y,x,O,w){null==r&&(r=32),null==c&&(c=1),null==m&&(m=!0),null==x&&(x=0);let v=!1;if(null!=h&&null!=f&&(v=!0),null!=w&&(v=!0,null==O))throw new aa("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const k=e.checkNumSamples(ins,r,O,"steps_per_epoch");let I;null!=k&&(I=ts(0,k)),null==l&&(l=1);const{callbackList:N,history:j}=xo(d,l,c,x,k,O,r,v,y);N.setModel(e),e.history=j,await N.onTrainBegin(),e.stopTraining_=!1;for(let l=x;l<c;++l){await N.onEpochBegin(l);const c={};if(null!=O)throw new sa("stepsPerEpoch mode is not implemented yet.");{if("batch"===m)throw new sa("batch shuffling is not implemneted yet");m&&o.of.shuffle(I);const l=Object(o.ef)(I),d=Oi(k,r);for(let m=0;m<d.length;++m){const y={};if(await N.onBatchBegin(m,y),o.hf((()=>{const x=d[m][0],O=d[m][1],w=as(l,x,O-x);y.batch=m,y.size=O-x;const k=xi(ins,w),I=t(k);for(let i=0;i<n.length;++i){const label=n[i],e=I[i];y[label]=e,o.ae(e)}if(m===d.length-1&&v){const t=e.testLoop(h,f,r);for(let i=0;i<n.length;++i){const label=n[i],e=t[i];o.ae(e),c["val_"+label]=e}}})),await N.onBatchEnd(m,y),co(y),e.stopTraining_)break}l.dispose()}if(await N.onEpochEnd(l,c),e.stopTraining_)break}return await N.onTrainEnd(),await e.history.syncData(),e.history}(e,I,ins,N,x,r.epochs,r.verbose,T,j,v,r.shuffle,S,r.initialEpoch,null,null)}finally{e.isTraining=!1,ki(c,t),ki(l,n),ki(f,d),ki(m,h),null!=y&&o.Jd(y)}}function vi(e){const t=[];e instanceof o.Vc&&(e=[e]);for(let i=0;i<e.length;++i){const n=e[i];if(1===n.rank)t.push(rs(n,1));else{if(0===n.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(n)}}return t}function ki(e,t){if(null==e)return;const n=[];if(t instanceof o.Vc)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof o.Vc)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const o=e[t];-1===n.indexOf(o.id)&&r.push(o)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function Ii(e){return Array.isArray(e)}function Ni(e){return!function(e){return e instanceof o.Vc}(e)&&!Ii(e)}function ji(data,e,t,n=!0,r=""){if(null==e||0===e.length){if(null!=data){let e=!1;if(Ii(data)&&data.length>0)e=!0;else if(Ni(data)){for(const t in data)if(data.hasOwnProperty(t)){e=!0;break}}else e=!0;if(e)throw new aa(`Error when checking model ${r} expected no data, but got ${data}`)}return[]}if(null==data)return e.map((e=>null));let o;if(Ni(data)){data=data,o=[];for(const t of e){if(null==data[t])throw new aa(`No data provided for "${t}". Need data for each key in: ${e}`);o.push(data[t])}}else if(Ii(data)){if((data=data).length!==e.length)throw new aa(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${data}`);o=data}else{if(data=data,e.length>1)throw new aa(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${data.shape}`);o=[data]}if(o=vi(o),null!=t)for(let i=0;i<e.length;++i){if(null==t[i])continue;const c=o[i];if(c.shape.length!==t[i].length)throw new aa(`Error when checking ${r}: expected ${e[i]} to have ${t[i].length} dimension(s). but got array with shape ${c.shape}`);for(let o=0;o<t[i].length;++o){if(0===o&&!n)continue;const l=c.shape[o],d=t[i][o];if(null!=d&&d>=0&&l!==d)throw new aa(`Error when checking ${r}: expected ${e[i]} to have shape [${t[i]}], but got array with shape [${c.shape}].`)}}return o}function Si(data,e,t,n=!0,r=""){let o;if(Array.isArray(data)){if(data.length!==e.length)throw new aa(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${data.length} Tensors(s).`);o=data}else{if(e.length>1)throw new aa(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(data.shape)}.`);o=[data]}if(null!=t)for(let i=0;i<e.length;++i){if(null==t[i])continue;const c=o[i];if(c.shape.length!==t[i].length)throw new aa(`Error when checking ${r}: expected ${e[i]} to have ${t[i].length} dimension(s), but got array with shape ${JSON.stringify(c.shape)}`);for(let o=0;o<t[i].length;++o){if(0===o&&!n)continue;const l=c.shape[o],d=t[i][o];if(null!=d&&d!==l)throw new aa(`Error when checking ${r}: expected ${e[i]} to have shape ${JSON.stringify(t[i])} but got array with shape ${JSON.stringify(c.shape)}.`)}}}class Ti extends ii{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new aa("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Ko(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>o.jf.adagrad(.01),Adadelta:()=>o.jf.adadelta(1,.95,ta()),Adam:()=>o.jf.adam(.001,.9,.999,ta()),Adamax:()=>o.jf.adamax(.002,.9,.999,ta(),0),RMSProp:()=>o.jf.rmsprop(.001,.9,0,ta()),SGD:()=>o.jf.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new aa(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof o.dc))throw new aa("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new aa(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Ao(e)))}else{const n=Ao(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new aa(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Ao(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const e=this.internalOutputShapes[i],t=this.outputNames[i];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[i])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ha("loss",(()=>{for(let i=0;i<this.outputs.length;++i){if(-1!==n.indexOf(i))continue;const e=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([e,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),c=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Ha("metric",(()=>{for(let i=0;i<this.outputs.length;++i){if(-1!==n.indexOf(i))continue;(e=>{let t,n,r;for(const o of e){if("string"==typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const e=this.internalOutputShapes[i];let c;1===e[e.length-1]||this.lossFunctions[i]===To?-1!==["accuracy","acc"].indexOf(o)?n=Ro:-1!==["crossentropy","ce"].indexOf(o)&&(n=Mo):this.lossFunctions[i]===So?-1!==["accuracy","acc"].indexOf(o)?n=Lo:-1!==["crossentropy","ce"].indexOf(o)&&(n=Po):-1!==["accuracy","acc"].indexOf(o)?n=Fo:-1!==["crossentropy","ce"].indexOf(o)&&(n=zo),-1!==["accuracy","acc"].indexOf(o)?c="acc":-1!==["crossentropy","ce"].indexOf(o)&&(c="ce"),r=n,t=""+c}else{const e=Wo(o);r=e,t=""+Vo(o)}let e;Ha(t,(()=>{e=r})),c(i,t,e)}})(r[i])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;gi(r);const o=this.standardizeUserDataXY(e,t,!0,r);try{const ins=o[0].concat(o[1]);this.makeTestFunction();const c=this.testFunction;return la(this.testLoop(c,ins,r,n.verbose,n.steps))}finally{ki(o[0],e),ki(o[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,c=e.testFunction;let l=[];if(n.verbose>0)throw new sa("Verbose mode is not implemented yet.");o.of.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const d="function"==typeof t.next?t:await t.iterator();let h=0,f=0;for(;!r||f<n.batches;){const t=await d.next();if(l=o.hf((()=>{if(t.value){const{xs:n,ys:r}=pi(e,t.value),d=n.concat(r),m=o.hf((()=>c(d)));if(o.Jd(d),0===f)for(let i=0;i<m.length;++i)l.push(Object(o.He)(0));const y=d[0].shape[0];for(let i=0;i<m.length;++i){const e=m[i],t=l[i];l[i]=o.hf((()=>o.hd(l[i],o.qe(y,e)))),f>0&&o.Jd(t)}o.Jd(m),h+=y,++f}return l})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let i=0;i<l.length;++i){const e=l[i];l[i]=o.Kd(l[i],h),o.Jd(e)}return la(l)}(this,e,t)}checkNumSamples(ins,e,t,n="steps"){let r;if(null!=t){if(r=null,null!=e)throw new aa(`If ${n} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==ins)throw new aa(`Either the input data should have a defined shape, or ${n} shoud be specified.`);r=Array.isArray(ins)?ins[0].shape[0]:ins.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new aa("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],c=this.retrieveSymbolicTensors(r),l=new ei;if(e instanceof o.Vc&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new aa(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let i=0;i<this.inputs.length;++i)l.add(this.inputs[i],e[i])}else for(const input of this.inputs){const t=e[input.name];if(null==t)throw new aa(`No value is provided for the model's input ${input.name}`);l.add(input,t)}const d=ri(c,l);return n?d:d[0]}retrieveSymbolicTensors(e){const t=ia(null,e.length);let n=e.length;for(const r of this.layers){const o=Array.isArray(r.output)?r.output:[r.output],c=o.map((output=>output.name));for(let i=0;i<e.length;++i){const r=c.indexOf(e[i]);if(-1!==r&&(t[i]=o[r],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,i)=>{null==t&&n.push(e[i])})),new aa(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(ins,e=32,t=!1){return o.hf((()=>{const n=this.checkNumSamples(ins);if(t)throw new sa("Verbose predictLoop() is not implemented yet.");const r=Oi(n,e),c=this.outputs.map((output=>[]));for(let e=0;e<r.length;++e){o.hf((()=>{const t=r[e][0],n=r[e][1],o=yi(ins,t,n),c=[];if(Array.isArray(o))for(let i=0;i<o.length;++i)c.push({key:this.inputs[i],value:o[i]});else c.push({key:this.inputs[0],value:o});const l=new ei(c);return ri(this.outputs,l)})).forEach(((e,i)=>c[i].push(e)))}return la(c.map((e=>o.xd(e,0))))}))}predict(e,t={}){const n=vi(e);Si(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return gi(r),this.predictLoop(n,r)}finally{ki(n,e)}}predictOnBatch(e){Si(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new ra("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const c=[];for(let i=0;i<this.feedOutputShapes.length;++i){const e=this.feedOutputShapes[i];this.feedLossFns[i]===So?c.push(e.slice(0,e.length-1).concat([1])):c.push(e)}if(function(e,t,n){const r=xa(e.map((input=>input.shape[0])));r.sort();const c=xa(t.map((e=>e.shape[0])));if(c.sort(),r.length>1)throw new aa(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((input=>input.shape)))}`);if(c.length>1)throw new aa(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&c.length>0&&!o.of.arraysEqual(r,c))throw new aa(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${c[0]} target sample(s).`)}(e=ji(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=ji(t,this.feedOutputNames,c,!1,"target")),function(e,t,n){const r=[vo,To,jo];for(let i=0;i<e.length;++i){const o=e[i],c=t[i],l=n[i];if(null!=c){if(c===jo&&1===o.shape[o.shape.length-1])throw new aa(`You are passing a target array of shape ${o.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(c)){const e=o.shape.slice(1),t=l.slice(1);for(let n=0;n<e.length;++n){const r=e[n],c=t[n];if(null!=c&&r!==c)throw new aa(`A target Tensor with shape ${o.shape} was passed for an output of shape ${l}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new aa(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,o=!0,c){const[l,d]=this.standardizeUserDataXY(e,t,o,c);if(null!=n)throw new Error("sample weight is not supported yet.");let h=null;if(null!=r){const e=ci(r,this.outputNames);h=[];for(let i=0;i<e.length;++i)h.push(await di(d[i],null,e[i]))}return[l,d,h]}testLoop(e,ins,t,n=0,r){return o.hf((()=>{const c=this.checkNumSamples(ins,t,r,"steps"),l=[];if(n>0)throw new sa("Verbose mode is not implemented yet.");if(null!=r)throw new sa("steps mode in testLoop() is not implemented yet");{const n=Oi(c,t),r=Object(o.ef)(ts(0,c));for(let t=0;t<n.length;++t){const c=n[t][0],d=n[t][1],h=as(r,c,d-c),f=xi(ins,h),m=e(f);if(0===t)for(let i=0;i<m.length;++i)l.push(Object(o.He)(0));for(let i=0;i<m.length;++i){const e=m[i];l[i]=o.hd(l[i],o.qe(d-c,e))}}for(let i=0;i<l.length;++i)l[i]=o.Kd(l[i],c)}return l}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let i=0;i<e.length;++i){const label=e[i];let n=label;if(ca(e,label)>1){n+=`_${ca(e.slice(0,i),label)}`}t.push(n)}return t}makeTrainFunction(){return data=>{const e=[],t=data.slice(0,this.inputs.length),n=data.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=data.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),c=[],l=this.collectedTrainableWeights.map((param=>param.read()));return[this.optimizer_.minimize((()=>{const l=[];for(let i=0;i<this.inputs.length;++i)l.push({key:this.inputs[i],value:t[i]});const d=new ei(l),h=ri(this.outputs,d,{training:!0});let f;for(let i=0;i<this.lossFunctions.length;++i){let t=(0,this.lossFunctions[i])(n[i],h[i]);null!=r[i]&&(t=hi(t,r[i]));const c=o.le(t);e.push(c),f=0===i?t:o.hd(f,t)}for(let i=0;i<this.metricsTensors.length;++i){let t;if(this.outputs.length>1&&i<this.outputs.length)t=e[i];else{const e=this.metricsTensors[i][0],r=this.metricsTensors[i][1];t=o.le(e(n[r],h[r]))}o.ae(t),c.push(t)}return f=o.le(f),this.calculateLosses().forEach((e=>{f=o.hd(f,e)})),f}),!0,l)].concat(c)}}makeTestFunction(){this.testFunction=data=>o.hf((()=>{const e=[];let t;const n=data.slice(0,this.inputs.length),r=data.slice(this.inputs.length,this.inputs.length+this.outputs.length),c=[];for(let i=0;i<this.inputs.length;++i)c.push({key:this.inputs[i],value:n[i]});const l=new ei(c),d=ri(this.outputs,l);for(let i=0;i<this.lossFunctions.length;++i){const n=this.lossFunctions[i],c=o.le(n(r[i],d[i]));t=0===i?c:o.hd(t,c),e.push(t)}for(let i=0;i<this.metricsTensors.length;++i){const t=this.metricsTensors[i][0],n=this.metricsTensors[i][1],c=o.le(t(r[n],d[n]));e.push(c)}return e}))}async fit(e,t,n={}){return wi(this,e,t,n)}async fitDataset(e,t){return mi(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],c=n[1],l=this.makeTrainFunction()(r.concat(c)),d=[];for(const e of l){const t=await e.data();d.push(t[0])}return o.Jd(l),la(d)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,o=this.getWeights(n);for(let i=0;i<r.length;++i)n&&!r[i].trainable||t.push({name:r[i].originalName,tensor:o[i]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=o.me().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-o.me().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=ha(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>ha(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=ha(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[ha(Vo(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>ha(Vo(e))));{const e={};for(const t in this.metrics)e[t]=ha(Vo(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Oo(Zo(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=pa(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>pa(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=pa(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>pa(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=pa(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=o.Zd.getSaveHandlers(e);if(0===t.length)throw new aa(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new aa(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new aa("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await o.Zd.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.5.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:c}=await o.Zd.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...c),n.data=o.Zd.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Go(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){Go(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Ti.className="Model",o.Ke.registerClass(Ti);class Ci extends Ti{}Ci.className="Functional",o.Ke.registerClass(Ci);class $i extends Ti{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Vs("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new aa(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof $i||e instanceof Ti;let n;if(t){if(n=e,1!==n.outputs.length)throw new aa("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new aa("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new aa("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=io({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new aa(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new aa("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=so(this.outputs[0])}this.inboundNodes=[],new no({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ia(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Ks(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Ti({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new ra("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new ra("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new ra("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new ra("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let c,l={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new aa("Legacy serialization format not supported yet.");c=t}else o.of.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),c=t.layers,delete t.layers,l=t;const d=new e(l);if(!(d instanceof $i))throw new sa(`Sequential.fromConfig called on non-Sequential input: ${d}`);for(const e of c){const t=Oo(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),d.add(t)}return d}set stopTraining(e){if(null==this.model)throw new aa("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new aa("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}$i.className="Sequential",o.Ke.registerClass($i);class Ei extends o.Ke.Serializable{getConfig(){return{}}}class Ai extends Ei{apply(e,t=1){return function(e,t=1){if(1!==t)throw new sa(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return o.Md(e)}(e,t)}}Ai.className="elu",o.Ke.registerClass(Ai);class Ri extends Ei{apply(e){return o.Ie(e)}}Ri.className="selu",o.Ke.registerClass(Ri);class Fi extends Ei{apply(e){return o.Ee(e)}}Fi.className="relu",o.Ke.registerClass(Fi);class Di extends Ei{apply(e){return Object(o.hf)((()=>o.oe(6,o.Ee(e))))}}Di.className="relu6",o.Ke.registerClass(Di);class _i extends Ei{apply(e){return e}}_i.className="linear",o.Ke.registerClass(_i);class Mi extends Ei{apply(e){return o.Me(e)}}Mi.className="sigmoid",o.Ke.registerClass(Mi);class Li extends Ei{apply(e){return function(e){return Object(o.hf)((()=>{const t=o.hd(.5,o.qe(.2,e));return o.vd(t,0,1)}))}(e)}}Li.className="hardSigmoid",o.Ke.registerClass(Li);class zi extends Ei{apply(e){return o.Ue(e)}}zi.className="softplus",o.Ke.registerClass(zi);class Pi extends Ei{apply(e){return function(e){return Object(o.hf)((()=>o.Kd(e,o.gd(e).add(1))))}(e)}}Pi.className="softsign",o.Ke.registerClass(Pi);class Bi extends Ei{apply(e){return o.cf(e)}}Bi.className="tanh",o.Ke.registerClass(Bi);class Wi extends Ei{apply(e,t=-1){return o.Te(e,t)}}Wi.className="softmax",o.Ke.registerClass(Wi);class Vi extends Ei{apply(e,t=-1){return o.fe(e,t)}}Vi.className="logSoftmax",o.Ke.registerClass(Vi);class Ui extends Ei{apply(e,t=1){return Object(o.hf)((()=>o.Me(e.mul(t)).mul(e)))}}Ui.className="swish",o.Ke.registerClass(Ui);class Gi extends Ei{apply(e){return Object(o.hf)((()=>o.qe(e,o.cf(o.Ue(e)))))}}function Hi(e){return e.getClassName()}function Ki(e,t={}){return ga(e,o.Ke.SerializationMap.getMap().classNameMap,t,"activation")}function qi(e){if(null==e){const e={className:"linear",config:{}};return Ki(e)}if("string"==typeof e){const t={};return t.className=e,t.config={},Ki(t)}return e instanceof Ei?e:Ki(e)}function Xi(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}Gi.className="mish",o.Ke.registerClass(Gi);class Yi extends o.Ke.Serializable{}class Ji extends Yi{constructor(e){super(),Xi(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Object(o.hf)((()=>{let t=Object(o.tf)([1]);return this.hasL1&&(t=Object(o.hd)(t,Object(o.af)(o.qe(this.l1,Object(o.gd)(e))))),this.hasL2&&(t=Object(o.hd)(t,Object(o.af)(o.qe(this.l2,ps(e))))),t.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Ji.className="L1L2",o.Ke.registerClass(Ji);const Zi={l1l2:"L1L2"};function Qi(e){return ma(e)}function eu(e,t={}){return ga(e,o.Ke.SerializationMap.getMap().classNameMap,t,"regularizer")}function tu(e){if(null==e)return null;if("string"==typeof e){return eu({className:e in Zi?Zi[e]:e,config:{}})}return e instanceof Yi?e:eu(e)}class nu extends ao{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Hs(e);let output=Object(o.Ee)(e);return null!=this.maxValue&&(output=Object(o.vd)(output,0,this.maxValue)),output}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}nu.className="ReLU",o.Ke.registerClass(nu);class ru extends ao{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Hs(e);return Object(o.ce)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}ru.className="LeakyReLU",o.Ke.registerClass(ru);class au extends ao{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=zs(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=tu(e.alphaRegularizer),this.alphaConstraint=Da(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new aa(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Ks(e)).slice(1);if(null!=this.sharedAxes)for(const i of this.sharedAxes)t[i-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let i=1;i<e.length;++i)n[i]=e[i];this.inputSpec=[new Qs({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Hs(e),Object(o.ze)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Ls(this.alphaInitializer),alphaRegularizer:Qi(this.alphaRegularizer),alphaConstraint:Ra(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}au.className="PReLU",o.Ke.registerClass(au);class su extends ao{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new sa(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Hs(e);return Object(o.Md)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}su.className="ELU",o.Ke.registerClass(su);class ou extends ao{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Hs(e);return n.mul(ns(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}ou.className="ThresholdedReLU",o.Ke.registerClass(ou);class iu extends ao{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Wi).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Hs(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function uu(e,t,n){if("number"==typeof e)return ia(e,t);if(e.length!==t)throw new aa(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let i=0;i<t;++i){const o=e[i];if((r=o)!==parseInt(r.toString(),10))throw new aa(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${o}`)}return e;var r}function cu(e,t,n,r,o=1){if(null==e)return e;let c;return c="same"===n?e:e-(t+(t-1)*(o-1))+1,Math.floor((c+r-1)/r)}function lu(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+es([n-t,0]);else{if("same"!==r)throw new aa(`Unsupport padding mode: ${r}.`);e*=t}return e}function du(e,t){return Object(o.hf)((()=>(Wa(t),"channelsFirst"===t?o.kf(e,[0,2,3,1]):e)))}function hu(e,t){return Object(o.hf)((()=>(Wa(t),"channelsFirst"===t?o.kf(e,[0,2,3,4,1]):e)))}function pu(e,t,n,r=1,c="valid",l,d=1){return Object(o.hf)((()=>{if(null==l&&(l="channelsLast"),Wa(l),3!==e.shape.length)throw new aa(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new aa(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new aa(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===l&&(e=o.kf(e,[0,2,1])),"causal"===c)throw new sa("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let h=o.Cd(e,t,r,"same"===c?"same":"valid","NWC",d);return null!=n&&(h=ms(h,n)),h}))}function fu(e,t,n,r=[1,1],c="valid",l,d,h=null){return Object(o.hf)((()=>{if(null==l&&(l="channelsLast"),Wa(l),3!==e.rank&&4!==e.rank)throw new aa(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new aa(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let f=du(e,l);if("causal"===c)throw new sa("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return f=o.Ud.conv2d({x:f,filter:t,strides:r,pad:"same"===c?"same":"valid",dilations:d,dataFormat:"NHWC",bias:n,activation:h}),"channelsFirst"===l&&(f=o.kf(f,[0,3,1,2])),f}))}function mu(e,t,n,r=[1,1,1],c="valid",l,d){return Object(o.hf)((()=>{if(null==l&&(l="channelsLast"),Wa(l),4!==e.rank&&5!==e.rank)throw new aa(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new aa(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let h=hu(e,l);if("causal"===c)throw new sa("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return h=o.Fd(h,t,r,"same"===c?"same":"valid","NDHWC",d),null!=n&&(h=ms(h,n)),"channelsFirst"===l&&(h=o.kf(h,[0,4,1,2,3])),h}))}iu.className="Softmax",o.Ke.registerClass(iu);class bu extends ao{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",bu.verifyArgs(t),this.rank=e,ka(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new sa(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=uu(t.kernelSize,e,"kernelSize"),this.strides=uu(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Va(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Wa(this.dataFormat),this.activation=qi(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=zs(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Da(t.biasConstraint),this.biasRegularizer=tu(t.biasRegularizer),this.activityRegularizer=tu(t.activityRegularizer),this.dilationRate=uu(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new aa(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new aa(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new aa(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(ua("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!va(e.kernelSize,"number",1,3))throw new aa(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Hi(this.activation),useBias:this.useBias,biasInitializer:Ls(this.biasInitializer),biasRegularizer:Qi(this.biasRegularizer),activityRegularizer:Qi(this.activityRegularizer),biasConstraint:Ra(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class gu extends bu{constructor(e,t){super(e,t),this.kernel=null,gu.verifyArgs(t),this.filters=t.filters,ka(this.filters,"filters"),this.kernelInitializer=zs(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Da(t.kernelConstraint),this.kernelRegularizer=tu(t.kernelRegularizer)}build(e){e=Ks(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new aa(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Object(o.hf)((()=>{let t;e=Hs(e);const n=null==this.bias?null:this.bias.read(),r=Na(this.activation.getClassName());if(null!=r&&2===this.rank)t=fu(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=pu(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=fu(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new sa("convolutions greater than 3D are not implemented yet.");t=mu(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Ks(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let i=0;i<n.length;++i){const e=cu(n[i],this.kernelSize[i],this.padding,this.strides[i],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[i]);t.push(e)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Ls(this.kernelInitializer),kernelRegularizer:Qi(this.kernelRegularizer),kernelConstraint:Ra(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new aa(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class yu extends gu{constructor(e){super(2,e),yu.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!va(e.kernelSize,"number",1,2))throw new aa(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}yu.className="Conv2D",o.Ke.registerClass(yu);class xu extends gu{constructor(e){super(3,e),xu.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new aa(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}xu.className="Conv3D",o.Ke.registerClass(xu);class Ou extends yu{constructor(e){if(super(e),this.inputSpec=[new Qs({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new aa(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Ks(e)).length)throw new aa("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new aa("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Qs({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return o.hf((()=>{let input=Hs(e);if(4!==input.shape.length)throw new aa(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${input.shape.length}`);const t=input.shape,n=t[0];let r,c;"channelsFirst"===this.dataFormat?(r=2,c=3):(r=1,c=2);const l=t[r],d=t[c],h=this.kernelSize[0],f=this.kernelSize[1],m=this.strides[0],y=this.strides[1],x=[n,lu(l,m,h,this.padding),lu(d,y,f,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(input=o.kf(input,[0,2,3,1]));let O=o.Ed(input,this.kernel.read(),x,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(O=o.kf(O,[0,3,1,2])),null!=this.bias&&(O=ms(O,this.bias.read(),this.dataFormat)),null!=this.activation&&(O=this.activation.apply(O)),O}))}computeOutputShape(e){const t=(e=Ks(e)).slice();let n,r,o;"channelsFirst"===this.dataFormat?(n=1,r=2,o=3):(n=3,r=1,o=2);const c=this.kernelSize[0],l=this.kernelSize[1],d=this.strides[0],h=this.strides[1];return t[n]=this.filters,t[r]=lu(t[r],d,c,this.padding),t[o]=lu(t[o],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Ou.className="Conv2DTranspose",o.Ke.registerClass(Ou);class wu extends xu{constructor(e){if(super(e),this.inputSpec=[new Qs({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new aa(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Ks(e)).length)throw new aa("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new aa("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Qs({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return o.hf((()=>{let input=Hs(e);if(5!==input.shape.length)throw new aa(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${input.shape.length}`);const t=input.shape,n=t[0];let r,c,l;"channelsFirst"===this.dataFormat?(l=2,r=3,c=4):(l=1,r=2,c=3);const d=t[l],h=t[r],f=t[c],m=this.kernelSize[0],y=this.kernelSize[1],x=this.kernelSize[2],O=this.strides[0],w=this.strides[1],v=this.strides[2],k=[n,lu(d,O,m,this.padding),lu(h,w,y,this.padding),lu(f,v,x,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(input=o.kf(input,[0,2,3,4,1]));let I=o.Gd(input,this.kernel.read(),k,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(I=o.kf(I,[0,4,1,2,3])),null!==this.bias&&(I=ms(I,this.bias.read(),this.dataFormat)),null!==this.activation&&(I=this.activation.apply(I)),I}))}computeOutputShape(e){const t=(e=Ks(e)).slice();let n,r,o,c;"channelsFirst"===this.dataFormat?(n=1,r=2,o=3,c=4):(n=4,r=1,o=2,c=3);const l=this.kernelSize[0],d=this.kernelSize[1],h=this.kernelSize[2],f=this.strides[0],m=this.strides[1],y=this.strides[2];return t[n]=this.filters,t[r]=lu(t[r],f,l,this.padding),t[o]=lu(t[o],m,d,this.padding),t[c]=lu(t[c],y,h,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}wu.className="Conv3DTranspose",o.Ke.registerClass(wu);class vu extends gu{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new aa("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new aa("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new aa(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=zs(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=tu(t.depthwiseRegularizer),this.depthwiseConstraint=Da(t.depthwiseConstraint),this.pointwiseInitializer=zs(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=tu(t.pointwiseRegularizer),this.pointwiseConstraint=Da(t.pointwiseConstraint)}build(e){if((e=Ks(e)).length<this.rank+2)throw new aa(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new aa(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),o=[];for(let i=0;i<this.rank;++i)o.push(1);o.push(n*this.depthMultiplier,this.filters);const c=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,c,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",o,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,c,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,c,this.biasConstraint):this.bias=null,this.inputSpec=[new Qs({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Object(o.hf)((()=>{let output;if(e=Hs(e),1===this.rank)throw new sa("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=o.kf(e,[0,2,3,1])),output=o.Je(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(output=ms(output,this.bias.read(),this.dataFormat)),null!=this.activation&&(output=this.activation.apply(output)),"channelsFirst"===this.dataFormat&&(output=o.kf(output,[0,3,1,2])),output}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ls(this.depthwiseInitializer),e.pointwiseInitializer=Ls(this.pointwiseInitializer),e.depthwiseRegularizer=Qi(this.depthwiseRegularizer),e.pointwiseRegularizer=Qi(this.pointwiseRegularizer),e.depthwiseConstraint=Ra(this.depthwiseConstraint),e.pointwiseConstraint=Ra(this.pointwiseConstraint),e}}vu.className="SeparableConv";class ku extends vu{constructor(e){super(2,e)}}ku.className="SeparableConv2D",o.Ke.registerClass(ku);class Iu extends gu{constructor(e){super(1,e),Iu.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!va(e.kernelSize,"number",1,1))throw new aa(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Iu.className="Conv1D",o.Ke.registerClass(Iu);class Nu extends ao{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Object(o.hf)((()=>{if(e=Hs(e),"channelsLast"===this.dataFormat){const t=os(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return os(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=os(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return os(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Nu.className="Cropping2D",o.Ke.registerClass(Nu);class ju extends ao{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Wa(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,wa(Ma,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return o.hf((()=>{let input=Hs(e);const t=input.shape;if("channelsFirst"===this.dataFormat){input=o.kf(input,[0,2,3,1]);const e=this.size[0]*t[2],n=this.size[1]*t[3],r="nearest"===this.interpolation?input.resizeNearestNeighbor([e,n]):input.resizeBilinear([e,n]);return o.kf(r,[0,3,1,2])}{const e=this.size[0]*t[1],n=this.size[1]*t[2];return"nearest"===this.interpolation?input.resizeNearestNeighbor([e,n]):input.resizeBilinear([e,n])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}ju.className="UpSampling2D",o.Ke.registerClass(ju);class Su extends bu{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=zs(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Da(e.depthwiseConstraint),this.depthwiseRegularizer=tu(e.depthwiseRegularizer)}build(e){if((e=Ks(e)).length<4)throw new aa(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new aa(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Object(o.hf)((()=>{let t=function(e,t,n=[1,1],r="valid",c,l){return Object(o.hf)((()=>{null==c&&(c="channelsLast"),Wa(c);let d=du(e,c);if(4!==e.rank)throw new aa(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new aa(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return d=o.Hd(d,t,n,"same"===r?"same":"valid","NHWC",l),"channelsFirst"===c&&(d=o.kf(d,[0,3,1,2])),d}))}(e=Hs(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=ms(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Ks(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,o=cu(t,this.kernelSize[0],this.padding,this.strides[0]),c=cu(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,o,c]:[e[0],o,c,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ls(this.depthwiseInitializer),e.depthwiseRegularizer=Qi(this.depthwiseRegularizer),e.depthwiseConstraint=Ra(this.depthwiseRegularizer),e}}function Tu(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new aa("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function o(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=o(t),constants:n=o(n)}}function Cu(e,t,n,r=!1,mask,c,l=!1,d=!1){return o.hf((()=>{const h=t.shape.length;if(h<3)throw new aa(`Input should be at least 3D, but is ${h}D.`);const f=[1,0].concat(ts(2,h));if(t=o.kf(t,f),null!=c)throw new sa("The rnn() functoin of the deeplearn.js backend does not support constants yet.");l&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=mask&&((mask=mask.asType("bool").asType("float32")).rank===h-1&&(mask=o.Qd(mask,-1)),mask=o.kf(mask,f)),r&&(t=o.Ge(t,0),null!=mask&&(mask=o.Ge(mask,0)));const m=[];let y,x=n;const O=t.shape[0],w=o.mf(t);let v,k;null!=mask&&(v=o.mf(mask));for(let t=0;t<O;++t){const n=w[t],r=o.hf((()=>e(n,x)));if(null==mask)y=r[0],x=r[1];else{const e=o.hf((()=>{const e=v[t],n=o.we(e).sub(e);return{output:r[0].mul(e).add(x[0].mul(n)),newStates:x.map(((t,i)=>r[1][i].mul(e).add(t.mul(n))))}}));y=e.output,x=e.newStates}d&&m.push(y)}if(d){const e=1;k=o.Ye(m,e)}return[y,k,x]}))}Su.className="DepthwiseConv2D",o.Ke.registerClass(Su);class $u extends ao{constructor(e){let t;if(super(e),null==e.cell)throw new aa("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Lu({cells:e.cell}):e.cell,null==t.stateSize)throw new aa("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Qs({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return ts(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Us(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,mask){return o.hf((()=>{Array.isArray(mask)&&(mask=mask[0]);const e=this.returnSequences?mask:null;if(this.returnState){const t=this.states.map((s=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,output=[];for(let i=0;i<e;++i)output.push(null);return output}return this.states_}set states(s){this.states_=s}build(e){if(null!=this.numConstants)throw new sa("Constants support is not implemented in RNN yet.");Us(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Qs({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let c;if(this.cell.build(r),c=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!o.of.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),c))throw new aa(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=c.map((e=>new Qs({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Object(o.hf)((()=>{if(!this.stateful)throw new na("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new aa("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>o.tf([n,e]))):this.states_=[o.tf([n,this.cell.stateSize])];else if(null==e)o.Jd(this.states_),null!=this.keptStates&&(o.Jd(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>o.tf([n,e]))):this.states_[0]=o.tf([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new aa(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):o.Jd(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],c=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,l=[n,c];if(!o.of.arraysEqual(r.shape,l))throw new aa(`State ${t} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>o.ae(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const o=Tu(e,n,r,this.numConstants);e=o.inputs,n=o.initialState,r=o.constants;let c=[],l=[];if(null!=n){t.initialState=n,c=c.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Qs({shape:e.shape}));l=l.concat(this.stateSpec)}null!=r&&(t.constants=r,c=c.concat(r),this.numConstants=r.length);if(c[0]instanceof eo){const n=[e].concat(c),r=this.inputSpec.concat(l),o=this.inputSpec;this.inputSpec=r;const output=super.apply(n,t);return this.inputSpec=o,output}return super.apply(e,t)}call(e,t){return Object(o.hf)((()=>{const mask=null==t?null:t.mask,n=null==t?null:t.training;let r=null==t?null:t.initialState;e=Hs(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const o=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==o)throw new aa(`RNN Layer has ${o} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const c={training:n},l=Cu(((e,t)=>{const n=this.cell.call([e].concat(t),c);return[n[0],n.slice(1)]}),e,r,this.goBackwards,mask,null,this.unroll,this.returnSequences),d=l[0],h=l[1],f=l[2];this.stateful&&this.resetStates(f,n);const output=this.returnSequences?h:d;return this.returnState?[output].concat(f):output}))}getInitialState(e){return Object(o.hf)((()=>{let t=o.tf(e.shape);return t=o.af(t,[1,2]),t=rs(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?cs(t,[1,e]):t)):this.cell.stateSize>1?[cs(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===$u.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=Oo(t.cell,n);return new e(Object.assign(t,{cell:r}))}}$u.className="RNN",o.Ke.registerClass($u);class Eu extends ao{}class Au extends Eu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ka(this.units,"units"),this.activation=qi(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=zs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=zs(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=zs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=tu(e.kernelRegularizer),this.recurrentRegularizer=tu(e.recurrentRegularizer),this.biasRegularizer=tu(e.biasRegularizer),this.kernelConstraint=Da(e.kernelConstraint),this.recurrentConstraint=Da(e.recurrentConstraint),this.biasConstraint=Da(e.biasConstraint),this.dropout=Qa([1,es([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Qa([1,es([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ks(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Object(o.hf)((()=>{if(2!==(e=e).length)throw new aa(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let c;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=zu({ones:()=>o.we(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=zu({ones:()=>o.we(n),rate:this.recurrentDropout,training:r}));const l=this.dropoutMask,d=this.recurrentDropoutMask;c=ds(null!=l?o.qe(e,l):e,this.kernel.read()),null!=this.bias&&(c=ms(c,this.bias.read())),null!=d&&(n=o.qe(n,d));let output=o.hd(c,ds(n,this.recurrentKernel.read()));return null!=this.activation&&(output=this.activation.apply(output)),[output,output]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Hi(this.activation),useBias:this.useBias,kernelInitializer:Ls(this.kernelInitializer),recurrentInitializer:Ls(this.recurrentInitializer),biasInitializer:Ls(this.biasInitializer),kernelRegularizer:Qi(this.kernelRegularizer),recurrentRegularizer:Qi(this.recurrentRegularizer),biasRegularizer:Qi(this.biasRegularizer),activityRegularizer:Qi(this.activityRegularizer),kernelConstraint:Ra(this.kernelConstraint),recurrentConstraint:Ra(this.recurrentConstraint),biasConstraint:Ra(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Au.className="SimpleRNNCell",o.Ke.registerClass(Au);class Ru extends $u{constructor(e){e.cell=new Au(e),super(e)}call(e,t){return Object(o.hf)((()=>{null!=this.cell.dropoutMask&&(o.Jd(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(o.Jd(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const mask=null==t?null:t.mask,n=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:mask,training:n,initialState:r})}))}static fromConfig(e,t){return new e(t)}}Ru.className="SimpleRNN",o.Ke.registerClass(Ru);class Fu extends Eu{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new aa("GRUCell does not support reset_after parameter set to true.");this.units=e.units,ka(this.units,"units"),this.activation=qi(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=qi(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=zs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=zs(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=zs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=tu(e.kernelRegularizer),this.recurrentRegularizer=tu(e.recurrentRegularizer),this.biasRegularizer=tu(e.biasRegularizer),this.kernelConstraint=Da(e.kernelConstraint),this.recurrentConstraint=Da(e.recurrentConstraint),this.biasConstraint=Da(e.biasConstraint),this.dropout=Qa([1,es([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Qa([1,es([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Ks(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Object(o.hf)((()=>{if(2!==(e=e).length)throw new aa(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=zu({ones:()=>o.we(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=zu({ones:()=>o.we(r),rate:this.recurrentDropout,training:n,count:3}));const c=this.dropoutMask,l=this.recurrentDropoutMask;let d,h,f;0<this.dropout&&this.dropout<1&&(e=o.qe(e,c[0]));let m=ds(e,this.kernel.read());this.useBias&&(m=ms(m,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=o.qe(r,l[0]));const y=this.recurrentKernel.read(),[x,O]=o.Ve(y,[2*this.units,this.units],y.rank-1),w=ds(r,x),[v,k,I]=o.Ve(m,3,m.rank-1),[N,j]=o.Ve(w,2,w.rank-1);d=this.recurrentActivation.apply(o.hd(v,N)),h=this.recurrentActivation.apply(o.hd(k,j));const S=ds(o.qe(h,r),O);f=this.activation.apply(o.hd(I,S));const T=o.hd(o.qe(d,r),o.qe(o.hd(1,o.re(d)),f));return[T,T]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Hi(this.activation),recurrentActivation:Hi(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ls(this.kernelInitializer),recurrentInitializer:Ls(this.recurrentInitializer),biasInitializer:Ls(this.biasInitializer),kernelRegularizer:Qi(this.kernelRegularizer),recurrentRegularizer:Qi(this.recurrentRegularizer),biasRegularizer:Qi(this.biasRegularizer),activityRegularizer:Qi(this.activityRegularizer),kernelConstraint:Ra(this.kernelConstraint),recurrentConstraint:Ra(this.recurrentConstraint),biasConstraint:Ra(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}Fu.className="GRUCell",o.Ke.registerClass(Fu);class Du extends $u{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Fu(e),super(e)}call(e,t){return Object(o.hf)((()=>{null!=this.cell.dropoutMask&&(o.Jd(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(o.Jd(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const mask=null==t?null:t.mask,n=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:mask,training:n,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Du.className="GRU",o.Ke.registerClass(Du);class _u extends Eu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ka(this.units,"units"),this.activation=qi(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=qi(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=zs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=zs(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=zs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=tu(e.kernelRegularizer),this.recurrentRegularizer=tu(e.recurrentRegularizer),this.biasRegularizer=tu(e.biasRegularizer),this.kernelConstraint=Da(e.kernelConstraint),this.recurrentConstraint=Da(e.recurrentConstraint),this.biasConstraint=Da(e.biasConstraint),this.dropout=Qa([1,es([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Qa([1,es([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Ks(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends Os{apply(t,r){const o=e.apply([n]),c=(new vs).apply([n]),l=e.apply([2*n]);return us(us(o,c),l)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Object(o.hf)((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new aa(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const c=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=zu({ones:()=>o.we(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=zu({ones:()=>o.we(r),rate:this.recurrentDropout,training:n,count:4}));const l=this.dropoutMask,d=this.recurrentDropoutMask;let i,h,f,m;0<this.dropout&&this.dropout<1&&(e=o.qe(e,l[0]));let y=ds(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=o.qe(r,d[0])),y=o.hd(y,ds(r,this.recurrentKernel.read())),this.useBias&&(y=ms(y,this.bias.read()));const[x,O,w,v]=o.Ve(y,4,y.rank-1);i=this.recurrentActivation.apply(x),h=this.recurrentActivation.apply(O),f=o.hd(o.qe(h,c),o.qe(i,this.activation.apply(w))),m=this.recurrentActivation.apply(v);const k=o.qe(m,this.activation.apply(f));return[k,k,f]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Hi(this.activation),recurrentActivation:Hi(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ls(this.kernelInitializer),recurrentInitializer:Ls(this.recurrentInitializer),biasInitializer:Ls(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Qi(this.kernelRegularizer),recurrentRegularizer:Qi(this.recurrentRegularizer),biasRegularizer:Qi(this.biasRegularizer),activityRegularizer:Qi(this.activityRegularizer),kernelConstraint:Ra(this.kernelConstraint),recurrentConstraint:Ra(this.recurrentConstraint),biasConstraint:Ra(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}_u.className="LSTMCell",o.Ke.registerClass(_u);class Mu extends $u{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new _u(e),super(e)}call(e,t){return Object(o.hf)((()=>{null!=this.cell.dropoutMask&&(o.Jd(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(o.Jd(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const mask=null==t?null:t.mask,n=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:mask,training:n,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Mu.className="LSTM",o.Ke.registerClass(Mu);class Lu extends Eu{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Object(o.hf)((()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const o=[];let c;for(let i=0;i<this.cells.length;++i){const l=this.cells[i];n=r[i],c=0===i?[e[0]].concat(n):[c[0]].concat(n),c=l.call(c,t),o.push(c.slice(1))}n=[];for(const e of o.slice().reverse())n.push(...e);return[c[0]].concat(n)}))}build(e){let t;Us(e)&&(e=e[0]),e=e,this.cells.forEach(((n,i)=>{Ha(`RNNCell_${i}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(Oo(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Js(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,o=e.splice(r);for(let i=0;i<n.weights.length;++i)t.push([n.weights[i],o[i]])}Zs(t)}}function zu(e){const{ones:t,rate:n,training:r=!1,count:c=1}=e,l=()=>bs(t(),n),d=()=>gs(l,t,r);if(!c||c<=1)return o.ae(d().clone());return Array(c).fill(void 0).map(d).map((e=>o.ae(e.clone())))}Lu.className="StackedRNNCells",o.Ke.registerClass(Lu);var Pu=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};class Bu extends $u{constructor(e){if(e.unroll)throw new sa("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new sa("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Qs({ndim:5})]}call(e,t){return o.hf((()=>{if(null!=this.cell.dropoutMask&&(o.Jd(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(o.Jd(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new aa("ConvRNN2D cell does not support constants");const mask=null==t?null:t.mask,n=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:mask,training:n,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return o.hf((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),c=[r[0],...r.slice(2)],l=o.tf(c);return Array.isArray(t)?Array(t.length).fill(l):[l]}))}resetStates(e,t=!1){o.hf((()=>{if(!this.stateful)throw new na("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),c=[r[0],...r.slice(2)];if(null==n[0])throw new aa("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>o.tf(c))):this.states_=[o.tf(c)];else if(null==e)o.Jd(this.states_),null!=this.keptStates&&(o.Jd(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>o.tf(c))):this.states_[0]=o.tf(c);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new aa(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):o.Jd(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=c;if(!o.of.arraysEqual(n.shape,r))throw new aa(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>o.ae(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:o,strides:c,dilationRate:l}=this.cell,d="channelsFirst"===t,h=e[d?3:2],f=e[d?4:3],m=cu(h,r[0],o,c[0],l[0]),y=cu(f,r[1],o,c[1],l[1]);return[...e.slice(0,2),...d?[n,m,y]:[m,y,n]]}}Bu.className="ConvRNN2D";class Wu extends _u{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:o,dataFormat:c,dilationRate:l}=e;super(Object.assign({},e,{units:t})),this.filters=t,ka(this.filters,"filters"),this.kernelSize=uu(n,2,"kernelSize"),this.kernelSize.forEach((e=>ka(e,"kernelSize"))),this.strides=uu(r||1,2,"strides"),this.strides.forEach((e=>ka(e,"strides"))),this.padding=o||"valid",Va(this.padding),this.dataFormat=c||"channelsLast",Wa(this.dataFormat),this.dilationRate=uu(l||1,2,"dilationRate"),this.dilationRate.forEach((e=>ka(e,"dilationRate")))}build(e){var t;e=Ks(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new aa(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],c=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",c,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const l=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",l,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends Os{apply(e,t){return is([n.apply([r]),o.ve([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return o.hf((()=>{if(3!==e.length)throw new aa(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],c=e[1],l=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=zu({ones:()=>o.we(r),rate:this.dropout,training:n,count:4}));const d=this.dropoutMask,h=(e,mask,t)=>mask&&mask[t]?o.qe(mask[t],e):e;let f=h(r,d,0),m=h(r,d,1),y=h(r,d,2),x=h(r,d,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=zu({ones:()=>o.we(c),rate:this.recurrentDropout,training:n,count:4}));const O=this.recurrentDropoutMask;let w=h(c,O,0),v=h(c,O,1),k=h(c,O,2),I=h(c,O,3);const[N,j,S,T]=o.Ve(this.kernel.read(),4,3),[C,$,E,A]=this.useBias?o.Ve(this.bias.read(),4):[null,null,null,null];f=this.inputConv(f,N,C,this.padding),m=this.inputConv(m,j,$,this.padding),y=this.inputConv(y,S,E,this.padding),x=this.inputConv(x,T,A,this.padding);const[R,F,D,_]=o.Ve(this.recurrentKernel.read(),4,3);w=this.recurrentConv(w,R),v=this.recurrentConv(v,F),k=this.recurrentConv(k,D),I=this.recurrentConv(I,_);const i=this.recurrentActivation.apply(o.hd(f,w)),M=this.recurrentActivation.apply(o.hd(m,v)),L=o.hd(o.qe(M,l),o.qe(i,this.activation.apply(o.hd(y,k)))),z=o.qe(this.recurrentActivation.apply(o.hd(x,I)),this.activation.apply(L));return[z,z,L]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=Pu(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,b,n){const r=o.Dd(e,t,this.strides,n||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return b?ms(r,b,this.dataFormat):r}recurrentConv(e,t){return o.Dd(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Wu.className="ConvLSTM2DCell",o.Ke.registerClass(Wu);class Vu extends Bu{constructor(e){const t=new Wu(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}Vu.className="ConvLSTM2D",o.Ke.registerClass(Vu);class Uu extends ao{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(input){if(null==this.noiseShape)return this.noiseShape;const e=input.shape,t=[];for(let i=0;i<this.noiseShape.length;++i)t.push(null==this.noiseShape[i]?e[i]:this.noiseShape[i]);return t}call(e,t){return Object(o.hf)((()=>{this.invokeCallHook(e,t);const input=Hs(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,n=this.getNoiseShape(input);return gs((()=>bs(input,this.rate,n,this.seed)),(()=>input),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Uu.className="Dropout",o.Ke.registerClass(Uu);class Gu extends Uu{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(input){const e=input.shape;return[e[0],1,e[2]]}}Gu.className="SpatialDropout1D",o.Ke.registerClass(Gu);class Hu extends ao{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,ka(this.units,"units"),this.activation=qi(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=zs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=zs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Da(e.kernelConstraint),this.biasConstraint=Da(e.biasConstraint),this.kernelRegularizer=tu(e.kernelRegularizer),this.biasRegularizer=tu(e.biasRegularizer),this.activityRegularizer=tu(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Ks(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Ks(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Object(o.hf)((()=>{this.invokeCallHook(e,t);const input=Hs(e),n=Na(this.activation.getClassName());let output;return null!=n?output=ds(input,this.kernel.read(),n,this.bias?this.bias.read():null):(output=ds(input,this.kernel.read()),null!=this.bias&&(output=ms(output,this.bias.read())),null!=this.activation&&(output=this.activation.apply(output))),output}))}getConfig(){const e={units:this.units,activation:Hi(this.activation),useBias:this.useBias,kernelInitializer:Ls(this.kernelInitializer),biasInitializer:Ls(this.biasInitializer),kernelRegularizer:Qi(this.kernelRegularizer),biasRegularizer:Qi(this.biasRegularizer),activityRegularizer:Qi(this.activityRegularizer),kernelConstraint:Ra(this.kernelConstraint),biasConstraint:Ra(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Hu.className="Dense",o.Ke.registerClass(Hu);class Ku extends ao{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Ks(e);for(const t of e.slice(1))if(null==t)throw new aa(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Ja(e,1)]}call(e,t){return Object(o.hf)((()=>{this.invokeCallHook(e,t);let input=Hs(e);if("channelsFirst"===this.dataFormat&&input.rank>1){const e=[0];for(let i=2;i<input.rank;++i)e.push(i);e.push(1),input=input.transpose(e)}return function(e){if(e.rank<=1)throw new aa(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Ja(e.shape,1)];return e.reshape(t)}(input)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Ku.className="Flatten",o.Ke.registerClass(Ku);class qu extends ao{constructor(e){super(e),this.supportsMasking=!0,this.activation=qi(e.activation)}call(e,t){return Object(o.hf)((()=>{this.invokeCallHook(e,t);const input=Hs(e);return this.activation.apply(input)}))}getConfig(){const e={activation:Hi(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}qu.className="Activation",o.Ke.registerClass(qu);class Xu extends ao{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Object(o.hf)((()=>{return e=Hs(e),t=e,n=this.n,Object(o.hf)((()=>{if(2!==t.shape.length)throw new aa(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return cs(rs(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Xu.className="RepeatVector",o.Ke.registerClass(Xu);class Yu extends ao{constructor(e){super(e),this.targetShape=e.targetShape;for(let i=0;i<this.targetShape.length;++i)this.isUnknown(this.targetShape[i])&&(this.targetShape[i]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let o=1,c=null;for(let i=0;i<r.length;++i){const e=r[i];if(this.isUnknown(e)){if(null!==c)throw new aa("Can only specifiy one unknown dimension.");c=i}else o*=e}const l=Ja(e);if(null!==c){if(0===o||l%o!=0)throw new aa(n);r[c]=l/o}else if(l!==o)throw new aa(n);return r}computeOutputShape(e){let t=!1;for(let i=0;i<e.length;++i)if(this.isUnknown(e[i])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Object(o.hf)((()=>{this.invokeCallHook(e,t);const input=Hs(e),n=input.shape,r=n.slice(0,1).concat(this.fixUnknownDimension(n.slice(1),this.targetShape));return input.reshape(r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Yu.className="Reshape",o.Ke.registerClass(Yu);class Ju extends ao{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=ts(1,e.dims.length+1);if(!o.of.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Qs({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Ks(e)).slice();return this.dims.forEach(((n,i)=>{t[i+1]=e[n]})),t}call(e,t){return Object(o.kf)(Hs(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Ju.className="Permute",o.Ke.registerClass(Ju);class Zu extends ao{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,mask){const input=Hs(e);return Object(o.jd)(Object(o.te)(input,this.maskValue),-1)}call(e,t){return Object(o.hf)((()=>{this.invokeCallHook(e,t);const input=Hs(e),n=Object(o.jd)(Object(o.te)(input,this.maskValue),-1,!0);return input.mul(n.asType(input.dtype))}))}}Zu.className="Masking",o.Ke.registerClass(Zu);class Qu extends ao{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(da(e.inputLength))}this.inputDim=e.inputDim,ka(this.inputDim,"inputDim"),this.outputDim=e.outputDim,ka(this.outputDim,"outputDim"),this.embeddingsInitializer=zs(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=tu(e.embeddingsRegularizer),this.activityRegularizer=tu(e.activityRegularizer),this.embeddingsConstraint=Da(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,mask){return Object(o.hf)((()=>this.maskZero?(e=Hs(e),Object(o.te)(e,Object(o.uf)(e))):null))}computeOutputShape(e){if(e=Ks(e),null==this.inputLength)return[...e,this.outputDim];const t=da(this.inputLength);if(t.length!==e.length-1)throw new aa(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let i=0;for(let n=0;n<t.length;++n){const r=t[n],o=e[n+1];if(null!=r&&null!=o&&r!==o)throw new aa(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==r&&(t[i]=o),i++}}return[e[0],...t,this.outputDim]}call(e,t){return Object(o.hf)((()=>{this.invokeCallHook(e,t);let input=Hs(e);"int32"!==input.dtype&&(input=ns(input,"int32"));return hs(this.embeddings.read(),input.as1D()).reshape(Ks(this.computeOutputShape(input.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ls(this.embeddingsInitializer),embeddingsRegularizer:Qi(this.embeddingsRegularizer),activityRegularizer:Qi(this.activityRegularizer),embeddingsConstraint:Ra(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Qu.className="Embedding",o.Ke.registerClass(Qu);class ec extends ao{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new sa}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const i=e[e.length-t.length+r],o=t[r];if(null==i||null==o||i<0||o<0)n.push(null);else if(1===i)n.push(o);else if(1===o)n.push(i);else{if(i!==o)throw new aa("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(i)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Ks(e)]),(e=e).length<2)throw new aa(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=xa(t),t.length>1)throw new aa(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let i=1;i<e.length;++i){const t=null==e[i]?null:e[i].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===xa(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Object(o.hf)((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((input=>input.rank));if(-1===n.indexOf(null)){const r=es(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=rs(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,c=e[0],l=e.slice(1).concat([c]);let d=r.reshape([c].concat(Ja(e.slice(1))));d=o.kf(d,[1,0]),d=d.reshape(l),t.push(d),n=!0}else if(e>1){const c=ts(1,e).concat([0]);t.push(o.kf(r,c)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const c=r.rank;if(n)if(null==c){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=o.kf(r.reshape([-1,t]),[1,0]).reshape(n)}else if(c>1){const e=[c-1].concat(ts(0,c-1));r=o.kf(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let i=1;i<e.length;++i){const n=null==e[i]?null:e[i].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=xa(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,mask){return o.hf((()=>{if(null==mask)return null;if(!Array.isArray(mask))throw new aa("`mask` should be an Array");if(!Array.isArray(e))throw new aa("`inputs` should be an Array");if(mask.length!==e.length)throw new aa(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${mask.length})`);if(mask.every((e=>null==e)))return null;let output=(mask=mask.map((e=>null==e?e:o.Qd(e,0))))[0];for(let i=1;i<mask.length-1;++i)output=o.ge(output,mask[i]);return output}))}}class tc extends ec{constructor(e){super(e)}mergeFunction(e){return Object(o.hf)((()=>{let output=e[0].clone();for(let i=1;i<e.length;++i)output=o.hd(output,e[i]);return output}))}}tc.className="Add",o.Ke.registerClass(tc);class nc extends ec{constructor(e){super(e)}mergeFunction(e){return Object(o.hf)((()=>{let output=e[0].clone();for(let i=1;i<e.length;++i)output=o.qe(output,e[i]);return output}))}}nc.className="Multiply",o.Ke.registerClass(nc);class rc extends ec{constructor(e){super(e)}mergeFunction(e){return Object(o.hf)((()=>{let output=e[0].clone();for(let i=1;i<e.length;++i)output=o.hd(output,e[i]);return o.qe(1/e.length,output)}))}}rc.className="Average",o.Ke.registerClass(rc);class ac extends ec{constructor(e){super(e)}mergeFunction(e){return Object(o.hf)((()=>{let output=e[0];for(let i=1;i<e.length;++i)output=o.ke(output,e[i]);return output}))}}ac.className="Maximum",o.Ke.registerClass(ac);class sc extends ec{constructor(e){super(e)}mergeFunction(e){return Object(o.hf)((()=>{let output=e[0];for(let i=1;i<e.length;++i)output=o.oe(output,e[i]);return output}))}}sc.className="Minimum",o.Ke.registerClass(sc);class oc extends ec{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new aa("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let i=0;i<e.length;++i){const t=e[i].slice();t.splice(this.axis,1);let r=!1;for(const e of n)if(o.of.arraysEqual(e,t)){r=!0;break}r||n.push(t)}if(n.length>1)throw new aa("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Object(o.hf)((()=>is(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new aa("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,mask){if(null==mask)return null;if(!Array.isArray(mask))throw new aa("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new aa("`inputs` should be an array for Concatenate");if(mask.length!==e.length)throw new aa(`Mismatch in the length of mask (${mask.length}) and the legnth of inputs (${e.length})`);return o.hf((()=>{let t=!0;if(mask.forEach((e=>{null==e||(t=!1)})),t)return null;const n=[];for(let i=0;i<e.length;++i)null==mask[i]?n.push(o.we(e[i]).asType("bool")):mask[i].rank<e[i].rank?n.push(o.Qd(mask[i],-1)):n.push(mask[i]);const r=o.xd(n,this.axis);return o.id(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function ic(e,t){for(;e<0;)e+=t;return e}oc.className="Concatenate",o.Ke.registerClass(oc);class uc extends ec{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){o.of.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new sa("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new aa(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new aa(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,i)=>ic(t,e[i].shape.length))):[ic(this.axes,n.shape.length),ic(this.axes,r.shape.length)],this.normalize&&(n=wo(n,t[0]),r=wo(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new sa("batchDot is not implemented for tensors of 4D or higher rank yet");if(o.of.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),o.of.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new sa("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,c=t.shape.length;null==n&&(n=[r-1,c-2]);const l=n;return o.hf((()=>{let n,o;if(r>c){n=r-c;const e=[];for(let i=0;i<n;++i)e.push(1);t=t.reshape(t.shape.concat(e))}else if(c>r){n=c-r;const t=[];for(let i=0;i<n;++i)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)o=l[0]===l[1]?e.mul(t).sum(l[0]):e.transpose([1,0]).mul(t).sum(l[1]);else{const n=l[0]!==e.shape.length-1,r=l[1]===t.shape.length-1;o=e.matMul(t,n,r)}if(n>0){let e;e=r>c?r+c-3:r-1;const t=[];for(let i=e;i<e+n;++i)t.push(i);o=o.squeeze(t)}return 1===o.shape.length&&(o=o.expandDims(1)),o}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[ic(this.axes,e.length),ic(this.axes,t.length)],n}computeOutputShape(e){o.of.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new sa("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const c=t.concat(n);return 1===c.length&&c.push(1),c}computeMask(e,mask){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}uc.className="Dot",o.Ke.registerClass(uc);class cc extends ao{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Object(o.hf)((()=>{this.invokeCallHook(e,t);const input=Hs(e);return gs((()=>ls(input.shape,0,this.stddev).add(input)),(()=>input),t.training||!1)}))}}cc.className="GaussianNoise",o.Ke.registerClass(cc);class lc extends ao{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Object(o.hf)((()=>{this.invokeCallHook(e,t);const input=Hs(e);if(this.rate>0&&this.rate<1){return gs((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return input.mul(ls(input.shape,1,e))}),(()=>input),t.training||!1)}return input}))}}lc.className="GaussianDropout",o.Ke.registerClass(lc);class dc extends ao{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Hs(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Object(o.hf)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return gs((()=>{const input=Hs(e),t=-1.7580993408473766;let r=Object(o.Xd)(Object(o.Be)(n),this.rate);r=ns(r,"float32");const a=((1-this.rate)*(1+this.rate*t**2))**-.5,b=-a*t*this.rate;return input.mul(r).add(r.add(-1).mul(t)).mul(a).add(b)}),(()=>Hs(e)),t.training||!1)}return e}))}}function hc(e,t,n,r,c,l=.001){let d;if(2===e.rank)d=o.pd(e,t,n,r,c,l);else if(3===e.rank)d=o.qd(e,t,n,r,c,l);else{if(4!==e.rank)throw new sa(`batchNormalization is not implemented for array of rank ${e.rank} yet`);d=o.rd(e,t,n,r,c,l)}return d}function pc(e,t,n,r,c=.001){return o.of.arraysEqual(r.slice().sort(),ts(0,e.rank-1))?function(e,t,n,r,c=.001){return Object(o.hf)((()=>{const l=o.pe(e,r),d=l.mean,h=l.variance;return[hc(e,d,h,n,t,c),d,h]}))}(e,t,n,r,c):function(e,t,n,r,c=.001){return Object(o.hf)((()=>{const l=o.pe(e,r),d=l.mean,h=l.variance,f=[];for(const t of ts(0,e.rank))-1!==r.indexOf(t)?f.push(1):f.push(e.shape[t]);const m=d.reshape(f),y=h.reshape(f),x=null==t?null:t.reshape(f),O=null==n?null:n.reshape(f);return[hc(e,m,y,O,x,c),d,h]}))}(e,t,n,r,c)}dc.className="AlphaDropout",o.Ke.registerClass(dc);class fc extends ao{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=zs(e.betaInitializer||"zeros"),this.gammaInitializer=zs(e.gammaInitializer||"ones"),this.movingMeanInitializer=zs(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=zs(e.movingVarianceInitializer||"ones"),this.betaConstraint=Da(e.betaConstraint),this.gammaConstraint=Da(e.gammaConstraint),this.betaRegularizer=tu(e.betaRegularizer),this.gammaRegularizer=tu(e.gammaRegularizer)}build(e){e=Ks(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new aa(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Qs({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Object(o.hf)((()=>{const n=null!=t.training&&t.training,input=Hs(e),r=input.shape,c=r.length,l=ts(0,c),d=this.axis>=0?this.axis:this.axis+c;l.splice(d,1);const h=ia(1,c);h[d]=r[d];const f=l.slice();f.sort();const m=!o.of.arraysEqual(f,ts(0,c).slice(0,c-1));if(!n)return(()=>{if(m){const e=this.movingMean.read().reshape(h),t=this.movingVariance.read().reshape(h),n=this.center?this.beta.read().reshape(h):null,r=this.scale?this.gamma.read().reshape(h):null;return hc(input,e,t,n,r,this.epsilon)}return hc(input,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[y,x,O]=pc(input,this.gamma.read(),this.beta.read(),l,this.epsilon),w=(e,t,n)=>{o.hf((()=>{const r=1-n,o=e.read(),c=o.sub(t).mul(r);e.write(o.sub(c))}))};return(()=>{w(this.movingMean,x,this.momentum),w(this.movingVariance,O,this.momentum)})(),y}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ls(this.betaInitializer),gammaInitializer:Ls(this.gammaInitializer),movingMeanInitializer:Ls(this.movingMeanInitializer),movingVarianceInitializer:Ls(this.movingVarianceInitializer),betaRegularizer:Qi(this.betaRegularizer),gammaRegularizer:Qi(this.gammaRegularizer),betaConstraint:Ra(this.betaConstraint),gammaConstraint:Ra(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}fc.className="BatchNormalization",o.Ke.registerClass(fc);class mc extends ao{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=zs(e.betaInitializer||"zeros"),this.gammaInitializer=zs(e.gammaInitializer||"ones"),this.betaRegularizer=tu(e.betaRegularizer),this.gammaRegularizer=tu(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Ks(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let i=0;i<this.axis.length;++i)this.axis[i]<0&&(this.axis[i]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==xa(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,t){const input=Hs(e),n=input.shape,r=n.length;return Object(o.hf)((()=>{let{mean:e,variance:t}=Object(o.pe)(input,this.axis,!0);const c=ia(1,r);for(const e of this.axis)c[e]=n[e];const l=e=>null!=e&&e.shape.length!==r&&this.axis!==[r-1]?e.reshape(c):e;let d=l(this.gamma.read()),h=l(this.beta.read());const f=[],m=[];for(let i=0;i<r;++i)-1!==this.axis.indexOf(i)?(f.push(n[i]),m.push(1)):(f.push(1),m.push(n[i]));return e=e.tile(f),t=t.tile(f),d=d.tile(m),h=h.tile(m),hc(input,e,t,h,d,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ls(this.betaInitializer),gammaInitializer:Ls(this.gammaInitializer),betaRegularizer:Qi(this.betaRegularizer),gammaRegularizer:Qi(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}mc.className="LayerNormalization",o.Ke.registerClass(mc);class bc extends ao{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new aa(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new aa(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new aa(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Qs({ndim:4})]}computeOutputShape(e){let t,n;return e=Ks(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Object(o.hf)((()=>{return t=Hs(e),n=this.padding,r=this.dataFormat,Object(o.hf)((()=>{if(4!==t.rank)throw new aa(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new aa("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new aa(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let pattern;return pattern="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],o.xe(t,pattern)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function gc(e,t,n,r,c,l){return Object(o.hf)((()=>{let d;Wa(c),Ua(l),Va(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==c&&(c="channelsLast"),null==l&&(l="max"),e=du(e,c);const h="same"===r?"same":"valid";return d="max"===l?o.ie(e,t,n,h):o.ld(e,t,n,h),"channelsFirst"===c&&(d=o.kf(d,[0,3,1,2])),d}))}function yc(e,t,n,r,c,l){return Object(o.hf)((()=>{let d;Wa(c),Ua(l),Va(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==c&&(c="channelsLast"),null==l&&(l="max"),e=hu(e,c);const h="same"===r?"same":"valid";return d="max"===l?o.je(e,t,n,h):o.md(e,t,n,h),"channelsFirst"===c&&(d=o.kf(d,[0,4,1,2,3])),d}))}bc.className="ZeroPadding2D",o.Ke.registerClass(bc);class xc extends ao{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new aa(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(ka(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new aa(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}ka(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Va(this.padding),this.inputSpec=[new Qs({ndim:3})]}computeOutputShape(e){const t=cu((e=Ks(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Object(o.hf)((()=>{this.invokeCallHook(e,t),e=rs(Hs(e),2);const output=this.poolingFunction(Hs(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return o.Xe(output,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Oc extends xc{constructor(e){super(e)}poolingFunction(e,t,n,r,o){return Wa(o),Va(r),gc(e,t,n,r,o,"max")}}Oc.className="MaxPooling1D",o.Ke.registerClass(Oc);class wc extends xc{constructor(e){super(e)}poolingFunction(e,t,n,r,o){return Wa(o),Va(r),gc(e,t,n,r,o,"avg")}}wc.className="AveragePooling1D",o.Ke.registerClass(wc);class vc extends ao{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new aa(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];ka(this.poolSize,"poolSize"),ka(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Wa(this.dataFormat),Va(this.padding),this.inputSpec=[new Qs({ndim:4})]}computeOutputShape(e){e=Ks(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=cu(t,this.poolSize[0],this.padding,this.strides[0]),n=cu(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Object(o.hf)((()=>(this.invokeCallHook(e,t),this.poolingFunction(Hs(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class kc extends vc{constructor(e){super(e)}poolingFunction(e,t,n,r,o){return Wa(o),Va(r),gc(e,t,n,r,o,"max")}}kc.className="MaxPooling2D",o.Ke.registerClass(kc);class Ic extends vc{constructor(e){super(e)}poolingFunction(e,t,n,r,o){return Wa(o),Va(r),gc(e,t,n,r,o,"avg")}}Ic.className="AveragePooling2D",o.Ke.registerClass(Ic);class Nc extends ao{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new aa(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];ka(this.poolSize,"poolSize"),ka(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Wa(this.dataFormat),Va(this.padding),this.inputSpec=[new Qs({ndim:5})]}computeOutputShape(e){e=Ks(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=cu(t,this.poolSize[0],this.padding,this.strides[0]),n=cu(n,this.poolSize[1],this.padding,this.strides[1]),r=cu(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Object(o.hf)((()=>(this.invokeCallHook(e,t),this.poolingFunction(Hs(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class jc extends Nc{constructor(e){super(e)}poolingFunction(e,t,n,r,o){return Wa(o),Va(r),yc(e,t,n,r,o,"max")}}jc.className="MaxPooling3D",o.Ke.registerClass(jc);class Sc extends Nc{constructor(e){super(e)}poolingFunction(e,t,n,r,o){return Wa(o),Va(r),yc(e,t,n,r,o,"avg")}}Sc.className="AveragePooling3D",o.Ke.registerClass(Sc);class Tc extends ao{constructor(e){super(e),this.inputSpec=[new Qs({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new sa}}class Cc extends Tc{constructor(e){super(e||{})}call(e,t){return Object(o.hf)((()=>{const input=Hs(e);return o.le(input,1)}))}}Cc.className="GlobalAveragePooling1D",o.Ke.registerClass(Cc);class $c extends Tc{constructor(e){super(e||{})}call(e,t){return Object(o.hf)((()=>{const input=Hs(e);return o.he(input,1)}))}}$c.className="GlobalMaxPooling1D",o.Ke.registerClass($c);class Ec extends ao{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Wa(this.dataFormat),this.inputSpec=[new Qs({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new sa}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Ac extends Ec{call(e,t){return Object(o.hf)((()=>{const input=Hs(e);return"channelsLast"===this.dataFormat?o.le(input,[1,2]):o.le(input,[2,3])}))}}Ac.className="GlobalAveragePooling2D",o.Ke.registerClass(Ac);class Rc extends Ec{call(e,t){return Object(o.hf)((()=>{const input=Hs(e);return"channelsLast"===this.dataFormat?o.he(input,[1,2]):o.he(input,[2,3])}))}}Rc.className="GlobalMaxPooling2D",o.Ke.registerClass(Rc);class Fc extends ao{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=Oo(t.layer,n);delete t.layer;const o={layer:r};return Object.assign(o,t),new e(o)}}class Dc extends Fc{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Ks(e)).length<3)throw new aa(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Ks(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Object(o.hf)((()=>Cu(((e,n)=>[Hs(this.layer.call(e,t)),[]]),e=Hs(e),[],!1,null,null,!1,!0)[1]))}}Dc.className="TimeDistributed",o.Ke.registerClass(Dc);class _c extends Fc{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Oo(n),t.goBackwards=!0!==t.goBackwards;const r={};var o;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Oo(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,o=this.mergeMode,wa(Pa,"BidirectionalMergeMode",o),e.weights)throw new sa("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,o=this.forwardLayer.computeOutputShape(e);return Array.isArray(o)&&Array.isArray(o[0])||(o=[o]),o=o,this.returnState?(r=o.slice(1),t=o[0]):t=o[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):la(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const o=Tu(e,n,r,this.numConstants);if(e=o.inputs,n=o.initialState,r=o.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const c=[],l=[];if(null!=n){const e=n.length;if(e%2>0)throw new aa("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,c.push(...n);const r=n.map((e=>new Qs({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),l.push(...r)}if(null!=r)throw new sa("Support for constants in Bidirectional layers is not implemented yet.");const d=c[0]instanceof eo;for(const e of c)if(e instanceof eo!==d)throw new aa("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(d){const n=[e].concat(c),r=this.inputSpec.concat(l),o=this.inputSpec;this.inputSpec=r;const output=super.apply(n,t);return this.inputSpec=o,output}return super.apply(e,t)}call(e,t){return Object(o.hf)((()=>{const n=t.initialState;let r,c,l,output;if(null==n)r=this.forwardLayer.call(e,t),c=this.backwardLayer.call(e,t);else{const o=n.slice(0,n.length/2),l=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:o})),c=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}return this.returnState&&(Array.isArray(r)&&(l=r.slice(1).concat(c.slice(1))),r=r[0],c=c[0]),this.returnSequences&&(c=o.Ge(c,1)),"concat"===this.mergeMode?output=is([r,c]):"sum"===this.mergeMode?output=o.hd(r,c):"ave"===this.mergeMode?output=o.qe(.5,o.hd(r,c)):"mul"===this.mergeMode?output=o.qe(r,c):null==this.mergeMode&&(output=[r,c]),this.returnState?null==this.mergeMode?output.concat(l):[output].concat(l):output}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ha(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Ha(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,mask){let t;if(Array.isArray(mask)&&(mask=mask[0]),t=this.returnSequences?null==this.mergeMode?[mask,mask]:mask:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(t)?t.concat(e).concat(e):[t].concat(e).concat(e)}return t}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Oo(t.layer);if(delete t.layer,null!=t.numConstants)throw new sa("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}_c.className="Bidirectional",o.Ke.registerClass(_c);var Mc=n(1365),Lc=n(1191);class zc{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return Object(Lc.e)(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return Object(Lc.e)(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Object(Mc.f)(this.node.rawAttrs,e,t);if(null!=n.s)return Object(Mc.i)(this.node.rawAttrs,e,t);if(null!=n.b)return Object(Mc.c)(this.node.rawAttrs,e,t);if(null!=n.shape)return Object(Mc.k)(this.node.rawAttrs,e,t);if(null!=n.type)return Object(Mc.e)(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Object(Mc.g)(this.node.rawAttrs,e,t);if(null!=n.list.s)return Object(Mc.h)(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Object(Mc.j)(this.node.rawAttrs,e,t);if(null!=n.list.b)return Object(Mc.b)(this.node.rawAttrs,e,t);if(null!=n.list.type)return Object(Mc.d)(this.node.rawAttrs,e,t)}return t}}var Pc=n(1252),Bc=n(1366);var Wc=n(1210),Vc=n(1274),Uc=n(1273);function Gc(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){o.of.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let i=0;i<e.length;i++){const r=e[i],c=t[i];o.of.assert(r<0||c<0||r===c,(()=>n+` Shapes ${e} and ${t} must match`))}}}function Hc(e){return"number"!=typeof e&&!e.some((e=>e<0))}function Kc(e,t,n){let r=qc(e,n);const o=!Hc(r);if(o&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(o&&t.forEach((e=>{r=qc(e.shape,r)})),!Hc(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function qc(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let i=0;i<e.length;++i){const r=e[i],o=t[i];if(r>=0&&o>=0&&r!==o)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[i]=r>=0?r:o}return n}class Xc{constructor(e,t,n,r,c,l,d){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=c,this.dynamicSize=l,this.clearAfterRead=d,this.tensors=[],this.closed_=!1,this.idTensor=Object(o.He)(0),Object(o.ae)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),Gc(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Object(o.ae)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((i,e)=>this.write(i,t[e])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let i=0;i<this.size();i++)e.push(i)}if(0===e.length)return Object(o.df)([],[0].concat(this.elementShape));const n=this.readMany(e);return Gc(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Object(o.Ye)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Object(o.df)([],[0].concat(this.elementShape));const t=[];for(let i=0;i<this.size();i++)t.push(i);const n=this.readMany(t);return Gc(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Object(o.xd)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Object(o.mf)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const c=0===n?0:t.size/n,l=[];Object(o.hf)((()=>{t=Object(o.Fe)(t,[1,n,c]);for(let i=0;i<e.length;++i){const n=[0,0===i?0:r[i-1],0],d=[1,e[i],c];l[i]=Object(o.Fe)(Object(o.Ne)(t,n,d),this.elementShape)}return l}));const d=[];for(let i=0;i<e.length;i++)d[i]=i;this.writeMany(d,l)}}class Yc{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);Gc(t,e.shape,"TensorList shape mismatch: "),Object(o.ae)(e)})),this.idTensor=Object(o.He)(0),this.maxNumElements=r,Object(o.ae)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Yc([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Gc(e,this.elementShape,"TensorList shape mismatch: ");const r=Kc(this.elementShape,this.tensors,e);return Object(o.hf)((()=>{const e=this.tensors.map((e=>Object(o.Fe)(e,r)));return Object(o.Ye)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=Kc(this.elementShape,this.tensors,e),r=this.tensors.pop();return Gc(r.shape,e,"TensorList shape mismatch: "),Object(o.Fe)(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Gc(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Object(o.ae)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);Gc(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=Kc(this.elementShape,this.tensors,t);return Object(o.Fe)(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Gc(this.elementShape,t.shape,"TensorList shape mismatch: "),Object(o.ae)(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Gc(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=Kc(this.elementShape,this.tensors,n);return 0===e.length?Object(o.df)([],[0].concat(r)):Object(o.hf)((()=>{const t=e.map((i=>Object(o.Fe)(this.tensors[i],r)));return Object(o.Ye)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Gc(this.elementShape,t,"TensorList shape mismatch: ");const n=Kc(this.elementShape,this.tensors,t);return 0===this.size()?Object(o.df)([],[0].concat(n)):Object(o.hf)((()=>{const e=this.tensors.map((e=>Object(o.Fe)(e,n)));return Object(o.xd)(e,0)}))}}const Jc=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=Object(Lc.d)("thenBranch",e,t,n),o=Object(Lc.d)("elseBranch",e,t,n),c=Object(Lc.d)("cond",e,t,n),l=Object(Lc.d)("args",e,t,n);return(await c.data())[0]?n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap):n.functionMap[o].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Object(Lc.d)("body",e,t,n),o=Object(Lc.d)("cond",e,t,n),c=Object(Lc.d)("args",e,t,n),l=await n.functionMap[o].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap),d=c.map((e=>e.id));let h=await l[0].data();l.forEach((e=>{e.kept||-1!==d.indexOf(e.id)||e.dispose()}));let f=c;for(;h[0];){const e=f;f=await n.functionMap[r].executeFunctionAsync(f,n.tensorArrayMap,n.tensorListMap);const t=f.map((e=>e.id));e.forEach((e=>{e.kept||-1!==d.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const c=await n.functionMap[o].executeFunctionAsync(f,n.tensorArrayMap,n.tensorListMap);h=await c[0].data(),c.forEach((e=>{e.kept||-1!==d.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return f}case"LoopCond":{const r=Object(Lc.d)("pred",e,t,n);return[Object(Lc.a)(r)]}case"Switch":{const r=Object(Lc.d)("pred",e,t,n);let data=Object(Lc.d)("data",e,t,n);return data.kept||(data=Object(Lc.a)(data)),(await r.data())[0]?[void 0,data]:[data,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==Object(Lc.e)(e,t,n)));if(r){const data=Object(Lc.e)(r,t,n);return[Object(Lc.a)(data)]}return}case"Enter":{const r=Object(Lc.d)("frameName",e,t,n),data=Object(Lc.d)("tensor",e,t,n);return n.enterFrame(r),[Object(Lc.a)(data)]}case"Exit":{const data=Object(Lc.d)("tensor",e,t,n);return n.exitFrame(),[Object(Lc.a)(data)]}case"NextIteration":{const data=Object(Lc.d)("tensor",e,t,n);return n.nextIteration(),[Object(Lc.a)(data)]}case"TensorArrayV3":{const r=Object(Lc.d)("size",e,t,n),c=Object(Lc.d)("dtype",e,t,n),l=Object(Lc.d)("elementShape",e,t,n),d=Object(Lc.d)("dynamicSize",e,t,n),h=Object(Lc.d)("clearAfterRead",e,t,n),f=Object(Lc.d)("identicalElementShapes",e,t,n),m=Object(Lc.d)("name",e,t,n),y=new Xc(m,c,r,l,f,d,h);return n.addTensorArray(y),[y.idTensor,Object(o.He)(1)]}case"TensorArrayWriteV3":{const r=Object(Lc.d)("tensorArrayId",e,t,n),o=Object(Lc.d)("index",e,t,n),c=Object(Lc.d)("tensor",e,t,n),l=n.getTensorArray(r.id);return l.write(o,c),[l.idTensor]}case"TensorArrayReadV3":{const r=Object(Lc.d)("tensorArrayId",e,t,n),o=Object(Lc.d)("index",e,t,n);return[n.getTensorArray(r.id).read(o)]}case"TensorArrayGatherV3":{const r=Object(Lc.d)("tensorArrayId",e,t,n),o=Object(Lc.d)("indices",e,t,n),c=Object(Lc.d)("dtype",e,t,n);return[n.getTensorArray(r.id).gather(o,c)]}case"TensorArrayScatterV3":{const r=Object(Lc.d)("tensorArrayId",e,t,n),o=Object(Lc.d)("indices",e,t,n),c=Object(Lc.d)("tensor",e,t,n),l=n.getTensorArray(r.id);return l.scatter(o,c),[l.idTensor]}case"TensorArrayConcatV3":{const r=Object(Lc.d)("tensorArrayId",e,t,n),o=n.getTensorArray(r.id),c=Object(Lc.d)("dtype",e,t,n);return[o.concat(c)]}case"TensorArraySplitV3":{const r=Object(Lc.d)("tensorArrayId",e,t,n),o=Object(Lc.d)("tensor",e,t,n),c=Object(Lc.d)("lengths",e,t,n),l=n.getTensorArray(r.id);return l.split(c,o),[l.idTensor]}case"TensorArraySizeV3":{const r=Object(Lc.d)("tensorArrayId",e,t,n),c=n.getTensorArray(r.id);return[Object(o.He)(c.size(),"int32")]}case"TensorArrayCloseV3":{const r=Object(Lc.d)("tensorArrayId",e,t,n),o=n.getTensorArray(r.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{const r=Object(Lc.d)("tensorListId",e,t,n),o=Object(Lc.d)("index",e,t,n),c=Object(Lc.d)("tensor",e,t,n),l=n.getTensorList(r.id);return l.setItem(o,c),[l.idTensor]}case"TensorListGetItem":{const r=Object(Lc.d)("tensorListId",e,t,n),o=Object(Lc.d)("index",e,t,n),c=Object(Lc.d)("elementShape",e,t,n),l=Object(Lc.d)("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(o,c,l)]}case"TensorListScatterV2":case"TensorListScatter":{const r=Object(Lc.d)("indices",e,t,n),c=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const c=Math.max(...t);if(null!=r&&-1!==r&&c>=r)throw new Error(`Max index must be < array size (${c}  vs. ${r})`);const l=new Yc([],n,e.dtype,r),d=Object(o.mf)(e,0);return t.forEach(((e,t)=>{l.setItem(e,d[t])})),l}(Object(Lc.d)("tensor",e,t,n),r,Object(Lc.d)("elementShape",e,t,n),Object(Lc.d)("numElements",e,t,n));return n.addTensorList(c),[c.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=Object(Lc.d)("elementShape",e,t,n),o=Object(Lc.d)("elementDType",e,t,n);let c;c="TensorListReserve"===e.op?"numElements":"maxNumElements";const l=function(e,t,n){return new Yc([],e,t,n)}(r,o,Object(Lc.d)(c,e,t,n));return n.addTensorList(l),[l.idTensor]}case"TensorListGather":{const r=Object(Lc.d)("tensorListId",e,t,n),o=Object(Lc.d)("indices",e,t,n),c=Object(Lc.d)("elementShape",e,t,n),l=Object(Lc.d)("elementDType",e,t,n);return[n.getTensorList(r.id).gather(o,l,c)]}case"TensorListStack":{const r=Object(Lc.d)("tensorListId",e,t,n),o=Object(Lc.d)("elementShape",e,t,n),c=Object(Lc.d)("elementDType",e,t,n),l=Object(Lc.d)("numElements",e,t,n);return[n.getTensorList(r.id).stack(o,c,l)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);Gc(e.shape.slice(1),t,"TensorList shape mismatch: ");const c=Object(o.mf)(e);return new Yc(c,t,r)}(Object(Lc.d)("tensor",e,t,n),Object(Lc.d)("elementShape",e,t,n),Object(Lc.d)("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=Object(Lc.d)("tensorListId",e,t,n),o=n.getTensorList(r.id),c=Object(Lc.d)("dtype",e,t,n),l=Object(Lc.d)("elementShape",e,t,n);return[o.concat(c,l)]}case"TensorListPushBack":{const r=Object(Lc.d)("tensorListId",e,t,n),o=Object(Lc.d)("tensor",e,t,n),c=n.getTensorList(r.id);return c.pushBack(o),[c.idTensor]}case"TensorListPopBack":{const r=Object(Lc.d)("tensorListId",e,t,n),o=Object(Lc.d)("elementShape",e,t,n),c=Object(Lc.d)("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(o,c)]}case"TensorListSplit":{const r=Object(Lc.d)("tensor",e,t,n),c=Object(Lc.d)("elementShape",e,t,n),l=function(e,t,n){let r=0;const c=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const l=qc(e.shape.slice(1),n),d=0===r?0:e.size/r,h=Object(o.hf)((()=>{const n=[];e=Object(o.Fe)(e,[1,r,d]);for(let i=0;i<t.length;++i){const r=[0,0===i?0:c[i-1],0],h=[1,t[i],d];n[i]=Object(o.Fe)(Object(o.Ne)(e,r,h),l)}return e.dispose(),n})),f=new Yc([],n,e.dtype,t.length);for(let i=0;i<h.length;i++)f.setItem(i,h[i]);return f}(r,Object(Lc.d)("lengths",e,t,n),c);return n.addTensorList(l),[l.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};var Zc=n(1180),Qc=n(1333),el=n(1367),tl=n(1331),nl=n(1336);function rl(e,t,n){const[r,o]=Object(Lc.d)("fusedOps",e,t,n),c="biasadd"===r,l="prelu"===o,d="fusedbatchnorm"===r,h=Object(Lc.d)("numArgs",e,t,n);if(c){if(l&&2!==h)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!l&&1!==h)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(d)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const f=Object(Lc.d)("strides",e,t,n),m=Object(Lc.c)(e,t,n),y=Object(Lc.d)("dataFormat",e,t,n).toUpperCase(),x=Object(Lc.d)("dilations",e,t,n),[O,w]=Object(Lc.d)("args",e,t,n);return{stride:f,pad:m,dataFormat:y,dilations:x,biasArg:O,preluArg:w,activationFunc:o,leakyreluAlpha:Object(Lc.d)("leakyreluAlpha",e,t,n)}}var al=n(1257),sl=n(1368),il=n(1369),cl=n(1298),ll=n(1303),hl=n(1341);var pl=n(1370),fl=n(1371);function ml(e,t,n){return{boxes:Object(Lc.d)("boxes",e,t,n),scores:Object(Lc.d)("scores",e,t,n),maxOutputSize:Object(Lc.d)("maxOutputSize",e,t,n),iouThreshold:Object(Lc.d)("iouThreshold",e,t,n),scoreThreshold:Object(Lc.d)("scoreThreshold",e,t,n),softNmsSigma:Object(Lc.d)("softNmsSigma",e,t,n)}}var bl=n(1230);class gl{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Object(o.He)(0),this.tensorMap=new Map,Object(o.ae)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return y.a(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Object(o.hf)((()=>{const e=Object(o.mf)(t),r=n.length,c=e.length;o.of.assert(r===c,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${c} elements.`));for(let i=0;i<r;i++){const t=n[i],r=e[i];Object(o.ae)(r),this.tensorMap.set(t,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Object(o.hf)((()=>{const e=[];for(let i=0;i<n.length;i++){const r=n[i],o=this.findWithDefault(r,t);e.push(o)}return Object(o.Ye)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}var yl=n(1372);var xl=n(1384);var Ol=n(1373),wl=n(1374);var vl=n(1375),kl=n(1376);function Il(e,t,n,r){const c=((e,t,n)=>{switch(e.category){case"arithmetic":return o.hf((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[A.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"AddN":return[Bc.a(Object(Lc.d)("tensors",e,t,n))];case"FloorMod":case"Mod":return[Sr.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"Mul":return[d.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"RealDiv":case"Div":return[div.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"DivNoNan":return[Zn.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"FloorDiv":return[sr.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"Sub":return[sub.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"Minimum":return[Nr.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"Maximum":return[In.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"Pow":return[Ct.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"SquaredDifference":return[Kr.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return o.hf((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Cn.a(Object(Lc.d)("x",e,t,n))];case"Acos":return[En.a(Object(Lc.d)("x",e,t,n))];case"Acosh":return[An.a(Object(Lc.d)("x",e,t,n))];case"Asin":return[Mn.a(Object(Lc.d)("x",e,t,n))];case"Asinh":return[Ln.a(Object(Lc.d)("x",e,t,n))];case"Atan":return[zn.a(Object(Lc.d)("x",e,t,n))];case"Atan2":return[Pn.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("y",e,t,n))];case"Atanh":return[Bn.a(Object(Lc.d)("x",e,t,n))];case"Ceil":return[Gn.a(Object(Lc.d)("x",e,t,n))];case"Complex":return[Wc.a(Object(Lc.d)("real",e,t,n),Object(Lc.d)("imag",e,t,n))];case"Cos":return[Xt.a(Object(Lc.d)("x",e,t,n))];case"Cosh":return[Jt.a(Object(Lc.d)("x",e,t,n))];case"Elu":return[er.a(Object(Lc.d)("x",e,t,n))];case"Erf":return[nr.a(Object(Lc.d)("x",e,t,n))];case"Exp":return[Ce.a(Object(Lc.d)("x",e,t,n))];case"Expm1":return[rr.a(Object(Lc.d)("x",e,t,n))];case"Floor":return[yt.a(Object(Lc.d)("x",e,t,n))];case"Log":return[Tt.a(Object(Lc.d)("x",e,t,n))];case"Log1p":return[yr.a(Object(Lc.d)("x",e,t,n))];case"Imag":return[Vc.a(Object(Lc.d)("x",e,t,n))];case"Neg":return[m.a(Object(Lc.d)("x",e,t,n))];case"Reciprocal":return[Dr.a(Object(Lc.d)("x",e,t,n))];case"Real":return[Uc.a(Object(Lc.d)("x",e,t,n))];case"Relu":return[_r.a(Object(Lc.d)("x",e,t,n))];case"Round":return[Br.a(Object(Lc.d)("x",e,t,n))];case"Selu":return[Wr.a(Object(Lc.d)("x",e,t,n))];case"Sigmoid":return[rn.a(Object(Lc.d)("x",e,t,n))];case"Sin":return[be.a(Object(Lc.d)("x",e,t,n))];case"Sign":return[Ur.a(Object(Lc.d)("x",e,t,n))];case"Sinh":return[ye.a(Object(Lc.d)("x",e,t,n))];case"Softplus":return[Hr.a(Object(Lc.d)("x",e,t,n))];case"Sqrt":return[x.a(Object(Lc.d)("x",e,t,n))];case"Square":return[O.a(Object(Lc.d)("x",e,t,n))];case"Tanh":return[Jr.a(Object(Lc.d)("x",e,t,n))];case"Tan":return[Yr.a(Object(Lc.d)("x",e,t,n))];case"ClipByValue":return[Hn.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("clipValueMin",e,t,n),Object(Lc.d)("clipValueMax",e,t,n))];case"Relu6":return[Mr.a(Object(Lc.d)("x",e,t,n))];case"Rsqrt":return[_e.a(Object(Lc.e)(e.inputNames[0],t,n))];case"Prod":return[Fr.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("axes",e,t,n))];case"LeakyRelu":return[dr.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("alpha",e,t,n))];case"Prelu":return[Rr.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("alpha",e,t,n))];case"IsNan":return[lr.a(Object(Lc.e)(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return Jc(e,t,n);case"convolution":return o.hf((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=Object(Lc.d)("stride",e,t,n),o=Object(Lc.d)("pad",e,t,n),c=Object(Lc.d)("dataFormat",e,t,n).toUpperCase(),l=Object(Lc.d)("dilation",e,t,n);return[Kn.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("filter",e,t,n),r,o,c,l)]}case"Conv2D":{const r=Object(Lc.d)("strides",e,t,n),o=Object(Lc.c)(e,t,n),c=Object(Lc.d)("dataFormat",e,t,n).toUpperCase(),l=Object(Lc.d)("dilations",e,t,n);return[de.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("filter",e,t,n),[r[1],r[2]],o,c,[l[1],l[2]])]}case"_FusedConv2D":{const{stride:r,pad:o,dataFormat:c,dilations:l,biasArg:d,preluArg:h,activationFunc:f,leakyreluAlpha:m}=rl(e,t,n);return[Zc.H.conv2d({x:Object(Lc.d)("x",e,t,n),filter:Object(Lc.d)("filter",e,t,n),strides:[r[1],r[2]],pad:o,dataFormat:c,dilations:[l[1],l[2]],bias:d,activation:f,preluActivationWeights:h,leakyreluAlpha:m})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:o,dataFormat:c,dilations:l,biasArg:d,preluArg:h,activationFunc:f,leakyreluAlpha:m}=rl(e,t,n);return[Zc.H.depthwiseConv2d({x:Object(Lc.d)("x",e,t,n),filter:Object(Lc.d)("filter",e,t,n),strides:[r[1],r[2]],pad:o,dataFormat:c,dilations:[l[1],l[2]],bias:d,activation:f,preluActivationWeights:h,leakyreluAlpha:m})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Object(Lc.d)("outputShape",e,t,n),o=Object(Lc.d)("strides",e,t,n),c=Object(Lc.c)(e,t,n);return[qn.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("filter",e,t,n),r,[o[1],o[2]],c)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Object(Lc.d)("strides",e,t,n),o=Object(Lc.c)(e,t,n),c=Object(Lc.d)("dilations",e,t,n),l=Object(Lc.d)("dataFormat",e,t,n).toUpperCase();return[Yn.a(Object(Lc.d)("input",e,t,n),Object(Lc.d)("filter",e,t,n),[r[1],r[2]],o,l,[c[1],c[2]])]}case"Conv3D":{const r=Object(Lc.d)("strides",e,t,n),o=Object(Lc.d)("pad",e,t,n),c=Object(Lc.d)("dataFormat",e,t,n).toUpperCase(),l=Object(Lc.d)("dilations",e,t,n);return[Qc.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("filter",e,t,n),[r[1],r[2],r[3]],o,c,[l[1],l[2],l[3]])]}case"AvgPool":{const r=Object(Lc.d)("strides",e,t,n),o=Object(Lc.d)("pad",e,t,n),c=Object(Lc.d)("kernelSize",e,t,n);return[Wn.a(Object(Lc.d)("x",e,t,n),[c[1],c[2]],[r[1],r[2]],o)]}case"MaxPool":{const r=Object(Lc.d)("strides",e,t,n),o=Object(Lc.d)("pad",e,t,n),c=Object(Lc.d)("kernelSize",e,t,n);return[wr.a(Object(Lc.d)("x",e,t,n),[c[1],c[2]],[r[1],r[2]],o)]}case"MaxPoolWithArgmax":{const r=Object(Lc.d)("strides",e,t,n),o=Object(Lc.d)("pad",e,t,n),c=Object(Lc.d)("kernelSize",e,t,n),l=Object(Lc.d)("includeBatchInIndex",e,t,n),{result:d,indexes:h}=el.a(Object(Lc.d)("x",e,t,n),[c[1],c[2]],[r[1],r[2]],o,l);return[d,h]}case"AvgPool3D":{const r=Object(Lc.d)("strides",e,t,n),o=Object(Lc.d)("pad",e,t,n),c=Object(Lc.d)("kernelSize",e,t,n);return[tl.a(Object(Lc.d)("x",e,t,n),[c[1],c[2],c[3]],[r[1],r[2],r[3]],o)]}case"MaxPool3D":{const r=Object(Lc.d)("strides",e,t,n),o=Object(Lc.d)("pad",e,t,n),c=Object(Lc.d)("kernelSize",e,t,n);return[nl.a(Object(Lc.d)("x",e,t,n),[c[1],c[2],c[3]],[r[1],r[2],r[3]],o)]}case"Dilation2D":{const r=Object(Lc.d)("strides",e,t,n),o=Object(Lc.d)("pad",e,t,n),c=Object(Lc.d)("dilations",e,t,n),l=r[1],d=r[2],h=c[1],f=c[2];return[Jn.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("filter",e,t,n),[l,d],o,[h,f],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return o.hf((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=Object(Lc.d)("shape",e,t,n),o=Object(Lc.d)("dtype",e,t,n),c=Object(Lc.d)("value",e,t,n);return[al.a(r,c,o)]}case"LinSpace":{const r=Object(Lc.d)("start",e,t,n),o=Object(Lc.d)("stop",e,t,n),c=Object(Lc.d)("num",e,t,n);return[sl.a(r,o,c)]}case"Multinomial":{const r=Object(Lc.d)("logits",e,t,n),o=Object(Lc.d)("numSamples",e,t,n),c=Object(Lc.d)("seed",e,t,n);return[il.a(r,o,c)]}case"OneHot":{const r=Object(Lc.d)("indices",e,t,n),o=Object(Lc.d)("depth",e,t,n),c=Object(Lc.d)("onValue",e,t,n),l=Object(Lc.d)("offValue",e,t,n);return[$r.a(r,o,c,l)]}case"Ones":return[ht.a(Object(Lc.d)("shape",e,t,n),Object(Lc.d)("dtype",e,t,n))];case"OnesLike":return[Er.a(Object(Lc.d)("x",e,t,n))];case"RandomUniform":return[cl.a(Object(Lc.d)("shape",e,t,n),Object(Lc.d)("minval",e,t,n),Object(Lc.d)("maxval",e,t,n),Object(Lc.d)("dtype",e,t,n))];case"Range":{const r=Object(Lc.d)("start",e,t,n),o=Object(Lc.d)("stop",e,t,n),c=Object(Lc.d)("step",e,t,n);return[ll.a(r,o,c,Object(Lc.d)("dtype",e,t,n))]}case"TruncatedNormal":{const r=Object(Lc.d)("shape",e,t,n),o=Object(Lc.d)("mean",e,t,n),c=Object(Lc.d)("stdDev",e,t,n),l=Object(Lc.d)("seed",e,t,n);return[hl.a(r,o,c,Object(Lc.d)("dtype",e,t,n),l)]}case"Zeros":return[vt.a(Object(Lc.d)("shape",e,t,n),Object(Lc.d)("dtype",e,t,n))];case"ZerosLike":return[T.a(Object(Lc.d)("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:o,maxOutputSize:c,iouThreshold:l,scoreThreshold:d,softNmsSigma:h}=ml(e,t,n),f=await Zc.L.nonMaxSuppressionWithScoreAsync(r,o,c,l,d,h);return[f.selectedIndices,f.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:o,maxOutputSize:c,iouThreshold:l,scoreThreshold:d}=ml(e,t,n),h=Object(Lc.d)("padToMaxOutputSize",e,t,n),f=await Zc.L.nonMaxSuppressionPaddedAsync(r,o,c,l,d,h);return[f.selectedIndices,f.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:o,maxOutputSize:c,iouThreshold:l,scoreThreshold:d}=ml(e,t,n);return[await Zc.L.nonMaxSuppressionAsync(r,o,c,l,d)]}case"Where":{const r=l.a(Object(Lc.d)("condition",e,t,n),"bool"),o=[await pl.a(r)];return r.dispose(),o}case"ListDiff":return fl.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return o.hf((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=Object(Lc.d)("x",e,t,n),o=Object(Lc.d)("k",e,t,n),c=Object(Lc.d)("sorted",e,t,n),l=Zr.a(r,o,c);return[l.values,l.indices]}case"Unique":{const r=Object(Lc.d)("x",e,t,n),o=Qr.a(r);return[o.values,o.indices]}case"UniqueV2":{const r=Object(Lc.d)("x",e,t,n),o=Object(Lc.d)("axis",e,t,n),c=Qr.a(r,o);return[c.values,c.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return o.hf((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=Object(Lc.d)("images",e,t,n),o=Object(Lc.d)("size",e,t,n),c=Object(Lc.d)("alignCorners",e,t,n),l=Object(Lc.d)("halfPixelCenters",e,t,n);return[Zc.L.resizeBilinear(r,[o[0],o[1]],c,l)]}case"ResizeNearestNeighbor":{const r=Object(Lc.d)("images",e,t,n),o=Object(Lc.d)("size",e,t,n),c=Object(Lc.d)("alignCorners",e,t,n),l=Object(Lc.d)("halfPixelCenters",e,t,n);return[Zc.L.resizeNearestNeighbor(r,[o[0],o[1]],c,l)]}case"CropAndResize":{const image=Object(Lc.d)("image",e,t,n),r=Object(Lc.d)("boxes",e,t,n),o=Object(Lc.d)("boxInd",e,t,n),c=Object(Lc.d)("cropSize",e,t,n),l=Object(Lc.d)("method",e,t,n),d=Object(Lc.d)("extrapolationValue",e,t,n);return[Zc.L.cropAndResize(image,r,o,c,l,d)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return o.hf((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=Object(Lc.d)("default",e,t,n);return[Object(Lc.e)(e.name,t,n)||r];case"Placeholder":return[Object(Lc.e)(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const data=Object(Lc.d)("x",e,t,n);return[Object(Lc.a)(data)]}case"IdentityN":return Object(Lc.d)("x",e,t,n).map((e=>Object(Lc.a)(e)));case"Snapshot":const o=Object(Lc.d)("x",e,t,n);return[Object(Lc.a)(o)];case"Shape":return[bl.a(Object(Lc.d)("x",e,t,n).shape,"int32")];case"ShapeN":return Object(Lc.d)("x",e,t,n).map((e=>bl.a(e.shape)));case"Size":return[y.a(Object(Lc.d)("x",e,t,n).size,"int32")];case"Rank":return[y.a(Object(Lc.d)("x",e,t,n).rank,"int32")];case"NoOp":return[y.a(1)];case"Print":const input=Object(Lc.d)("x",e,t,n),data=Object(Lc.d)("data",e,t,n),c=Object(Lc.d)("message",e,t,n),l=Object(Lc.d)("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(c);for(let i=0;i<data.length;i++)console.log(Array.prototype.slice.call(data[i].dataSync()).slice(0,l));return[input];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return o.hf((()=>((e,t,n)=>{switch(e.op){case"Equal":return[tt.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"NotEqual":return[Cr.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"Greater":return[qe.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"GreaterEqual":return[Q.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"Less":return[st.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"LessEqual":return[ee.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"LogicalAnd":return[te.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"LogicalNot":return[Vt.a(Object(Lc.d)("a",e,t,n))];case"LogicalOr":return[xr.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"Select":case"SelectV2":return[ne.a(Object(Lc.d)("condition",e,t,n),Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return o.hf((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[G.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n),Object(Lc.d)("transposeA",e,t,n),Object(Lc.d)("transposeB",e,t,n))];case"Einsum":return[yl.a(Object(Lc.d)("equation",e,t,n),...Object(Lc.d)("tensors",e,t,n))];case"Transpose":return[ve.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("perm",e,t,n))];case"_FusedMatMul":const[r,o]=Object(Lc.d)("fusedOps",e,t,n),c="biasadd"===r,l="prelu"===o,d=Object(Lc.d)("numArgs",e,t,n),h=Object(Lc.d)("leakyreluAlpha",e,t,n);if(c){if(l&&2!==d)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!l&&1!==d)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[f,m]=Object(Lc.d)("args",e,t,n);return[Zc.H.matMul({a:Object(Lc.d)("a",e,t,n),b:Object(Lc.d)("b",e,t,n),transposeA:Object(Lc.d)("transposeA",e,t,n),transposeB:Object(Lc.d)("transposeB",e,t,n),bias:f,activation:o,preluActivationWeights:m,leakyreluAlpha:h})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return o.hf((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Vn.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("mean",e,t,n),Object(Lc.d)("variance",e,t,n),Object(Lc.d)("offset",e,t,n),Object(Lc.d)("scale",e,t,n),Object(Lc.d)("epsilon",e,t,n))];case"LRN":return[pr.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("radius",e,t,n),Object(Lc.d)("bias",e,t,n),Object(Lc.d)("alpha",e,t,n),Object(Lc.d)("beta",e,t,n))];case"Softmax":return[Gr.a(Object(Lc.d)("x",e,t,n))];case"LogSoftmax":return[mr.a(Object(Lc.d)("x",e,t,n))];case"SparseToDense":return[xl.a(Object(Lc.d)("sparseIndices",e,t,n),Object(Lc.d)("outputShape",e,t,n),Object(Lc.d)("sparseValues",e,t,n),Object(Lc.d)("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return o.hf((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=Object(Lc.d)("axis",e,t,n),o=Object(Lc.d)("keepDims",e,t,n);return[vr.a(Object(Lc.d)("x",e,t,n),r,o)]}case"Mean":{const r=Object(Lc.d)("axis",e,t,n),o=Object(Lc.d)("keepDims",e,t,n);return[kr.a(Object(Lc.d)("x",e,t,n),r,o)]}case"Min":{const r=Object(Lc.d)("axis",e,t,n),o=Object(Lc.d)("keepDims",e,t,n);return[Ir.a(Object(Lc.d)("x",e,t,n),r,o)]}case"Sum":{const r=Object(Lc.d)("axis",e,t,n),o=Object(Lc.d)("keepDims",e,t,n);return[N.a(Object(Lc.d)("x",e,t,n),r,o)]}case"All":{const r=Object(Lc.d)("axis",e,t,n),o=Object(Lc.d)("keepDims",e,t,n);return[Rn.a(Object(Lc.d)("x",e,t,n),r,o)]}case"Any":{const r=Object(Lc.d)("axis",e,t,n),o=Object(Lc.d)("keepDims",e,t,n);return[Fn.a(Object(Lc.d)("x",e,t,n),r,o)]}case"ArgMax":{const r=Object(Lc.d)("axis",e,t,n);return[Dn.a(Object(Lc.d)("x",e,t,n),r)]}case"ArgMin":{const r=Object(Lc.d)("axis",e,t,n);return[_n.a(Object(Lc.d)("x",e,t,n),r)]}case"Prod":{const r=Object(Lc.d)("axis",e,t,n),o=Object(Lc.d)("keepDims",e,t,n);return[Fr.a(Object(Lc.d)("x",e,t,n),r,o)]}case"Cumsum":{const r=Object(Lc.d)("axis",e,t,n),o=Object(Lc.d)("exclusive",e,t,n),c=Object(Lc.d)("reverse",e,t,n);return[we.a(Object(Lc.d)("x",e,t,n),r,o,c)]}case"Bincount":const r=Object(Lc.d)("x",e,t,n),o=Object(Lc.d)("weights",e,t,n),c=Object(Lc.d)("size",e,t,n);return[Ol.a(r,o,c)];case"DenseBincount":{const r=Object(Lc.d)("x",e,t,n),o=Object(Lc.d)("weights",e,t,n),c=Object(Lc.d)("size",e,t,n),l=Object(Lc.d)("binaryOutput",e,t,n);return[wl.a(r,o,c,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return o.hf((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=Object(Lc.d)("n",e,t,n),o=Object(Lc.d)("axis",e,t,n);let c=Object(Lc.d)("tensors",e,t,n);return c=c.slice(0,r),[un.a(c,o)]}case"Gather":{const input=Object(Lc.d)("x",e,t,n),r=Object(Lc.d)("indices",e,t,n);return[kn.a(input,l.a(r,"int32"),0)]}case"GatherV2":{const r=Object(Lc.d)("axis",e,t,n),o=Object(Lc.d)("batchDims",e,t,n),input=Object(Lc.d)("x",e,t,n),c=Object(Lc.d)("indices",e,t,n);return[kn.a(input,l.a(c,"int32"),r,o)]}case"Reverse":{const r=Object(Lc.d)("dims",e,t,n),o=[];for(let i=0;i<r.length;i++)r[i]&&o.push(i);const input=Object(Lc.d)("x",e,t,n);return[zt.a(input,o)]}case"ReverseV2":{const r=Object(Lc.d)("axis",e,t,n),input=Object(Lc.d)("x",e,t,n);return[zt.a(input,r)]}case"Slice":{const r=Object(Lc.d)("begin",e,t,n),o=Object(Lc.d)("size",e,t,n);return[bt.a(Object(Lc.d)("x",e,t,n),r,o)]}case"StridedSlice":{const r=Object(Lc.d)("begin",e,t,n),o=Object(Lc.d)("end",e,t,n),c=Object(Lc.d)("strides",e,t,n),l=Object(Lc.d)("beginMask",e,t,n),d=Object(Lc.d)("endMask",e,t,n),h=Object(Lc.d)("ellipsisMask",e,t,n),f=Object(Lc.d)("newAxisMask",e,t,n),m=Object(Lc.d)("shrinkAxisMask",e,t,n),y=Object(Lc.d)("x",e,t,n);return[Xr.a(y,r,o,c,l,d,h,f,m)]}case"Pack":return Object(o.hf)((()=>{const r=Object(Lc.d)("axis",e,t,n),c=Object(Lc.d)("tensors",e,t,n),l=c[0].shape,d=qr.a(c[0]).shape,h=c.map((e=>{const t=o.of.arraysEqual(e.shape,l);if(!t&&!o.of.arraysEqual(qr.a(e).shape,d))throw new Error("the input tensors shape does not match");return t?e:I.a(e,l)}));return[On.a(h,r)]}));case"Unpack":{const r=Object(Lc.d)("axis",e,t,n),o=Object(Lc.d)("tensor",e,t,n);return Nt.a(o,r)}case"Tile":{const r=Object(Lc.d)("reps",e,t,n);return[Me.a(Object(Lc.d)("x",e,t,n),r)]}case"Split":case"SplitV":{const r=Object(Lc.d)("axis",e,t,n),o=Object(Lc.d)("numOrSizeSplits",e,t,n),c=Object(Lc.d)("x",e,t,n);return se.a(c,o,r)}case"ScatterNd":{const r=Object(Lc.d)("indices",e,t,n),o=Object(Lc.d)("values",e,t,n),c=Object(Lc.d)("shape",e,t,n);return[vl.a(r,o,c)]}case"GatherNd":{const r=Object(Lc.d)("x",e,t,n),o=Object(Lc.d)("indices",e,t,n);return[kl.a(r,o)]}case"SparseToDense":{const r=Object(Lc.d)("sparseIndices",e,t,n),o=Object(Lc.d)("outputShape",e,t,n),c=Object(Lc.d)("sparseValues",e,t,n),d=Object(Lc.d)("defaultValue",e,t,n);return[xl.a(r,c,o,c.dtype===d.dtype?d:l.a(d,c.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return o.hf((()=>((e,t,n)=>{switch(e.op){case"SparseReshape":{const{outputIndices:r,outputShape:o}=Zc.yb.sparseReshape(Object(Lc.d)("inputIndices",e,t,n),Object(Lc.d)("inputShape",e,t,n),Object(Lc.d)("newShape",e,t,n));return[r,o]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return o.hf((()=>((e,t,n)=>{switch(e.op){case"FFT":return[ar.a(Object(Lc.d)("x",e,t,n))];case"IFFT":return[or.a(Object(Lc.d)("x",e,t,n))];case"RFFT":return[Pr.a(Object(Lc.d)("x",e,t,n))];case"IRFFT":return[ir.a(Object(Lc.d)("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return o.hf((()=>((e,t,n)=>{switch(e.op){case"Cast":return[l.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("dtype",e,t,n))];case"ExpandDims":{const r=Object(Lc.d)("axis",e,t,n);return[vn.a(Object(Lc.d)("x",e,t,n),r)]}case"Squeeze":{const r=Object(Lc.d)("axis",e,t,n);return[qr.a(Object(Lc.d)("x",e,t,n),r)]}case"Reshape":return[I.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("shape",e,t,n))];case"MirrorPad":return[jr.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("padding",e,t,n),Object(Lc.d)("mode",e,t,n))];case"PadV2":case"Pad":return[Qt.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("padding",e,t,n),Object(Lc.d)("constantValue",e,t,n))];case"SpaceToBatchND":{const r=Object(Lc.d)("blockShape",e,t,n),o=Object(Lc.d)("paddings",e,t,n);return[K.a(Object(Lc.d)("x",e,t,n),r,o)]}case"BatchToSpaceND":{const r=Object(Lc.d)("blockShape",e,t,n),o=Object(Lc.d)("crops",e,t,n);return[sn.a(Object(Lc.d)("x",e,t,n),r,o)]}case"DepthToSpace":{const r=Object(Lc.d)("blockSize",e,t,n),o=Object(Lc.d)("dataFormat",e,t,n).toUpperCase();return[Xn.a(Object(Lc.d)("x",e,t,n),r,o)]}case"BroadcastTo":return[Un.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const o=Object(Lc.d)("keyDType",e,t,n),c=Object(Lc.d)("valueDType",e,t,n),l=new gl(o,c);return r.addHashTable(e.name,l),[l.handle]}case"LookupTableImport":case"LookupTableImportV2":{const o=Object(Lc.d)("tableHandle",e,t,n,r),c=Object(Lc.d)("keys",e,t,n),l=Object(Lc.d)("values",e,t,n),d=r.getHashTableById(o.id);return[await d.import(c,l)]}case"LookupTableFind":case"LookupTableFindV2":{const o=Object(Lc.d)("tableHandle",e,t,n,r),c=Object(Lc.d)("keys",e,t,n),l=Object(Lc.d)("defaultValue",e,t,n),d=r.getHashTableById(o.id);return[await d.find(c,l)]}case"LookupTableSize":case"LookupTableSizeV2":{const o=Object(Lc.d)("tableHandle",e,t,n,r);return[r.getHashTableById(o.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const c=Object(Pc.a)(e.op);if(c&&c.customExecutor)return c.customExecutor(new zc(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return o.of.isPromise(c)?c.then((data=>[].concat(data))):[].concat(c)}class Nl{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let i=0;i<this.contexts.length-1;i++){const t=this.contexts.slice(0,this.contexts.length-i);e.push(this.contextIdforContexts(t))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function jl(e,t,n,r){const o=new Set,c=[];let l=null,d=null;const h=new Set,f=Object.keys(e).map((e=>Object(Lc.g)(e)[0]));let m=[];null!=r&&(m=r.map((e=>Object(Lc.g)(e.name)[0])));const y=[...t];for(;y.length>0;){const e=y.pop();($l(e)||El(e)||Al(e))&&null==l&&(l=e,d=l.children.map((e=>e.name)).filter((e=>o.has(e)))),o.add(e.name),null==n[e.name]&&(-1===f.indexOf(e.name)&&-1===m.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((input=>{h.has(input.name)||(h.add(input.name),y.push(input))})):c.push(e.name)))}return{inputs:e,outputs:t,usedNodes:o,missingInputs:c,dynamicNode:l,syncInputs:d}}const Sl=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Tl=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Cl=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function $l(e){return Sl.indexOf(e.op)>=0}function El(e){return Tl.indexOf(e.op)>=0}function Al(e){return Cl.indexOf(e.op)>=0}class Rl{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new Rl(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((map,e)=>(map[e]=this._functions[e].signature,map)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=jl(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:o,syncInputs:c}=n;if(null!=o)throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${c}]`);if(r.length>0){const n=t.map((e=>e.name)),o=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${o}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:o}=n,c=[],l=Object.keys(o).map((e=>Object(Lc.g)(e)[0])).map((t=>e.nodes[t])),d=e.initNodes;l.forEach((input=>{r.has(input.name)&&c.push(input)})),e.weights.forEach((e=>{r.has(e.name)&&c.push(e)})),null!=d&&d.forEach((e=>{r.has(e.name)&&c.push(e)}));const h=new Set,f=[];for(;c.length>0;){const e=c.pop();h.add(e.name),t[e.name]||f.push(e),e.children.forEach((e=>{!h.has(e.name)&&r.has(e.name)&&e.inputs.every((input=>h.has(input.name)))&&c.push(e)}))}return f}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[Object(Lc.g)(e)[0]])),c=t.map((e=>Object(Lc.g)(e)[0]));let l=c.map((e=>this.graph.nodes[e]));0===l.length&&(l=this._outputs);const d=this.getCompilationKey(r,l);let h=this.compiledMap.get(d);null==h&&(h=this.compile(e,l),this.compiledMap.set(d,h));const f={},m={};return Object(o.hf)((()=>{const n=new Nl(this.weightMap,f,m,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,o]=Object(Lc.g)(t),c=[];c[o]=e[t],r[n]=c}));const l=this.getFrozenTensorIds(r),d={};for(let i=0;i<h.length;i++){const e=h[i];if(!r[e.name]){const t=Il(e,r,n,this._resourceManager);if(o.of.isPromise(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.checkTensorForDisposal(e.name,e,r,n,l,c,d)}}return null==this.parent&&n.dispose(l),t.map((e=>Object(Lc.e)(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,o,c,l){"control"!==t.category&&-1===c.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(l[e.id]=(l[e.id]||0)+t.children.length)})),t.inputs.forEach((input=>{if("control"!==input.category){const e=Object(Lc.f)(input.name,n,r);null!=e&&e.forEach((e=>{if(e&&!e.kept&&!o.has(e.id)){const t=l[e.id];1===t?(e.dispose(),delete l[e.id]):null!=t&&l[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},o={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const c=new Nl(this.weightMap,r,o,this.functionExecutorMap),l=await this.executeWithControlFlow(e,c,t,n),d=t.map((e=>Object(Lc.e)(e,l,c))),h=d.map((e=>e.id)),f=Object.keys(e).map((t=>e[t].id)),m=new Set([...h,...f,...this.weightIds]);return Object.keys(l).forEach((e=>{l[e].forEach((e=>{!e||e.kept||e.isDisposed||m.has(e.id)||e.dispose()}))})),null==this.parent&&c.dispose(m),d}async executeFunctionAsync(e,t,n){const r=e.reduce(((map,e,t)=>(map[this.inputs[t].name]=e,map)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const o=Object.keys(e),c=o.map((e=>this.graph.nodes[Object(Lc.g)(e)[0]])),l=n.map((e=>Object(Lc.g)(e)[0]));let d=l.map((e=>this.graph.nodes[e]));0===d.length&&(d=this._outputs);const{usedNodes:h,missingInputs:f,dynamicNode:m,syncInputs:y}=jl(e,d,this.weightMap,this._initNodes),x=[...c,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),O=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=Object(Lc.g)(t),o=[];o[r]=e[t],O[n]=o}));const w={},v=this.getFrozenTensorIds(O),k={};for(;x.length>0;){const e=this.processStack(c,x,t,O,k,v,l,w,h);await Promise.all(e)}null!=m||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const I=d.filter((e=>!$l(e)&&!Object(Lc.e)(e.name,O,t))).map((e=>e.name));if(I.length>0){let e="";throw null!=m&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${y}]`),new Error(`Cannot compute the outputs [${I}] from the provided inputs [${o}]. Consider providing the following inputs: [${f}]. ${e}`)}return O}processStack(e,t,n,r,c,l,d,h,f){const m=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let y="";if("Enter"===e.node.op&&Object(Lc.d)("isConstant",e.node,r,n)&&([y]=Object(Lc.b)(e.node.name,n)),null==r[e.node.name]){const x=Il(e.node,r,n,this._resourceManager);y||([y]=Object(Lc.b)(e.node.name,n));const O=n.currentContext;o.of.isPromise(x)?m.push(x.then((o=>(r[y]=o,n.currentContext=O,this.checkTensorForDisposal(y,e.node,r,n,l,d,h),this.processChildNodes(e.node,t,n,r,c,f),o)))):(r[y]=x,this.checkTensorForDisposal(y,e.node,r,n,l,d,h),this.processChildNodes(e.node,t,n,r,c,f))}else this.processChildNodes(e.node,t,n,r,c,f)}return m}processChildNodes(e,t,n,r,o,c){e.children.forEach((e=>{const[l]=Object(Lc.b)(e.name,n);!o[l]&&c.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!Object(Lc.e)(e,r,n)))&&(o[l]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!Object(Lc.e)(e,r,n)))&&(o[l]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const input=e[t],[n]=Object(Lc.g)(t),r=this.graph.nodes[n];if(r.attrParams.shape&&r.attrParams.shape.value){const e=r.attrParams.shape.value,t=e.length===input.shape.length&&input.shape.every(((t,n)=>-1===e[n]||e[n]===t));o.of.assert(t,(()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${e}], but was [${input.shape}]`))}r.attrParams.dtype&&r.attrParams.dtype.value&&o.of.assert(input.dtype===r.attrParams.dtype.value,(()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${input.dtype}`))}))}mapInputs(e){const t={};for(const n in e)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){t[this._signature.inputs[n].name]=e[n]}else t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=Object(Lc.g)(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]){return this._signature.outputs[e].name}return e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=Object(Lc.g)(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class Fl{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class Dl{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new Fl}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const path=this.modelUrl;if(null!=path.load)this.handler=path;else if(null!=this.loadOptions.requestInit)this.handler=o.Zd.browserHTTPRequest(path,this.loadOptions);else{const e=o.Zd.getLoadHandlers(path,this.loadOptions);if(0===e.length)e.push(o.Zd.browserHTTPRequest(path,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[path]}'`);this.handler=e[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=o.Zd.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Rl(Mc.a.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=Mc.a.Instance.transformGraph(e.modelInitializer);this.initializer=new Rl(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=o.Zd.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof o.Vc||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((map,t,i)=>(map[t]=e[i],map)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(map){return Object.keys(map).reduce(((e,t)=>(e[t]=[map[t]],e)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function _l(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new Dl(e,t);return await n.load(),n}var Ml=n(1267),Ll=n(1233),zl=n(1327);class Pl{constructor(){this.size=null}batch(e,t=!0){const base=this;let n;return o.of.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),n=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Bl((async()=>(await base.iterator()).columnMajorBatch(e,t,Wl)),n)}concatenate(e){const base=this;let t;return t=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Bl((async()=>(await base.iterator()).concatenate(await e.iterator())),t)}filter(e){const base=this;let t;return t=this.size===1/0?1/0:null,Bl((async()=>(await base.iterator()).filter((t=>o.hf((()=>e(t)))))),t)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const base=this;return Bl((async()=>(await base.iterator()).map((t=>o.hf((()=>e(t)))))),this.size)}mapAsync(e){const base=this;return Bl((async()=>(await base.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const base=this;return Bl((async()=>(await base.iterator()).prefetch(e)),this.size)}repeat(e){const base=this;let t;return t=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Bl((async()=>{const t=Object(Ll.e)((async()=>({value:await base.iterator(),done:!1})));return Object(Ll.d)(t.take(e))}),t)}skip(e){const base=this;let t;return t=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Bl((async()=>(await base.iterator()).skip(e)),t)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const base=this,r=Ml.alea(t||o.of.now().toString());return Bl((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await base.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const base=this;let t;return t=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Bl((async()=>(await base.iterator()).take(e)),t)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Bl(e,t=null){return new class extends Pl{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Wl(e){if(null===e)return null;const t=e[0];if(Object(zl.a)(t)){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof o.Vc?o.Ye(e):o.df(e)}(e),recurse:!1}}return{value:null,recurse:!0}}Pl.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");Ll.a;Ll.a;var Vl=n(1436);Vl.a;function Ul(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&o.of.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const Gl=o.be.whereImpl;class Hl extends o.wb{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new o.L(this,Object(o.Nd)())}nextDataId(){return Hl.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Object(o.Od)().get("IS_NODE")&&o.od.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&o.of.isString(n[0])){const c=n.map((e=>o.of.encodeString(e)));r=this.write(c,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,o){this.data.set(e,{values:t,dtype:r,refCount:o})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return o.od.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const data=this.readSync(e.dataId);let t=data;if("string"===e.dtype)try{t=data.map((e=>o.of.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(o.td)(e.shape,e.dtype,t)}makeOutput(e,t,n){const r=this.write(e,t,n);return Object(o.Nd)().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=o.of.now();e();return{kernelMs:o.of.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Ul([e],"where");const t=this.readSync(e.dataId);return Gl(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Hl.nextDataId=0;function Kl(e,t,n){return({inputs:r,attrs:c,backend:l})=>{const{x:d}=r;if(Ul(d,e),"string"===d.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const h=l,f=h.data.get(d.dataId).values,m=o.of.sizeFromShape(d.shape),y=n||d.dtype,x=o.of.getArrayFromDType(y,m);for(let i=0;i<m;++i)x[i]=t(f[i],c);return h.makeTensorInfo(d.shape,y,x)}}function ql(e,t,n){return({inputs:r,attrs:o,backend:c})=>{const{x:l}=r;if(Ul(l,e),"string"===l.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const d=c,h=d.data.get(l.dataId).values,f=n||l.dtype,m=t(h,f,o);return d.makeTensorInfo(l.shape,f,m)}}Object(o.Ce)("cpu",(()=>new Hl),1);const Xl=Kl(o.W,(e=>e>=0?e:Math.exp(e)-1)),Yl={kernelName:o.W,backendName:"cpu",kernelFunc:Xl};function Jl(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Zl={kernelName:o.rb,backendName:"cpu",kernelFunc:Jl};function Ql(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{alpha:l}=r;Ul([c],"leakyRelu");const d=o.of.sizeFromShape(c.shape),h=n.data.get(c.dataId).values,f=o.of.getTypedArrayFromDType("float32",d);for(let i=0;i<h.length;i++)f[i]=h[i]<0?l*h[i]:h[i];return n.makeTensorInfo(c.shape,"float32",f)}const ed={kernelName:o.zb,backendName:"cpu",kernelFunc:Ql};function nd(e){return(t,n,r,c,l)=>{const d=o.od.assertAndGetBroadcastShape(t,n),h=d.length,f=o.of.computeStrides(d),m=o.of.sizeFromShape(d),y=o.of.getTypedArrayFromDType(l,m),x=t.length,O=n.length,w=o.of.computeStrides(t),v=o.of.computeStrides(n),k=o.od.getBroadcastDims(t,d),I=o.od.getBroadcastDims(n,d);if(k.length+I.length===0)for(let i=0;i<y.length;++i)y[i]=e(r[i%r.length],c[i%c.length]);else for(let i=0;i<y.length;++i){const t=o.of.indexToLoc(i,h,f),n=t.slice(-x);k.forEach((e=>n[e]=0));const l=o.of.locToIndex(n,x,w),d=t.slice(-O);I.forEach((e=>d[e]=0));const m=o.of.locToIndex(d,O,v);y[i]=e(r[l],c[m])}return[y,d]}}const rd=nd(((e,t)=>e<0?t*e:e));function ad(e){const{inputs:t,backend:n}=e,{x:r,alpha:o}=t;Ul([r,o],"prelu");const c=n.data.get(r.dataId).values,l=n.data.get(o.dataId).values,[d,h]=rd(r.shape,o.shape,c,l,r.dtype);return n.makeTensorInfo(h,r.dtype,d)}const sd={kernelName:o.hc,backendName:"cpu",kernelFunc:ad},od=Kl(o.nc,(e=>Math.max(0,e))),id={kernelName:o.nc,backendName:"cpu",kernelFunc:od},ud=Kl(o.oc,(e=>Math.min(Math.max(0,e),6))),cd={kernelName:o.oc,backendName:"cpu",kernelFunc:ud},ld=Kl(o.Bc,(e=>1/(1+Math.exp(-e)))),hd={kernelName:o.Bc,backendName:"cpu",kernelFunc:ld};function pd(e,t,n,r,o){if("linear"===n)return Jl({inputs:{x:t},backend:e});if("relu"===n)return od({inputs:{x:t},backend:e});if("elu"===n)return Xl({inputs:{x:t},backend:e});if("relu6"===n)return ud({inputs:{x:t},backend:e});if("prelu"===n)return ad({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return Ql({inputs:{x:t},backend:e,attrs:{alpha:o}});if("sigmoid"===n)return ld({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function fd(e){const{inputs:t,backend:n}=e,{real:r,imag:o}=t,c=n.data.get(r.dataId).values,l=n.data.get(o.dataId).values,d=n.makeTensorInfo(r.shape,"complex64");return n.data.get(d.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",c),imag:n.makeTensorInfo(o.shape,"float32",l)},d}const md={kernelName:o.y,backendName:"cpu",kernelFunc:fd};function bd(e,t,n="float32"){if("complex64"===n){return fd({inputs:{real:bd(e,t,"float32"),imag:bd(e,t,"float32")},backend:e})}const r=o.of.makeZerosTypedArray(o.of.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function gd(e){const{inputs:t,backend:n}=e,{input:input}=t,r=n.data.get(input.dataId).complexTensorInfos.real,o=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,o)}const yd={kernelName:o.kc,backendName:"cpu",kernelFunc:gd};function xd(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{dtype:l}=r;if("complex64"===l){if("complex64"===c.dtype)return Jl({inputs:{x:c},backend:n});const e=bd(n,c.shape,c.dtype),t=xd({inputs:{x:c},backend:n,attrs:{dtype:"float32"}}),r=fd({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===c.dtype){const e=gd({inputs:{input:c},backend:n}),t=xd({inputs:{x:e},backend:n,attrs:{dtype:l}});return n.disposeIntermediateTensorInfo(e),t}if(!o.of.hasEncodingLoss(c.dtype,l)){const e=Jl({inputs:{x:c},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:l}}if("int32"===l){const e=n.data.get(c.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(c.shape,"int32",t)}if("bool"===l){const e=n.data.get(c.dataId).values,t=o.of.toTypedArray([0],c.dtype),[r,l]=nd(((a,b)=>a!==b?1:0))(c.shape,[],e,t,"bool");return n.makeTensorInfo(l,"bool",r)}throw new Error(`Error in Cast: failed to cast ${c.dtype} to ${l}`)}const Od={kernelName:o.v,backendName:"cpu",kernelFunc:xd};function wd(e,t,n,r){return null==n?({inputs:n,backend:o})=>{const{a:a,b:b}=n,c=o;Ul([a,b],e);const l=c.data.get(a.dataId).values,d=c.data.get(b.dataId).values,h=r||a.dtype,[f,m]=t(a.shape,b.shape,l,d,h);return c.makeTensorInfo(m,h,f)}:({inputs:e,backend:o})=>{const{a:a,b:b}=e,c=o;if("complex64"===a.dtype||"complex64"===b.dtype){const e=xd({inputs:{x:a},backend:c,attrs:{dtype:"complex64"}}),t=c.data.get(e.dataId),r=t.complexTensorInfos.real,o=t.complexTensorInfos.imag,l=c.data.get(r.dataId).values,d=c.data.get(o.dataId).values,h=xd({inputs:{x:b},backend:c,attrs:{dtype:"complex64"}}),f=c.data.get(h.dataId),m=f.complexTensorInfos.real,y=f.complexTensorInfos.imag,x=c.data.get(m.dataId).values,O=c.data.get(y.dataId).values,[w,v,k]=n(a.shape,b.shape,l,d,x,O),I=c.makeTensorInfo(k,"float32",w),N=c.makeTensorInfo(k,"float32",v),j=fd({inputs:{real:I,imag:N},backend:c});return c.disposeIntermediateTensorInfo(e),c.disposeIntermediateTensorInfo(h),c.disposeIntermediateTensorInfo(I),c.disposeIntermediateTensorInfo(N),j}{const e=c.data.get(a.dataId).values,n=c.data.get(b.dataId).values,o=r||a.dtype,[l,d]=t(a.shape,b.shape,e,n,o);return c.makeTensorInfo(d,o,l)}}}function vd(e){return(t,n,r,c,l,d)=>{const h=o.od.assertAndGetBroadcastShape(t,n),f=o.of.sizeFromShape(h),m=h.length,y=o.of.computeStrides(h),x=o.of.getTypedArrayFromDType("float32",f),O=o.of.getTypedArrayFromDType("float32",f),w=o.od.getBroadcastDims(t,h),v=o.od.getBroadcastDims(n,h),k=o.od.mergeRealAndImagArrays(r,c),I=o.od.mergeRealAndImagArrays(l,d),N=t.length,j=o.of.computeStrides(t),S=n.length,T=o.of.computeStrides(n);if(w.length+v.length===0)for(let i=0;i<x.length;i++){const t=i%k.length,n=i%I.length,r=e(k[2*t],k[2*t+1],I[2*n],I[2*n+1]);x[i]=r.real,O[i]=r.imag}else for(let i=0;i<x.length;i++){const t=o.of.indexToLoc(i,m,y),n=t.slice(-N);w.forEach((e=>n[e]=0));const r=o.of.locToIndex(n,N,j),c=t.slice(-S);v.forEach((e=>c[e]=0));const l=o.of.locToIndex(c,S,T),d=e(k[2*r],k[2*r+1],I[2*l],I[2*l+1]);x[i]=d.real,O[i]=d.imag}return[x,O,h]}}const kd=nd(((a,b)=>a+b)),Id=vd(((e,t,n,r)=>({real:e+n,imag:t+r}))),Nd=wd(o.d,kd,Id),jd={kernelName:o.d,backendName:"cpu",kernelFunc:Nd};function Sd(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{shape:l}=r,d=o.of.sizeFromShape(c.shape),h=o.of.inferFromImplicitShape(l,d),f=o.of.sizeFromShape(h);o.of.assert(d===f,(()=>`The new shape (${h}) has ${f} elements and the old shape (${c.shape}) has ${d} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(c.dataId);const m=n.data.get(c.dataId);if(null!=m.complexTensorInfos){const e=m.complexTensorInfos.real,t=m.complexTensorInfos.imag;e.shape=h,t.shape=h}return{dataId:c.dataId,shape:h,dtype:c.dtype}}const Td={kernelName:o.pc,backendName:"cpu",kernelFunc:Sd};function Cd(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:b}=t,{transposeA:c,transposeB:l}=r;Ul([a,b],"matMul");const d=a.shape.length,h=b.shape.length,f=c?a.shape[d-2]:a.shape[d-1],m=l?b.shape[h-1]:b.shape[h-2],y=c?a.shape[d-1]:a.shape[d-2],x=l?b.shape[h-2]:b.shape[h-1],O=a.shape.slice(0,-2),w=b.shape.slice(0,-2),v=o.of.sizeFromShape(O),k=o.of.sizeFromShape(w),I=v===k||1===v||1===k;o.of.assert(d>=2&&h>=2&&I,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${O}) and (${w}).`));const N=(v>k?a.shape.slice(0,-2):b.shape.slice(0,-2)).concat([y,x]);o.of.assert(f===m,(()=>`Error in matMul: inner shapes (${f}) and (${m}) of Tensors with shapes ${a.shape} and ${b.shape} and transposeA=${c} and transposeB=${l} must match.`));const j=l?[k,x,m]:[k,m,x],S=Sd({inputs:{x:a},backend:n,attrs:{shape:c?[v,f,y]:[v,y,f]}}),T=Sd({inputs:{x:b},backend:n,attrs:{shape:j}}),C=c?S.shape[1]:S.shape[2],$=c?S.shape[2]:S.shape[1],E=l?T.shape[1]:T.shape[2],A=Math.max(v,k),R=n.data.get(S.dataId).values,F=n.data.get(T.dataId).values,D=o.of.computeStrides(S.shape),_=o.of.computeStrides(T.shape),[M,L,z]=c?[D[0],1,D[1]]:[D[0],D[1],1],[P,B,W]=l?[1,_[1],_[0]]:[_[1],1,_[0]],V=$*E,U=Object(o.td)([A,$,E],S.dtype),G=U.values,H=n.blockSize;for(let e=0;e<A;e++)for(let t=0;t<$;t+=H)for(let n=0;n<E;n+=H)for(let r=0;r<C;r+=H){const o=Math.min(t+H,$),c=Math.min(n+H,E),l=Math.min(r+H,C);for(let i=t;i<o;i++)for(let t=n;t<c;t++){let n=0;for(let o=r;o<l;o++){const r=Math.min(e,v-1)*M,c=Math.min(e,k-1)*W;n+=R[r+i*L+o*z]*F[o*P+t*B+c]}G[e*V+(i*E+t)]+=n}}return n.disposeIntermediateTensorInfo(S),n.disposeIntermediateTensorInfo(T),n.makeTensorInfo(N,U.dtype,U.values)}const $d={kernelName:o.s,backendName:"cpu",kernelFunc:Cd};const Ed={kernelName:o.fd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:b,bias:o,preluActivationWeights:c}=t,{transposeA:l,transposeB:d,activation:h,leakyreluAlpha:f}=r;let m,y,x;const O=[];m=Cd({inputs:{a:a,b:b},attrs:{transposeA:l,transposeB:d},backend:n}),o&&(y=Nd({inputs:{a:m,b:o},backend:n}),O.push(m),m=y),h&&(x=pd(n,m,h,c,f),O.push(m),m=x);for(const i of O)n.disposeIntermediateTensorInfo(i);return m}};function Ad(e){const t=new Float32Array(e.length);for(let i=0;i<e.length;++i)t[i]=Math.abs(e[i]);return t}const Rd={kernelName:o.a,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Ul(t,"abs");let r=new Float32Array(o.of.sizeFromShape(t.shape));return r=Ad(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,"float32")}},Fd=Kl(o.b,(e=>Math.acos(e))),Dd={kernelName:o.b,backendName:"cpu",kernelFunc:Fd},_d=Kl(o.c,(e=>Math.acosh(e))),Md={kernelName:o.c,backendName:"cpu",kernelFunc:_d};const Ld={kernelName:o.e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;Ul(t,"addN");const c=r.map((e=>n.data.get(e.dataId).values)),l=Object(o.td)(r[0].shape,r[0].dtype),d=l.values;for(let i=0;i<r.length;i++){const e=c[i];for(let t=0;t<d.length;t++)d[t]+=e[t]}return n.makeTensorInfo(l.shape,l.dtype,l.values)}};function zd(e,t,n,r,c){const l=t.length,d=o.of.sizeFromShape(t),h=o.of.computeStrides(t),f=o.of.computeStrides(c),m=o.of.getTypedArrayFromDType(n,o.of.sizeFromShape(c));for(let i=0;i<d;++i){const t=o.of.indexToLoc(i,l,h),n=new Array(t.length);for(let i=0;i<n.length;i++)n[i]=t[r[i]];m[o.of.locToIndex(n,l,f)]=e[i]}return m}function Pd(e){const{inputs:t,attrs:n,backend:r}=e,{x:o}=t,{perm:c}=n;Ul(o,"transpose");const l=o.shape.length,d=new Array(l);for(let i=0;i<d.length;i++)d[i]=o.shape[c[i]];const h=zd(r.data.get(o.dataId).values,o.shape,o.dtype,c,d);return{dataId:r.write(h,d,o.dtype),shape:d,dtype:o.dtype}}const Bd={kernelName:o.ad,backendName:"cpu",kernelFunc:Pd};const Wd={kernelName:o.f,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l,keepDims:d}=r;Ul(c,"all");const h=o.of.parseAxisParam(l,c.shape);let f=h;const m=o.od.getAxesPermutation(f,c.shape.length);let y=c;null!=m&&(y=Pd({inputs:{x:c},backend:n,attrs:{perm:m}}),f=o.od.getInnerMostAxes(f.length,c.shape.length)),o.od.assertAxesAreInnerMostDims("all",f,y.shape.length);const[x,O]=o.od.computeOutAndReduceShapes(y.shape,f),w=o.of.sizeFromShape(O),v=o.of.makeZerosTypedArray(o.of.sizeFromShape(x),y.dtype),k=n.data.get(y.dataId).values;for(let i=0;i<v.length;++i){const e=i*w;let t=k[e];for(let n=0;n<w;++n){const r=k[e+n];t=t&&r}v[i]=t}null!=m&&n.disposeIntermediateTensorInfo(y);const I=n.makeTensorInfo(x,y.dtype,v);if(d){const e=Sd({inputs:{x:I},backend:n,attrs:{shape:o.od.expandShapeToKeepDim(x,h)}});return n.disposeIntermediateTensorInfo(I),e}return I}};const Vd={kernelName:o.g,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l,keepDims:d}=r;Ul(c,"any");const h=o.of.parseAxisParam(l,c.shape);let f=h;const m=o.od.getAxesPermutation(f,c.shape.length);let y=c;null!=m&&(y=Pd({inputs:{x:c},backend:n,attrs:{perm:m}}),f=o.od.getInnerMostAxes(f.length,c.shape.length)),o.od.assertAxesAreInnerMostDims("any",f,y.shape.length);const[x,O]=o.od.computeOutAndReduceShapes(y.shape,f),w=o.of.sizeFromShape(O),v=o.of.makeZerosTypedArray(o.of.sizeFromShape(x),y.dtype),k=n.data.get(y.dataId).values;for(let i=0;i<v.length;++i){const e=i*w;let t=k[e];for(let n=0;n<w;++n){const r=k[e+n];t=t||r}v[i]=t}null!=m&&n.disposeIntermediateTensorInfo(y);const I=n.makeTensorInfo(x,y.dtype,v);if(d){const e=Sd({inputs:{x:I},backend:n,attrs:{shape:o.od.expandShapeToKeepDim(x,h)}});return n.disposeIntermediateTensorInfo(I),e}return I}};const Ud={kernelName:o.h,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l}=r;Ul(c,"argMax");let d=o.of.parseAxisParam(l,c.shape);const h=o.od.getAxesPermutation(d,c.shape.length);let f=c;const m=[];null!=h&&(f=Pd({inputs:{x:c},backend:n,attrs:{perm:h}}),m.push(f),d=o.od.getInnerMostAxes(d.length,f.shape.length)),d=[d[0]],o.od.assertAxesAreInnerMostDims("argMax",d,f.shape.length);const[y,x]=o.od.computeOutAndReduceShapes(f.shape,d),O=o.of.sizeFromShape(y),w=o.of.makeZerosTypedArray(O,"int32"),v=o.of.sizeFromShape(x),k=n.data.get(f.dataId).values;for(let i=0;i<w.length;++i){const e=i*v;let t=k[e],n=0;for(let r=0;r<v;++r){const o=k[e+r];o>t&&(t=o,n=r)}w[i]=n}return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,"int32",w)}};const Gd={kernelName:o.i,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l}=r;Ul(c,"argMin");let d=o.of.parseAxisParam(l,c.shape);const h=o.od.getAxesPermutation(d,c.shape.length);let f=c;const m=[];null!=h&&(f=Pd({inputs:{x:c},backend:n,attrs:{perm:h}}),m.push(f),d=o.od.getInnerMostAxes(d.length,f.shape.length)),d=[d[0]],o.od.assertAxesAreInnerMostDims("argMin",d,f.shape.length);const[y,x]=o.od.computeOutAndReduceShapes(f.shape,d),O=o.of.sizeFromShape(y),w=o.of.makeZerosTypedArray(O,"int32"),v=o.of.sizeFromShape(x),k=n.data.get(f.dataId).values;for(let i=0;i<w.length;++i){const e=i*v;let t=k[e],n=0;for(let r=0;r<v;++r){const o=k[e+r];o<t&&(t=o,n=r)}w[i]=n}return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,"int32",w)}},Hd=Kl(o.j,(e=>Math.asin(e))),Kd={kernelName:o.j,backendName:"cpu",kernelFunc:Hd},qd=Kl(o.k,(e=>Math.asinh(e))),Xd={kernelName:o.k,backendName:"cpu",kernelFunc:qd},Yd=Kl(o.l,(e=>Math.atan(e))),Jd={kernelName:o.l,backendName:"cpu",kernelFunc:Yd},Zd=nd(((e,t)=>Math.atan2(e,t))),Qd=wd(o.m,Zd),eh={kernelName:o.m,backendName:"cpu",kernelFunc:Qd},nh=Kl(o.n,(e=>Math.atanh(e))),rh={kernelName:o.n,backendName:"cpu",kernelFunc:nh};function ah(e,t,n,r,c,l){const d=c.strideHeight,h=c.strideWidth,f=c.dilationHeight,m=c.dilationWidth,y=c.effectiveFilterHeight,x=c.effectiveFilterWidth,O=c.padInfo.top,w=c.padInfo.left,v="max"===l?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,output=Object(o.td)(c.outShape,n),k=output.values,I=c.outShape[1]*c.outShape[2]*c.outShape[3],N=c.outShape[2]*c.outShape[3],j=c.outShape[3];for(let b=0;b<c.batchSize;++b){const t=b*I,n=b*r[0];for(let o=0;o<c.inChannels;++o)for(let I=0;I<c.outHeight;++I){const S=I*d-O,T=Math.max(0,S),C=Math.min(c.inHeight,y+S),$=t+I*N;for(let t=0;t<c.outWidth;++t){const d=t*h-w,y=Math.max(0,d),O=Math.min(c.inWidth,x+d);let I=v,N=0,S=0;for(let t=T;t<C;t+=f){const c=n+t*r[1];for(let t=y;t<O;t+=m){const n=e[c+t*r[2]+o];"max"===l&&n>I?I=n:"avg"===l&&(N+=n,S++)}if(isNaN(I))break}k[$+t*j+o]="avg"===l?N/S:I}}}return output}function sh(e,t,n,r,c=!1,l=!1){const d=Object(o.td)(r.outShape,"int32"),h=r.strideHeight,f=r.strideWidth,m=r.dilationHeight,y=r.dilationWidth,x=r.effectiveFilterHeight,O=r.effectiveFilterWidth,w=r.padInfo.top,v=r.padInfo.left,k=Object(o.td)(t,n,e);for(let b=0;b<r.batchSize;++b)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){const n=t*h-w;let o=n;for(;o<0;)o+=m;const I=Math.min(r.inHeight,x+n);for(let h=0;h<r.outWidth;++h){const x=h*f-v;let w=x;for(;w<0;)w+=y;const N=Math.min(r.inWidth,O+x);let j=Number.NEGATIVE_INFINITY,S=-1;for(let t=o;t<I;t+=m){const o=t-n;for(let n=w;n<N;n+=y){const d=n-x,h=k.get(b,t,n,e);h>j&&(j=h,S=c?l?((b*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:o*O+d)}}d.set(S,b,t,h,e)}}return d}function oh(e,t,n,r,c,l){const d=c.strideDepth,h=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,y=c.dilationHeight,x=c.dilationWidth,O=c.effectiveFilterDepth,w=c.effectiveFilterHeight,v=c.effectiveFilterWidth,k=c.padInfo.front,I=c.padInfo.top,N=c.padInfo.left,j="max"===l?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,output=Object(o.td)(c.outShape,n),S=output.values,T=c.outShape[1]*c.outShape[2]*c.outShape[3]*c.outShape[4],C=c.outShape[2]*c.outShape[3]*c.outShape[4],$=c.outShape[3]*c.outShape[4],E=c.outShape[4];for(let t=0;t<c.batchSize;++t){const n=t*T,o=t*r[0];for(let t=0;t<c.inChannels;++t)for(let T=0;T<c.outDepth;++T){const A=T*d-k;let R=A;for(;R<0;)R+=m;const F=Math.min(c.inDepth,O+A),D=n+T*C;for(let n=0;n<c.outHeight;++n){const d=n*h-I;let O=d;for(;O<0;)O+=y;const k=Math.min(c.inHeight,w+d),T=D+n*$;for(let n=0;n<c.outWidth;++n){const d=n*f-N;let h=d;for(;h<0;)h+=x;const w=Math.min(c.inWidth,v+d),I=T+n*E;let C=j,$=0,A=0;for(let n=R;n<F;n+=m){const c=o+n*r[1];for(let n=O;n<k;n+=y){const o=c+n*r[2];for(let n=h;n<w;n+=x){const c=e[o+n*r[3]+t];if("max"===l&&c>C?C=c:"avg"===l&&($+=c,A++),isNaN(C))break}if(isNaN(C))break}if(isNaN(C))break}S[I+t]="avg"===l?$/A:C}}}}return output}const ih={kernelName:o.o,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t;Ul(c,"avgPool");const{filterSize:l,strides:d,pad:h,dimRoundingMode:f}=r;o.of.assert(o.od.eitherStridesOrDilationsAreOne(d,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${d} and dilations '1'`));const m=o.od.computePool2DInfo(c.shape,l,d,1,h,f);let y;if(1===m.filterWidth&&1===m.filterHeight&&o.of.arraysEqual(m.inShape,m.outShape))y=Jl({inputs:{x:c},backend:n});else{const e=n.data.get(c.dataId).values,t=o.of.computeStrides(c.shape),r=ah(e,c.shape,c.dtype,t,m,"avg");y=n.makeTensorInfo(m.outShape,c.dtype,r.values)}return y}};const uh={kernelName:o.p,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{filterSize:l,strides:d,pad:h,dimRoundingMode:f,dataFormat:m}=r;Ul(c,"avgPool3d");const y=o.od.computePool3DInfo(c.shape,l,d,1,h,f,m),x=oh(n.data.get(c.dataId).values,c.shape,c.dtype,o.of.computeStrides(c.shape),y,"avg");return n.makeTensorInfo(x.shape,"float32",x.values)}};const ch={kernelName:o.q,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,input:input}=t,{filterSize:l,strides:d,pad:h,dimRoundingMode:f}=r;Ul([c,input],"avgPool3DGrad");const m=o.od.computePool3DInfo(input.shape,l,d,1,h,f),y=m.strideDepth,x=m.strideHeight,O=m.strideWidth,w=m.filterDepth,v=m.filterHeight,k=m.filterWidth,I=m.dilationDepth,N=m.dilationHeight,j=m.dilationWidth,S=m.effectiveFilterDepth,T=m.effectiveFilterHeight,C=m.effectiveFilterWidth,$=S-1-m.padInfo.front,E=C-1-m.padInfo.left,A=T-1-m.padInfo.top,R=Object(o.td)(input.shape,"float32"),F=1/(w*v*k),D=n.bufferSync(c);for(let e=0;e<m.batchSize;++e)for(let t=0;t<m.inChannels;++t)for(let n=0;n<m.inDepth;++n)for(let r=0;r<m.inHeight;++r)for(let o=0;o<m.inWidth;++o){const c=n-$,l=r-A,d=o-E;let h=0;for(let n=0;n<S;n+=I){const r=(c+n)/y;if(!(r<0||r>=m.outDepth||Math.floor(r)!==r))for(let n=0;n<T;n+=N){const o=(l+n)/x;if(!(o<0||o>=m.outHeight||Math.floor(o)!==o))for(let n=0;n<C;n+=j){const c=(d+n)/O;if(c<0||c>=m.outWidth||Math.floor(c)!==c)continue;h+=D.get(e,r,o,c,t)}}}R.set(h*F,e,n,r,o,t)}return n.makeTensorInfo(R.shape,R.dtype,R.values)}};const lh={kernelName:o.r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,input:input}=t,l=input;Ul([c,input],"avgPoolGrad");const{filterSize:d,strides:h,pad:f}=r,m=o.od.computePool2DInfo(l.shape,d,h,1,f),y=m.strideHeight,x=m.strideWidth,O=m.filterHeight,w=m.filterWidth,v=m.dilationHeight,k=m.dilationWidth,I=m.effectiveFilterHeight,N=m.effectiveFilterWidth,j=N-1-m.padInfo.left,S=I-1-m.padInfo.top,T=Object(o.td)(l.shape,"float32"),C=1/(O*w),$=n.data.get(c.dataId).values,E=Object(o.td)(c.shape,"float32",$);for(let b=0;b<m.batchSize;++b)for(let e=0;e<m.inChannels;++e)for(let t=0;t<m.inHeight;++t)for(let n=0;n<m.inWidth;++n){const r=t-S,o=n-j;let c=0;for(let t=0;t<I;t+=v){const n=(r+t)/y;if(!(n<0||n>=m.outHeight||Math.floor(n)!==n))for(let t=0;t<N;t+=k){const r=(o+t)/x;if(r<0||r>=m.outWidth||Math.floor(r)!==r)continue;c+=E.get(b,n,r,e)}}T.set(c*C,b,t,n,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};const dh={kernelName:o.jb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,scale:l,offset:d,mean:h,variance:f}=t;o.of.assert(h.shape.length===f.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),o.of.assert(null==d||h.shape.length===d.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),o.of.assert(null==l||h.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Ul([c,h,f,l,d],"batchNorm");let{varianceEpsilon:m}=r;null==m&&(m=.001);const y=n.data.get(c.dataId).values,x=n.data.get(h.dataId).values,O=n.data.get(f.dataId).values,w=l?n.data.get(l.dataId).values:new Float32Array([1]),v=d?n.data.get(d.dataId).values:new Float32Array([0]),k=new Float32Array(y.length),I=v.length,N=w.length,j=O.length,S=x.length;let T=0,C=0,$=0,E=0;for(let i=0;i<y.length;++i)k[i]=v[T++]+(y[i]-x[C++])*w[$++]/Math.sqrt(O[E++]+m),T>=I&&(T=0),C>=S&&(C=0),$>=N&&($=0),E>=j&&(E=0);return n.makeTensorInfo(c.shape,c.dtype,k)}};function hh(e,t,n,r,c){const l=o.Se.isSliceContinous(r,t,n),d=o.of.sizeFromShape(n),h=o.of.computeStrides(r);if(l){const n=o.Se.computeFlatOffset(t,h);return"string"===c?e.slice(n,n+d):e.subarray(n,n+d)}const f="string"===c?o.od.fromUint8ToStringArray(e):e,m=Object(o.td)(r,c,f),y=Object(o.td)(n,c);for(let i=0;i<y.size;++i){const e=y.indexToLoc(i),n=e.map(((e,n)=>e+t[n]));y.set(m.get(...n),...e)}return"string"===c?o.od.fromStringArrayToUint8(y.values):y.values}function ph(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{begin:l,size:d}=r;Ul(c,"slice");const[h,f]=o.Se.parseSliceParams(c,l,d);o.Se.assertParamsValid(c,h,f);const m=hh(n.data.get(c.dataId).values,h,f,c.shape,c.dtype);return n.makeTensorInfo(f,c.dtype,m)}const fh={kernelName:o.Fc,backendName:"cpu",kernelFunc:ph};const mh={kernelName:o.t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{blockShape:l,crops:d}=r;Ul([c],"batchToSpaceND");const h=l.reduce(((a,b)=>a*b)),f=o.od.getReshaped(c.shape,l,h),m=o.od.getPermuted(f.length,l.length),y=o.od.getReshapedPermuted(c.shape,l,h),x=o.od.getSliceBeginCoords(d,l.length),O=o.od.getSliceSize(y,d,l.length),w=Sd({inputs:{x:c},backend:n,attrs:{shape:f}}),v=Pd({inputs:{x:w},backend:n,attrs:{perm:m}}),k=Sd({inputs:{x:v},backend:n,attrs:{shape:y}}),I=ph({inputs:{x:k},backend:n,attrs:{begin:x,size:O}});return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(k),I}};function bh(e,t,n,r,c){const l=o.of.sizeFromShape(r),d=o.of.makeZerosTypedArray(c,n);for(let i=0;i<e.length;i++){const n=e[i];if(n<0)throw new Error("Input x must be non-negative!");n>=c||(d[n]+=l>0?t[i]:1)}return d}function gh(e,t,n,r=!1){const c=e.shape[0],l=e.shape[1],d=Object(o.td)([c,n],t.dtype);for(let i=0;i<c;i++)for(let o=0;o<l;o++){const c=e.get(i,o);if(c<0)throw new Error("Input x must be non-negative!");c>=n||(r?d.set(1,i,c):t.size>0?d.set(d.get(i,c)+t.get(i,o),i,c):d.set(d.get(i,c)+1,i,c))}return d}const yh={kernelName:o.u,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,weights:c}=t,{size:l}=r,d=bh(n.data.get(o.dataId).values,n.data.get(c.dataId).values,c.dtype,c.shape,l);return n.makeTensorInfo([l],c.dtype,d)}};function xh(e){return(t,n,r)=>{const c=o.of.getTypedArrayFromDType(n,t.length);for(let i=0;i<t.length;++i)c[i]=e(t[i],r);return c}}const Oh=xh((e=>Math.ceil(e))),wh=ql(o.w,Oh),vh={kernelName:o.w,backendName:"cpu",kernelFunc:wh},kh=Kl(o.x,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),Ih={kernelName:o.x,backendName:"cpu",kernelFunc:kh},Nh={kernelName:o.z,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(o.of.sizeFromShape(t.shape)),c=n.data.get(t.dataId),l=c.complexTensorInfos.real,d=c.complexTensorInfos.imag,h=n.data.get(l.dataId).values,f=n.data.get(d.dataId).values;for(let i=0;i<h.length;i++){const e=h[i],t=f[i];r[i]=Math.hypot(e,t)}return n.makeOutput(r,t.shape,"float32")}};function jh(e,t,n,r){const c=o.of.getArrayFromDType(n,o.of.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((input=>{const e=o.of.sizeFromShape(input.shape);c.set(input.vals,t),t+=e}))}else{let r=0;e.forEach((input=>{const e="string"===n?o.od.fromUint8ToStringArray(input.vals):input.vals;let l=0;for(let n=0;n<input.shape[0];++n){const o=n*t[1]+r;for(let col=0;col<input.shape[1];++col)c[o+col]=e[l++]}r+=input.shape[1]}))}return c}function Sh(e){const{inputs:t,backend:n}=e,{input:input}=t,r=n.data.get(input.dataId).complexTensorInfos.imag,o=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,o)}const Th={kernelName:o.sb,backendName:"cpu",kernelFunc:Sh};function Ch(e){const{inputs:t,backend:n,attrs:r}=e,{axis:c}=r,l=o.of.parseAxisParam(c,t[0].shape)[0];let d=o.od.computeOutShape(t.map((e=>e.shape)),l);if(0===o.of.sizeFromShape(d))return n.makeTensorInfo(d,t[0].dtype,[]);const h=t.filter((e=>o.of.sizeFromShape(e.shape)>0));if(1===h.length)return Jl({inputs:{x:h[0]},backend:n});const f=h.map((e=>e.shape));if(o.od.assertParamsConsistent(f,l),"complex64"===h[0].dtype){const e=h.map((e=>gd({inputs:{input:e},backend:n}))),t=h.map((e=>Sh({inputs:{input:e},backend:n}))),r=Ch({inputs:e,backend:n,attrs:{axis:l}}),o=Ch({inputs:t,backend:n,attrs:{axis:l}}),c=fd({inputs:{real:r,imag:o},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((i=>n.disposeIntermediateTensorInfo(i))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(o),c}const m=h.map((e=>{const t=o.of.sizeFromShape(e.shape.slice(l));return Sd({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),y=m.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));d=o.od.computeOutShape(m.map((e=>e.shape)),1);const x=1===m[0].shape[0],O=jh(y,d,t[0].dtype,x),w=o.od.computeOutShape(h.map((e=>e.shape)),l),v=n.makeTensorInfo(w,t[0].dtype,O);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}const $h={kernelName:o.A,backendName:"cpu",kernelFunc:Ch};function Eh(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,filter:filter}=t,{strides:l,pad:d,dataFormat:h,dilations:f,dimRoundingMode:m}=r;Ul([c,filter],"conv2d");const y=o.od.convertConv2DDataFormat(h),x=o.od.computeConv2DInfo(c.shape,filter.shape,l,f,d,m,!1,y),O=x.filterHeight,w=x.filterWidth,v=x.dilationHeight,k=x.dilationWidth,I=x.padInfo.left,N=x.padInfo.top,j="channelsLast"===x.dataFormat,S=new o.Wc(x.outShape,c.dtype),T=o.of.computeStrides(c.shape),C=o.of.computeStrides(filter.shape),$=T[0],E=j?T[1]:T[2],A=j?T[2]:1,R=j?1:T[1],F=S.strides[0],D=j?S.strides[1]:S.strides[2],_=j?S.strides[2]:1,M=j?1:S.strides[1],L=n.data.get(c.dataId).values,z=n.data.get(filter.dataId).values,P=S.values;for(let b=0;b<x.batchSize;++b){const e=b*$,t=b*F;for(let n=0;n<x.outHeight;++n){const r=t+n*D,o=n*x.strideHeight-N;for(let t=0;t<O;++t){const n=o+t*v;if(n<0||n>=x.inHeight)continue;const c=t*C[0],l=e+n*E;for(let e=0;e<x.outWidth;++e){const t=r+e*_,n=e*x.strideWidth-I;for(let e=0;e<w;++e){const r=n+e*k;if(r<0||r>=x.inWidth)continue;const o=l+r*A;let d=c+e*C[1];for(let e=0;e<x.inChannels;++e){const n=L[o+e*R];for(let e=0;e<x.outChannels;++e)P[t+e*M]+=n*z[d+e];d+=x.outChannels}}}}}}return n.makeTensorInfo(S.shape,S.dtype,P)}const Ah={kernelName:o.B,backendName:"cpu",kernelFunc:Eh};const Rh={kernelName:o.C,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,dy:l}=t,{strides:d,pad:h,dataFormat:f,dimRoundingMode:m,filterShape:y}=r;Ul([c,l],"conv2dBackpropFilter");const x=o.od.convertConv2DDataFormat(f),O=o.od.computeConv2DInfo(c.shape,y,d,1,h,m,!1,x),{strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I}=O,N="channelsLast"===O.dataFormat,j=new o.Wc(O.filterShape,"float32"),S=O.padInfo.left,T=O.padInfo.top,C=n.data.get(c.dataId).values,$=n.data.get(l.dataId).values,E=new o.Wc(c.shape,c.dtype,C),A=new o.Wc(l.shape,l.dtype,$);for(let e=0;e<k;++e){const t=Math.max(0,Math.ceil((T-e)/w)),n=Math.min(O.outHeight,(O.inHeight+T-e)/w);for(let r=0;r<I;++r){const o=Math.max(0,Math.ceil((S-r)/v)),c=Math.min(O.outWidth,(O.inWidth+S-r)/v);for(let l=0;l<O.inChannels;++l)for(let d=0;d<O.outChannels;++d){let h=0;for(let b=0;b<O.batchSize;++b)for(let f=t;f<n;++f){const t=e+f*w-T;for(let e=o;e<c;++e){const n=r+e*v-S;h+=N?E.get(b,t,n,l)*A.get(b,f,e,d):E.get(b,l,t,n)*A.get(b,d,f,e)}}j.set(h,e,r,l,d)}}}return n.makeTensorInfo(j.shape,j.dtype,j.values)}};const Fh={kernelName:o.D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,filter:filter}=t,{inputShape:l,strides:d,pad:h,dataFormat:f,dimRoundingMode:m}=r;Ul([c,filter],"conv2dBackpropInput");const y=o.of.computeStrides(filter.shape),x=o.of.computeStrides(c.shape);let O=o.od.convertConv2DDataFormat(f);const w=o.od.computeConv2DInfo(l,filter.shape,d,1,h,m,!1,O),v=new o.Wc(w.inShape,"float32"),k=v.values,I=n.data.get(c.dataId).values,N=n.data.get(filter.dataId).values,[j,S,T]=y,{batchSize:C,filterHeight:$,filterWidth:E,inChannels:A,inHeight:R,inWidth:F,outChannels:D,outHeight:_,outWidth:M,strideHeight:L,strideWidth:z}=w;O=w.dataFormat;const P=$-1-w.padInfo.top,B=E-1-w.padInfo.left,W="channelsLast"===O,V=v.strides[0],U=W?v.strides[1]:v.strides[2],G=W?v.strides[2]:1,H=W?1:v.strides[1],K=x[0],X=W?x[1]:x[2],Y=W?x[2]:1,J=W?1:x[1];for(let b=0;b<C;++b)for(let e=0;e<A;++e)for(let t=0;t<R;++t){const n=t-P,r=Math.max(0,Math.ceil(n/L)),o=Math.min(_,($+n)/L);for(let c=0;c<F;++c){const l=c-B,d=Math.max(0,Math.ceil(l/z)),h=Math.min(M,(E+l)/z);let f=0;for(let t=r;t<o;++t){const r=t*L-n;for(let n=d;n<h;++n){const o=K*b+X*t+Y*n,c=j*($-1-r)+S*(E-1-(n*z-l))+T*e;for(let e=0;e<D;++e){f+=I[o+J*e]*N[c+e]}}}k[V*b+U*t+G*c+H*e]=f}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const Dh={kernelName:o.E,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,filter:filter}=t,{strides:l,pad:d,dilations:h}=r;Ul([c,filter],"conv3d");const f=o.od.computeConv3DInfo(c.shape,filter.shape,l,h,d),{filterDepth:m,filterHeight:y,filterWidth:x,dilationDepth:O,dilationHeight:w,dilationWidth:v,padInfo:k}=f,I=k.front,N=k.left,j=k.top,S=new o.Wc(f.outShape,c.dtype),T=n.data.get(c.dataId).values,C=n.data.get(filter.dataId).values,$=S.values,E=o.of.computeStrides(c.shape),A=o.of.computeStrides(filter.shape);for(let b=0;b<f.batchSize;++b){const e=b*E[0],t=b*S.strides[0];for(let n=0;n<f.outDepth;++n){const r=t+n*S.strides[1],o=n*f.strideDepth-I;for(let t=0;t<m;++t){const n=o+t*O;if(n<0||n>=f.inDepth)continue;const c=t*A[0],l=e+n*E[1];for(let e=0;e<f.outHeight;++e){const t=r+e*S.strides[2],n=e*f.strideHeight-j;for(let e=0;e<y;++e){const r=n+e*w;if(r<0||r>=f.inHeight)continue;const o=c+e*A[1],d=l+r*E[2];for(let e=0;e<f.outWidth;++e){const n=t+e*f.outChannels,r=e*f.strideWidth-N;for(let e=0;e<x;++e){const t=r+e*v;if(t<0||t>=f.inWidth)continue;const c=o+e*A[2],l=d+t*f.inChannels;let h=c;for(let e=0;e<f.inChannels;++e){const t=T[l+e];for(let e=0;e<f.outChannels;++e)$[n+e]+=t*C[h+e];h+=f.outChannels}}}}}}}}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const _h={kernelName:o.F,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,dy:l}=t,{strides:d,pad:h,filterShape:f}=r;Ul([c,l],"conv3dBackpropFilterV2");const m=o.of.computeStrides(c.shape),y=o.of.computeStrides(l.shape),x=o.od.computeConv3DInfo(c.shape,f,d,1,h),O=x.strideDepth,w=x.strideHeight,v=x.strideWidth,k=x.filterDepth,I=x.filterHeight,N=x.filterWidth,j=new o.Wc(x.filterShape,"float32"),S=j.values,[T,C,$,E]=j.strides,A=n.data.get(l.dataId).values,[R,F,D,_]=y,M=n.data.get(c.dataId).values,[L,z,P,B]=m,W=x.padInfo.front,V=x.padInfo.left,U=x.padInfo.top;for(let e=0;e<k;++e){const t=Math.max(0,Math.ceil((W-e)/O)),n=Math.min(x.outDepth,(x.inDepth+W-e)/O),r=e*T;for(let o=0;o<I;++o){const c=Math.max(0,Math.ceil((U-o)/w)),l=Math.min(x.outHeight,(x.inHeight+U-o)/w),d=o*C+r;for(let r=0;r<N;++r){const h=Math.max(0,Math.ceil((V-r)/v)),f=Math.min(x.outWidth,(x.inWidth+V-r)/v),m=r*$+d;for(let d=0;d<x.inChannels;++d){const y=d*E+m;for(let m=0;m<x.outChannels;++m){let k=0;for(let b=0;b<x.batchSize;++b){const y=b*L,x=b*R;for(let I=t;I<n;++I){const t=(e+I*O-W)*z+y,n=I*F+x;for(let e=c;e<l;++e){const c=(o+e*w-U)*P+t,l=e*D+n;for(let e=h;e<f;++e){const t=e*_+l;k+=M[(r+e*v-V)*B+c+d]*A[t+m]}}}}S[y+m]=k}}}}}return n.makeTensorInfo(j.shape,j.dtype,j.values)}};const Mh={kernelName:o.G,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,filter:filter}=t,{pad:l,strides:d,inputShape:h}=r;Ul([c],"conv3dBackpropInputV2");const f=o.of.computeStrides(c.shape),m=o.of.computeStrides(filter.shape),y=o.od.computeConv3DInfo(h,filter.shape,d,1,l),x=new o.Wc(y.inShape,"float32"),O=x.values,[w,v,k,I]=x.strides,N=n.data.get(c.dataId).values,[j,S,T,C]=f,$=n.data.get(filter.dataId).values,[E,A,R,F]=m,{batchSize:D,filterDepth:_,filterHeight:M,filterWidth:L,inChannels:z,inDepth:P,inHeight:B,inWidth:W,outChannels:V,outDepth:U,outHeight:G,outWidth:H,strideDepth:K,strideHeight:X,strideWidth:Y}=y,J=_-1-y.padInfo.front,Z=M-1-y.padInfo.top,Q=L-1-y.padInfo.left;for(let b=0;b<D;++b)for(let e=0;e<z;++e)for(let t=0;t<P;++t){const n=t-J,r=Math.max(0,Math.ceil(n/K)),o=Math.min(U,(_+n)/K);for(let c=0;c<B;++c){const l=c-Z,d=Math.max(0,Math.ceil(l/X)),h=Math.min(G,(M+l)/X);for(let f=0;f<W;++f){const m=f-Q,y=Math.max(0,Math.ceil(m/Y)),x=Math.min(H,(L+m)/Y);let D=0;for(let t=r;t<o;++t){const r=t*K-n;for(let n=d;n<h;++n){const o=n*X-l;for(let c=y;c<x;++c){const l=j*b+S*t+T*n+C*c,d=E*(_-1-r)+A*(M-1-o)+R*(L-1-(c*Y-m))+F*e;for(let e=0;e<V;++e){D+=N[l+e]*$[d+e]}}}}O[w*b+v*t+k*c+I*f+e]=D}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},Lh=Kl(o.H,(e=>Math.cos(e))),zh={kernelName:o.H,backendName:"cpu",kernelFunc:Lh},Ph=Kl(o.I,(e=>Math.cosh(e))),Bh={kernelName:o.I,backendName:"cpu",kernelFunc:Ph};const Wh={kernelName:o.J,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:image,boxes:c,boxInd:l}=t,{cropSize:d,method:h,extrapolationValue:f}=r,[m,y,x,O]=image.shape,w=c.shape[0],[v,k]=d,output=Object(o.td)([w,v,k,O],"float32"),I=n.data.get(c.dataId).values,N=n.data.get(l.dataId).values,j=n.data.get(image.dataId).values,S=o.of.computeStrides(image.shape),T=o.of.computeStrides(output.shape);for(let b=0;b<w;b++){const e=4*b,t=I[e],n=I[e+1],r=I[e+2],o=I[e+3],c=N[b];if(c>=m)continue;const l=v>1?(r-t)*(y-1)/(v-1):0,d=k>1?(o-n)*(x-1)/(k-1):0;for(let e=0;e<v;e++){const m=v>1?t*(y-1)+e*l:.5*(t+r)*(y-1);if(m<0||m>y-1)for(let t=0;t<k;t++)for(let n=0;n<O;n++){const r=n+t*T[2]+e*T[1]+b*T[0];output.values[r]=f}else if("bilinear"===h){const t=Math.floor(m),r=Math.ceil(m),l=m-t;for(let h=0;h<k;h++){const m=k>1?n*(x-1)+h*d:.5*(n+o)*(x-1);if(m<0||m>x-1){for(let t=0;t<O;t++){const n=t+h*T[2]+e*T[1]+b*T[0];output.values[n]=f}continue}const y=Math.floor(m),w=Math.ceil(m),v=m-y;for(let n=0;n<O;n++){let o=n+y*S[2]+t*S[1]+c*S[0];const d=j[o];o=n+w*S[2]+t*S[1]+c*S[0];const f=j[o];o=n+y*S[2]+r*S[1]+c*S[0];const m=j[o];o=n+w*S[2]+r*S[1]+c*S[0];const x=d+(f-d)*v,O=m+(j[o]-m)*v;o=n+h*T[2]+e*T[1]+b*T[0],output.values[o]=x+(O-x)*l}}}else for(let t=0;t<k;++t){const r=k>1?n*(x-1)+t*d:.5*(n+o)*(x-1);if(r<0||r>x-1){for(let n=0;n<O;n++){const r=n+t*T[2]+e*T[1]+b*T[0];output.values[r]=f}continue}const l=Math.round(r),h=Math.round(m);for(let n=0;n<O;n++){const r=n+l*S[2]+h*S[1]+c*S[0],o=n+t*T[2]+e*T[1]+b*T[0];output.values[o]=j[r]}}}}return n.makeTensorInfo(output.shape,output.dtype,output.values)}};const Vh={kernelName:o.K,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l,exclusive:d,reverse:h}=r;Ul(c,"cumsum");const f=o.od.getAxesPermutation([l],c.shape.length);let m=c;null!=f&&(m=Pd({inputs:{x:c},backend:n,attrs:{perm:f}}));const y=o.od.getInnerMostAxes(1,c.shape.length)[0];if(y!==m.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${m.shape.length-1} but got axis=${y}`);const x=Object(o.nf)(m.dtype,"int32"),O=o.of.makeZerosTypedArray(o.of.sizeFromShape(m.shape),x),w=n.data.get(m.dataId).values,v=m.shape[m.shape.length-1],k=h?(i,e)=>i+v-e-1:(i,e)=>i+e;for(let i=0;i<w.length;i+=v)for(let e=0;e<v;e++){const t=k(i,e);if(0===e)O[t]=d?0:w[t];else{const n=k(i,e-1);O[t]=d?w[n]+O[n]:w[t]+O[n]}}const I=n.makeTensorInfo(m.shape,x,O);if(null!=f){const e=Pd({inputs:{x:I},backend:n,attrs:{perm:o.od.getUndoAxesPermutation(f)}});return n.disposeIntermediateTensorInfo(I),n.disposeIntermediateTensorInfo(m),e}return I}};const Uh={kernelName:o.M,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,weights:c}=t,{size:l,binaryOutput:d}=r;if(1===o.shape.length){const e=bh(n.data.get(o.dataId).values,n.data.get(c.dataId).values,c.dtype,c.shape,l);return n.makeTensorInfo([l],c.dtype,e)}if(2===o.shape.length){const e=gh(n.bufferSync(o),n.bufferSync(c),l,d);return n.makeTensorInfo(e.shape,c.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}};const Gh={kernelName:o.N,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{blockSize:l,dataFormat:d}=r;o.of.assert("NHWC"===d,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${d}`)),o.of.assert(l>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${l}`));const h=c.shape[0],f=c.shape[1],m=c.shape[2],y=c.shape[3],x=f*l,O=m*l,w=y/(l*l),v=n.data.get(c.dataId).values,k=new Float32Array(h*x*O*w);let I=0;for(let b=0;b<h;++b)for(let e=0;e<x;++e){const t=Math.floor(e/l),n=e%l;for(let e=0;e<O;++e){const r=Math.floor(e/l),o=(n*l+e%l)*w;for(let e=0;e<w;++e){const n=e+o+y*(r+m*(t+f*b));k[I++]=v[n]}}}return n.makeTensorInfo([h,x,O,w],c.dtype,k)}};function Hh(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,filter:filter}=t,{strides:l,pad:d,dilations:h,dimRoundingMode:f}=r;Ul([c,filter],"depthwiseConv2DNative");const m=o.of.computeStrides(c.shape),y=o.of.computeStrides(filter.shape);let x=h;null==x&&(x=[1,1]),o.of.assert(o.od.eitherStridesOrDilationsAreOne(l,x),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${x}'`));const O=o.od.computeConv2DInfo(c.shape,filter.shape,l,x,d,f,!0),{filterHeight:w,filterWidth:v,dilationHeight:k,dilationWidth:I,padInfo:N}=O,j=N.left,S=N.top,T=O.outChannels/O.inChannels,C=new o.Wc(O.outShape,c.dtype),$=n.data.get(c.dataId).values,E=n.data.get(filter.dataId).values,A=C.values;for(let b=0;b<O.batchSize;++b){const e=b*m[0],t=b*C.strides[0];for(let n=0;n<O.outHeight;++n){const r=t+n*C.strides[1],o=n*O.strideHeight-S;for(let t=0;t<w;++t){const n=o+t*k;if(n<0||n>=O.inHeight)continue;const c=t*y[0],l=e+n*m[1];for(let e=0;e<O.outWidth;++e){const t=r+e*C.strides[2],n=e*O.strideWidth-j;for(let e=0;e<v;++e){const r=n+e*I;if(r<0||r>=O.inWidth)continue;const o=c+e*y[1],d=l+r*O.inChannels;let h=t,f=o;for(let e=0;e<O.inChannels;++e){const t=$[d+e];for(let q=0;q<T;++q)A[h+q]+=t*E[f+q];h+=T,f+=T}}}}}}return n.makeTensorInfo(C.shape,C.dtype,C.values)}const Kh={kernelName:o.O,backendName:"cpu",kernelFunc:Hh};const qh={kernelName:o.P,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,dy:l}=t,{strides:d,dilations:h,pad:f,dimRoundingMode:m,filterShape:y}=r;Ul([c,l],"depthwiseConv2dNativeBackpropFilter");const x=o.od.computeConv2DInfo(c.shape,y,d,h,f,m,!0),{strideHeight:O,strideWidth:w,filterHeight:v,filterWidth:k}=x,I=new o.Wc(x.filterShape,"float32"),N=x.padInfo.left,j=x.padInfo.top,S=x.outChannels/x.inChannels,T=n.data.get(c.dataId).values,C=new o.Wc(c.shape,c.dtype,T),$=n.data.get(l.dataId).values,E=new o.Wc(l.shape,l.dtype,$);for(let e=0;e<v;++e){const t=Math.max(0,Math.ceil((j-e)/O)),n=Math.min(x.outHeight,(x.inHeight+j-e)/O);for(let r=0;r<k;++r){const o=Math.max(0,Math.ceil((N-r)/w)),c=Math.min(x.outWidth,(x.inWidth+N-r)/w);for(let l=0;l<x.outChannels;++l){const d=Math.trunc(l/S),h=l%S;let f=0;for(let b=0;b<x.batchSize;++b)for(let h=t;h<n;++h){const t=e+h*O-j;for(let e=o;e<c;++e){const n=r+e*w-N;f+=C.get(b,t,n,d)*E.get(b,h,e,l)}}I.set(f,e,r,d,h)}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const Xh={kernelName:o.Q,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,filter:filter}=t,{strides:l,dilations:d,pad:h,dimRoundingMode:f,inputShape:m}=r;Ul([c,filter],"depthwiseConv2DNativeBackpropInput");const y=o.of.computeStrides(c.shape),x=o.of.computeStrides(filter.shape),O=o.od.computeConv2DInfo(m,filter.shape,l,d,h,f,!0),w=new o.Wc(O.inShape,"float32"),v=w.values,[k,I,N]=w.strides,j=n.data.get(c.dataId).values,[S,T,C]=y,$=n.data.get(filter.dataId).values,[E,A,R]=x,{batchSize:F,filterHeight:D,filterWidth:_,inChannels:M,inHeight:L,inWidth:z,outChannels:P,outHeight:B,outWidth:W,strideHeight:V,strideWidth:U}=O,G=D-1-O.padInfo.top,H=_-1-O.padInfo.left,K=P/M;for(let b=0;b<F;++b)for(let e=0;e<M;++e)for(let t=0;t<L;++t){const n=t-G,r=Math.max(0,Math.ceil(n/V)),o=Math.min(B,(D+n)/V);for(let c=0;c<z;++c){const l=c-H,d=Math.max(0,Math.ceil(l/U)),h=Math.min(W,(_+l)/U);let f=0;for(let t=r;t<o;++t){const r=t*V-n;for(let n=d;n<h;++n){const o=S*b+T*t+C*n,c=E*(D-1-r)+A*(_-1-(n*U-l))+R*e;for(let t=0;t<K;++t){f+=j[o+(e*K+t)]*$[c+t]}}}v[k*b+I*t+N*c+e]=f}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const Yh={kernelName:o.R,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,c=o.of.sizeFromShape(r.shape),l=n.data.get(r.dataId).values,d=Object(o.td)([c,c],r.dtype),h=d.values;for(let i=0;i<l.length;i++)h[i*c+i]=l[i];const f=[...r.shape,...r.shape];return n.makeTensorInfo(f,d.dtype,d.values)}},Jh={kernelName:o.S,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:filter}=e,{strides:c,pad:l,dilations:d}=n,h=t,f=h.data.get(r.dataId).values,m=r.shape.length,y=h.data.get(filter.dataId).values,x=filter.shape.length,{batchSize:O,inHeight:w,inWidth:v,inChannels:k,outHeight:I,outWidth:N,padInfo:j,strideHeight:S,strideWidth:T,filterHeight:C,filterWidth:$,dilationHeight:E,dilationWidth:A,outShape:R}=o.od.computeDilation2DInfo(r.shape,filter.shape,c,l,"NHWC",d),F=o.of.sizeFromShape(R),D=R.length,_=o.of.getArrayFromDType(r.dtype,F);for(let b=0;b<O;++b)for(let e=0;e<I;++e){const t=e*S-j.top;for(let n=0;n<N;++n){const c=n*T-j.left;for(let l=0;l<k;++l){let d=Number.MIN_SAFE_INTEGER;for(let e=0;e<C;++e){const n=t+e*E;if(n>=0&&n<w)for(let t=0;t<$;++t){const h=c+t*A;if(h>=0&&h<v){const c=o.of.locToIndex([b,n,h,l],m,o.of.computeStrides(r.shape)),O=o.of.locToIndex([e,t,l],x,o.of.computeStrides(filter.shape)),w=f[c]+y[O];w>d&&(d=w)}}}_[o.of.locToIndex([b,e,n,l],D,o.of.computeStrides(R))]=d}}}return{dataId:h.write(o.of.toTypedArray(_,r.dtype),R,r.dtype),shape:R,dtype:r.dtype}}},Zh={kernelName:o.T,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:filter,dy:c}=e,{strides:l,pad:d,dilations:h}=n,f=t,m=o.of.toNestedArray(r.shape,f.data.get(r.dataId).values),y=o.of.toNestedArray(filter.shape,f.data.get(filter.dataId).values),{batchSize:x,inHeight:O,inWidth:w,inChannels:v,outHeight:k,outWidth:I,padInfo:N,strideHeight:j,strideWidth:S,filterHeight:T,filterWidth:C,dilationHeight:$,dilationWidth:E,outShape:A}=o.od.computeDilation2DInfo(r.shape,filter.shape,l,d,"NHWC",h);o.of.assert(c.rank===A.length,(()=>`Error in ${o.T}, dy must have the same rank as output ${A.length}, but got ${c.rank}`));const R=o.of.toNestedArray(A,f.data.get(c.dataId).values),F=o.of.makeZerosNestedTypedArray(filter.shape,filter.dtype);for(let b=0;b<x;++b)for(let e=0;e<k;++e){const t=e*j-N.top;for(let n=0;n<I;++n){const r=n*S-N.left;for(let o=0;o<v;++o){let c=Number.MIN_SAFE_INTEGER,l=0,d=0;for(let e=0;e<T;++e){const n=t+e*$;if(n>=0&&n<O)for(let t=0;t<C;++t){const h=r+t*E;if(h>=0&&h<w){const r=m[b][n][h][o]+y[e][t][o];r>c&&(c=r,l=e,d=t)}}}F[l][d][o]+=R[b][e][n][o]}}}return{dataId:f.write(o.of.toTypedArray(F,r.dtype),filter.shape,filter.dtype),shape:filter.shape,dtype:filter.dtype}}},Qh={kernelName:o.U,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:filter,dy:c}=e,{strides:l,pad:d,dilations:h}=n,f=t,m=o.of.toNestedArray(r.shape,f.data.get(r.dataId).values),y=o.of.toNestedArray(filter.shape,f.data.get(filter.dataId).values),{batchSize:x,inHeight:O,inWidth:w,inChannels:v,outHeight:k,outWidth:I,padInfo:N,strideHeight:j,strideWidth:S,filterHeight:T,filterWidth:C,dilationHeight:$,dilationWidth:E,outShape:A}=o.od.computeDilation2DInfo(r.shape,filter.shape,l,d,"NHWC",h);o.of.assert(c.rank===A.length,(()=>`Error in ${o.U}, dy must have the same rank as output ${A.length}, but got ${c.rank}`));const R=o.of.toNestedArray(A,f.data.get(c.dataId).values),F=o.of.makeZerosNestedTypedArray(r.shape,r.dtype);for(let b=0;b<x;++b)for(let e=0;e<k;++e){const t=e*j-N.top;for(let n=0;n<I;++n){const r=n*S-N.left;for(let o=0;o<v;++o){let c=Number.MIN_SAFE_INTEGER,l=t<0?0:t,d=r<0?0:r;for(let e=0;e<T;++e){const n=t+e*$;if(n>=0&&n<O)for(let t=0;t<C;++t){const h=r+t*E;if(h>=0&&h<w){const r=m[b][n][h][o]+y[e][t][o];r>c&&(c=r,l=n,d=h)}}}F[b][l][d][o]+=R[b][e][n][o]}}}return{dataId:f.write(o.of.toTypedArray(F,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},ep=nd(((e,t)=>e*t)),tp=vd(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),np=wd(o.Vb,ep,tp),ap={kernelName:o.Vb,backendName:"cpu",kernelFunc:np};function sp(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l,keepDims:d}=r;let h;Ul(c,"sum"),h="bool"===c.dtype?xd({inputs:{x:c},backend:n,attrs:{dtype:"int32"}}):Jl({inputs:{x:c},backend:n});const f=h.shape.length,m=o.of.parseAxisParam(l,h.shape),y=o.od.getAxesPermutation(m,f);let x=m,O=h;null!=y&&(O=Pd({inputs:{x:h},backend:n,attrs:{perm:y}}),x=o.od.getInnerMostAxes(x.length,f)),o.od.assertAxesAreInnerMostDims("sum",x,O.shape.length);const[w,v]=o.od.computeOutAndReduceShapes(O.shape,x);let k=bd(n,w,o.od.upcastType(O.dtype,"int32"));const I=o.of.sizeFromShape(v),N=n.data.get(k.dataId).values,j=n.data.get(O.dataId).values;for(let i=0;i<N.length;++i){const e=i*I;let t=0;for(let n=0;n<I;++n)t+=j[e+n];N[i]=t}if(d){const e=k;k=Sd({inputs:{x:k},backend:n,attrs:{shape:o.od.expandShapeToKeepDim(k.shape,m)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(h),null!=y&&n.disposeIntermediateTensorInfo(O),k}const op={kernelName:o.Sc,backendName:"cpu",kernelFunc:sp};const ip={kernelName:o.V,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:c}=r,l=t,{allDims:d,summedDims:h,idDims:f}=o.od.decodeEinsumEquation(c,l.length);o.od.checkEinsumDimSizes(d.length,f,l);const{path:path,steps:m}=o.od.getEinsumComputePath(h,f),y=m.length;let x=null,O=d.length;const w=[];for(let i=0;i<y;++i){for(const e of m[i]){const{permutationIndices:t,expandDims:r}=o.od.getEinsumPermutation(O,f[e]);let c;o.od.isIdentityPermutation(t)?c=l[e]:(c=Pd({inputs:{x:l[e]},backend:n,attrs:{perm:t}}),w.push(c));const d=c.shape.slice();for(let e=0;e<r.length;++e)d.splice(r[e],0,1);o.of.arraysEqual(c.shape,d)||(c=Sd({inputs:{x:c},backend:n,attrs:{shape:d}}),w.push(c)),null===x?x=c:(x=np({inputs:{a:c,b:x},backend:n}),w.push(x))}i<y-1&&(path[i]>=0&&(x=sp({inputs:{x:x},backend:n,attrs:{axis:path[i]-(d.length-O),keepDims:!1}}),w.push(x)),O--)}for(const e of w)e!==x&&n.disposeIntermediateTensorInfo(e);return x}};const up={kernelName:o.X,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:c}=t;Ul([r,c],"eluGrad");const l=new Float32Array(o.of.sizeFromShape(c.shape)),d=n.data.get(c.dataId).values,h=n.data.get(r.dataId).values;for(let i=0;i<d.length;++i){const e=d[i];l[i]=e>=1?h[i]:h[i]*(e+1)}return n.makeTensorInfo(c.shape,"float32",l)}},cp=nd(((a,b)=>a===b?1:0)),lp=wd(o.Y,cp,null,"bool"),dp={kernelName:o.Y,backendName:"cpu",kernelFunc:lp},hp=o.od.ERF_P,pp=o.od.ERF_A1,fp=o.od.ERF_A2,mp=o.od.ERF_A3,bp=o.od.ERF_A4,gp=o.od.ERF_A5,yp=Kl(o.Z,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+hp*n);return t*(1-((((gp*r+bp)*r+mp)*r+fp)*r+pp)*r*Math.exp(-n*n))})),xp={kernelName:o.Z,backendName:"cpu",kernelFunc:yp},Op=xh((e=>Math.exp(e))),wp=ql(o.ab,Op),vp={kernelName:o.ab,backendName:"cpu",kernelFunc:wp};function kp(e){const{inputs:t,backend:n,attrs:r}=e,{input:input}=t,{dim:c}=r,l=input.shape.length,d=input.shape.slice();let h=c;return c<0&&(o.of.assert(-(l+1)<=c,(()=>`Axis must be in the interval [${-(l+1)}, ${l}]`)),h=l+c+1),d.splice(h,0,1),Sd({inputs:{x:input},backend:n,attrs:{shape:d}})}const Ip={kernelName:o.bb,backendName:"cpu",kernelFunc:kp},Np=xh((e=>Math.expm1(e))),jp=ql(o.cb,Np),Sp={kernelName:o.cb,backendName:"cpu",kernelFunc:jp},Tp=nd(((a,b)=>a/b)),Cp=wd(o.lc,Tp),$p={kernelName:o.lc,backendName:"cpu",kernelFunc:Cp},Ep=nd(((e,t)=>e-t)),Ap=vd(((e,t,n,r)=>({real:e-n,imag:t-r}))),Rp=wd(o.Rc,Ep,Ap),Fp={kernelName:o.Rc,backendName:"cpu",kernelFunc:Rp};function Dp(input,e,t){const n=input.shape,r=n[0],c=n[1],l=t.data.get(input.dataId),d=l.complexTensorInfos.real,h=l.complexTensorInfos.imag,f=[r,c],m=o.of.sizeFromShape(f),y=o.of.getTypedArrayFromDType("float32",m),x=o.of.getTypedArrayFromDType("float32",m);for(let b=0;b<r;b++){const n=ph({inputs:{x:d},backend:t,attrs:{begin:[b,0],size:[1,c]}}),i=ph({inputs:{x:h},backend:t,attrs:{begin:[b,0],size:[1,c]}}),input=fd({inputs:{real:n,imag:i},backend:t}),{real:r,imag:l}=_p(input,e,t),f=o.od.mergeRealAndImagArrays(r,l);for(let e=0;e<c;e++){const t=o.od.getComplexWithIndex(f,e);y[b*c+e]=t.real,x[b*c+e]=t.imag}t.disposeIntermediateTensorInfo(n),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(input)}const O=t.makeTensorInfo(f,"float32",y),w=t.makeTensorInfo(f,"float32",x),v=fd({inputs:{real:O,imag:w},backend:t});return t.disposeIntermediateTensorInfo(O),t.disposeIntermediateTensorInfo(w),v}function _p(input,e,t){const n=o.of.sizeFromShape(input.shape),r=t.data.get(input.dataId),c=t.data.get(r.complexTensorInfos.real.dataId).values,l=t.data.get(r.complexTensorInfos.imag.dataId).values;if(0==((d=n)&d-1)){const r=Mp(c,l,n,e,t),d=[input.shape[0],input.shape[1]];if(e){const e=t.makeTensorInfo(d,"float32",r.real),c=t.makeTensorInfo(d,"float32",r.imag),l=t.makeTensorInfo([],"float32",o.of.createScalarValue(n,"float32")),h=Jl({inputs:{x:l},backend:t}),f=$p.kernelFunc({inputs:{a:e,b:l},backend:t}),m=$p.kernelFunc({inputs:{a:c,b:h},backend:t}),y=t.data.get(f.dataId).values,x=t.data.get(m.dataId).values;return t.disposeIntermediateTensorInfo(e),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),{real:y,imag:x}}return r}{const t=function(data,e,t){const n=new Float32Array(2*e);for(let r=0;r<e;r++){let c=0,l=0;for(let n=0;n<e;n++){const d=o.od.exponent(r*n,e,t),h=o.od.getComplexWithIndex(data,n);c+=h.real*d.real-h.imag*d.imag,l+=h.real*d.imag+h.imag*d.real}t&&(c/=e,l/=e),o.od.assignToTypedArray(n,c,l,r)}return n}(o.od.mergeRealAndImagArrays(c,l),n,e);return o.od.splitRealAndImagArrays(t)}var d}function Mp(e,t,n,r,c){if(1===n)return{real:e,imag:t};const data=o.od.mergeRealAndImagArrays(e,t),l=n/2,d=o.od.complexWithEvenIndex(data),h=d.real,f=d.imag,m=[h.length],y=c.makeTensorInfo(m,"float32",h),x=c.makeTensorInfo(m,"float32",f),O=fd({inputs:{real:y,imag:x},backend:c}),w=o.od.complexWithOddIndex(data),v=w.real,k=w.imag,I=[v.length],N=c.makeTensorInfo(I,"float32",v),j=c.makeTensorInfo(I,"float32",k),S=fd({inputs:{real:N,imag:j},backend:c}),T=Mp(h,f,l,r,c),C=T.real,$=T.imag,E=[C.length],A=c.makeTensorInfo(E,"float32",C),R=c.makeTensorInfo(E,"float32",$),F=fd({inputs:{real:A,imag:R},backend:c}),D=Mp(v,k,l,r,c),_=D.real,M=D.imag,L=[_.length],z=c.makeTensorInfo(L,"float32",_),P=c.makeTensorInfo(L,"float32",M),B=fd({inputs:{real:z,imag:P},backend:c}),W=o.od.exponents(n,r),V=[W.real.length],U=c.makeTensorInfo(V,"float32",W.real),G=c.makeTensorInfo(V,"float32",W.imag),H=fd({inputs:{real:U,imag:G},backend:c}),K=np({inputs:{a:H,b:B},backend:c}),X=Nd({inputs:{a:F,b:K},backend:c}),Y=Rp({inputs:{a:F,b:K},backend:c}),J=gd({inputs:{input:X},backend:c}),Z=gd({inputs:{input:Y},backend:c}),Q=Sh({inputs:{input:X},backend:c}),ee=Sh({inputs:{input:Y},backend:c}),te=Ch({inputs:[J,Z],backend:c,attrs:{axis:0}}),ne=Ch({inputs:[Q,ee],backend:c,attrs:{axis:0}}),re=c.data.get(te.dataId).values,ae=c.data.get(ne.dataId).values;return c.disposeIntermediateTensorInfo(y),c.disposeIntermediateTensorInfo(x),c.disposeIntermediateTensorInfo(O),c.disposeIntermediateTensorInfo(N),c.disposeIntermediateTensorInfo(j),c.disposeIntermediateTensorInfo(S),c.disposeIntermediateTensorInfo(A),c.disposeIntermediateTensorInfo(R),c.disposeIntermediateTensorInfo(F),c.disposeIntermediateTensorInfo(z),c.disposeIntermediateTensorInfo(P),c.disposeIntermediateTensorInfo(B),c.disposeIntermediateTensorInfo(U),c.disposeIntermediateTensorInfo(G),c.disposeIntermediateTensorInfo(H),c.disposeIntermediateTensorInfo(K),c.disposeIntermediateTensorInfo(X),c.disposeIntermediateTensorInfo(Y),c.disposeIntermediateTensorInfo(J),c.disposeIntermediateTensorInfo(Q),c.disposeIntermediateTensorInfo(Z),c.disposeIntermediateTensorInfo(ee),c.disposeIntermediateTensorInfo(te),c.disposeIntermediateTensorInfo(ne),{real:re,imag:ae}}const Lp={kernelName:o.db,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:input}=t,r=o.of.sizeFromShape(input.shape),c=input.shape[input.shape.length-1],l=Sd({inputs:{x:input},backend:n,attrs:{shape:[r/c,c]}}),d=Dp(l,!1,n),h=Sd({inputs:{x:d},backend:n,attrs:{shape:input.shape}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),h}};function zp(e){const{backend:t,attrs:n}=e,{shape:r,value:c,dtype:l}=n,d=l||o.of.inferDtype(c),h=o.of.getArrayFromDType(d,o.of.sizeFromShape(r));return function(e,t,n){e.fill(t)}(h,c),t.makeTensorInfo(r,d,h)}const Pp={kernelName:o.eb,backendName:"cpu",kernelFunc:zp};const Bp={kernelName:o.fb,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:image}=e,r=n,output=o.of.getTypedArrayFromDType(image.dtype,o.of.sizeFromShape(image.shape)),[c,l,d,h]=image.shape,f=r.data.get(image.dataId).values;for(let e=0;e<c;e++){const t=e*d*l*h;for(let e=0;e<l;e++){const n=e*(d*h);for(let col=0;col<d;col++){const r=col*h;for(let o=0;o<h;o++){const l=[c,e,col,o][2],m=Math.round(d-l),y=t+n+r+o;let x=f[y];if(m>=0&&m<d){x=f[t+n+m*h+o]}output[y]=x}}}}return{dataId:r.write(output,image.shape,image.dtype),shape:image.shape,dtype:image.dtype}}},Wp=xh((e=>Math.floor(e))),Vp=ql(o.gb,Wp),Up={kernelName:o.gb,backendName:"cpu",kernelFunc:Vp},Gp=nd(((a,b)=>Math.floor(a/b))),Hp=wd(o.hb,Gp,null,"int32"),Kp={kernelName:o.hb,backendName:"cpu",kernelFunc:Hp};const qp={kernelName:o.kb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,filter:filter,bias:c,preluActivationWeights:l}=t,{strides:d,pad:h,dataFormat:f,dilations:m,dimRoundingMode:y,activation:x,leakyreluAlpha:O}=r;let w=Eh({inputs:{x:o,filter:filter},backend:n,attrs:{strides:d,pad:h,dataFormat:f,dilations:m,dimRoundingMode:y}});if(c){const e=w;w=Nd({inputs:{a:w,b:c},backend:n}),n.disposeIntermediateTensorInfo(e)}if(x){const e=w;w=pd(n,w,x,l,O),n.disposeIntermediateTensorInfo(e)}return w}};const Xp={kernelName:o.lb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,filter:filter,bias:c,preluActivationWeights:l}=t,{strides:d,pad:h,dataFormat:f,dilations:m,dimRoundingMode:y,activation:x,leakyreluAlpha:O}=r;let w=Hh({inputs:{x:o,filter:filter},backend:n,attrs:{strides:d,pad:h,dataFormat:f,dilations:m,dimRoundingMode:y}});if(c){const e=w;w=Nd({inputs:{a:w,b:c},backend:n}),n.disposeIntermediateTensorInfo(e)}if(x){const e=w;w=pd(n,w,x,l,O),n.disposeIntermediateTensorInfo(e)}return w}};const Yp={kernelName:o.mb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:c}=t,l=o.of.sizeFromShape(r.shape),d=c.shape,h=d[d.length-1],[f,m,y,x]=o.od.prepareAndValidate(r,c);if(0===m)return n.makeTensorInfo(f,r.dtype,[]);const O=Object(o.td)([m,y],r.dtype),w=n.data.get(c.dataId).values,v=n.data.get(r.dataId).values;for(let i=0;i<m;i++){const e=[];let t=0;for(let n=0;n<h;n++){const r=w[i*h+n];t+=r*x[n],e.push(r)}if(t<0||t>=l/y)throw new Error(`Invalid indices: ${e} does not index into ${r.shape}`);for(let e=0;e<y;e++)O.values[i*y+e]=v[t*y+e]}return n.makeTensorInfo(f,O.dtype,O.values)}};function Jp(e,t,n){const r=Object(o.td)(n,e.dtype);for(let i=0;i<r.size;++i){const n=r.indexToLoc(i).slice(),o=n[0],c=n[2],l=t.locToIndex([o,c]);n[2]=t.values[l];const d=e.locToIndex(n);r.values[i]=e.values[d]}return r}const Zp={kernelName:o.nb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,indices:l}=t,{axis:d,batchDims:h}=r;Ul([c,l],"gatherV2");let f=h;null==h&&(f=0);const m=o.of.sizeFromShape(l.shape),y=o.of.parseAxisParam(d,c.shape)[0],x=o.od.segment_util.collectGatherOpShapeInfo(c,l,y,f),O=Sd({inputs:{x:c},backend:n,attrs:{shape:[x.batchSize,x.outerSize,x.dimSize,x.sliceSize]}}),w=Sd({inputs:{x:l},backend:n,attrs:{shape:[x.batchSize,m/x.batchSize]}}),v=[x.batchSize,x.outerSize,m/x.batchSize,x.sliceSize],k=n.bufferSync(w),I=Jp(n.bufferSync(O),k,v);return n.disposeIntermediateTensorInfo(O),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(x.outputShape,I.dtype,I.values)}},Qp=nd(((a,b)=>a>b?1:0)),ef=wd(o.ob,Qp,null,"bool"),tf={kernelName:o.ob,backendName:"cpu",kernelFunc:ef},nf=nd(((a,b)=>a>=b?1:0)),rf=wd(o.pb,nf,null,"bool"),af={kernelName:o.pb,backendName:"cpu",kernelFunc:rf};const sf={kernelName:o.qb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:input}=t,r=o.of.sizeFromShape(input.shape),c=input.shape[input.shape.length-1],l=Sd({inputs:{x:input},backend:n,attrs:{shape:[r/c,c]}}),d=Dp(l,!0,n),h=Sd({inputs:{x:d},backend:n,attrs:{shape:input.shape}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),h}},of=Kl(o.tb,(e=>Number.isFinite(e)?1:0),"bool"),uf={kernelName:o.tb,backendName:"cpu",kernelFunc:of},cf=Kl(o.ub,(e=>Math.abs(e)===1/0?1:0),"bool"),lf={kernelName:o.ub,backendName:"cpu",kernelFunc:cf},df=Kl(o.vb,(e=>Number.isNaN(e)?1:0),"bool"),hf={kernelName:o.vb,backendName:"cpu",kernelFunc:df},pf=nd(((a,b)=>a<b?1:0)),ff=wd(o.Ab,pf,null,"bool"),mf={kernelName:o.Ab,backendName:"cpu",kernelFunc:ff},bf=nd(((a,b)=>a<=b?1:0)),gf=wd(o.Bb,bf,null,"bool"),yf={kernelName:o.Bb,backendName:"cpu",kernelFunc:gf};function xf(e,t,n){const r=(t-e)/(n-1),c=o.of.makeZerosTypedArray(n,"float32");c[0]=e;for(let i=1;i<c.length;i++)c[i]=c[i-1]+r;return c}const Of={kernelName:o.Cb,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:o,num:c}=n,l=xf(r,o,c);return t.makeTensorInfo([l.length],"float32",l)}},wf=xh((e=>Math.log(e))),vf=ql(o.Db,wf),kf={kernelName:o.Db,backendName:"cpu",kernelFunc:vf},If=Kl(o.Eb,(e=>Math.log1p(e))),Nf={kernelName:o.Eb,backendName:"cpu",kernelFunc:If},jf=nd(((a,b)=>a&&b)),Sf=wd(o.Fb,jf,null,"bool"),Tf={kernelName:o.Fb,backendName:"cpu",kernelFunc:Sf},Cf=Kl(o.Gb,(e=>e?0:1),"bool"),$f={kernelName:o.Gb,backendName:"cpu",kernelFunc:Cf},Ef=nd(((a,b)=>a||b)),Af=wd(o.Hb,Ef,null,"bool"),Rf={kernelName:o.Hb,backendName:"cpu",kernelFunc:Af};const Ff={kernelName:o.xb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{depthRadius:l,bias:d,alpha:h,beta:f}=r;Ul(c,"LRN");const m=c.shape[3],y=m-1,x=n.data.get(c.dataId).values,O=o.of.sizeFromShape(c.shape),w=new Float32Array(O);function v(e){const t=e%m;let n=e-t+Math.max(0,t-l);const r=e-t+Math.min(t+l,y);let o=0;for(;n<=r;n++){const e=x[n];o+=e*e}return o}for(let e=0;e<O;e++){const t=v(e),n=x[e]*Math.pow(d+h*t,-f);w[e]=n}return n.makeTensorInfo(c.shape,c.dtype,w)}};const Df={kernelName:o.yb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,y:l,dy:d}=t,{depthRadius:h,bias:f,alpha:m,beta:y}=r;Ul(d,"LRNGrad");const x=o.of.sizeFromShape(d.shape),O=d.shape[3],w=n.data.get(d.dataId).values,v=n.data.get(c.dataId).values,k=n.data.get(l.dataId).values,I=new Float32Array(x),N=x;for(let e=0;e<N;e++){const t=e%O,n=e-t+Math.max(0,t-h),r=e-t+Math.min(O,t+h+1);let o=0;for(let e=n;e<r;e++)o+=Math.pow(v[e],2);o=m*o+f;for(let t=n;t<r;t++){let n=-2*m*y*v[t]*k[e]/o;e===t&&(n+=Math.pow(o,-y)),n*=w[e],I[t]+=n}}return n.makeTensorInfo(d.shape,c.dtype,I)}};function _f(e,t,n,r){const c=o.of.getTypedArrayFromDType(r,o.of.sizeFromShape(n));for(let i=0;i<c.length;++i){const n=i*t;let r=e[n];for(let o=0;o<t;++o){const t=e[n+o];t>r&&(r=t)}c[i]=r}return c}function Mf(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{reductionIndices:l,keepDims:d}=r,h=n;let f=c.shape;const m=f.length,y=o.of.parseAxisParam(l,f);let x=y;const O=o.od.getAxesPermutation(x,m);let w=h.data.get(c.dataId).values;if(null!=O){const e=new Array(m);for(let i=0;i<e.length;i++)e[i]=f[O[i]];w=zd(w,f,c.dtype,O,e),x=o.od.getInnerMostAxes(x.length,m),f=e}Ul(c,"max"),o.od.assertAxesAreInnerMostDims("max",x,m);const[v,k]=o.od.computeOutAndReduceShapes(f,x),I=_f(w,o.of.sizeFromShape(k),v,c.dtype),N=h.write(I,v,c.dtype);let j=v;if(d){j=o.od.expandShapeToKeepDim(v,y)}return{dataId:N,shape:j,dtype:c.dtype}}const Lf={kernelName:o.Ib,backendName:"cpu",kernelFunc:Mf},zf=nd(((e,t)=>Math.max(e,t))),Pf=wd(o.Ob,zf),Bf={kernelName:o.Ob,backendName:"cpu",kernelFunc:Pf};const Wf={kernelName:o.Jb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t;Ul(c,"maxPool");const{filterSize:l,strides:d,pad:h,dimRoundingMode:f}=r;o.of.assert(o.od.eitherStridesOrDilationsAreOne(d,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${d} and dilations '1'`));const m=o.od.computePool2DInfo(c.shape,l,d,1,h,f);let y;if(1===m.filterWidth&&1===m.filterHeight&&o.of.arraysEqual(m.inShape,m.outShape))y=Jl({inputs:{x:c},backend:n});else{const e=n.data.get(c.dataId).values,t=o.of.computeStrides(c.shape),r=ah(e,c.shape,c.dtype,t,m,"max");y=n.makeTensorInfo(m.outShape,c.dtype,r.values)}return y}};const Vf={kernelName:o.Kb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{filterSize:l,strides:d,pad:h,dimRoundingMode:f,dataFormat:m}=r;Ul(c,"maxPool3d");const y=o.od.computePool3DInfo(c.shape,l,d,1,h,f,m),x=oh(n.data.get(c.dataId).values,c.shape,c.dtype,o.of.computeStrides(c.shape),y,"max");return n.makeTensorInfo(x.shape,"float32",x.values)}};const Uf={kernelName:o.Lb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,input:input}=t,{filterSize:l,strides:d,pad:h,dimRoundingMode:f}=r;Ul([c,input],"maxPool3DGrad");const m=o.od.computePool3DInfo(input.shape,l,d,1,h,f),y=function(e,t){const n=Object(o.td)(t.outShape,"int32"),r=t.strideDepth,c=t.strideHeight,l=t.strideWidth,d=t.dilationDepth,h=t.dilationHeight,f=t.dilationWidth,m=t.effectiveFilterDepth,y=t.effectiveFilterHeight,x=t.effectiveFilterWidth,O=t.padInfo.front,w=t.padInfo.top,v=t.padInfo.left;for(let o=0;o<t.batchSize;++o)for(let k=0;k<t.inChannels;++k)for(let I=0;I<t.outDepth;++I){const N=I*r-O;let j=N;for(;j<0;)j+=d;const S=Math.min(t.inDepth,m+N);for(let r=0;r<t.outHeight;++r){const m=r*c-w;let O=m;for(;O<0;)O+=h;const T=Math.min(t.inHeight,y+m);for(let c=0;c<t.outWidth;++c){const w=c*l-v;let C=w;for(;C<0;)C+=f;const $=Math.min(t.inWidth,x+w);let E=Number.NEGATIVE_INFINITY,A=-1;for(let t=j;t<S;t+=d){const n=t-N;for(let r=O;r<T;r+=h){const c=r-m;for(let l=C;l<$;l+=f){const d=l-w,h=e.get(o,t,r,l,k);h>=E&&(E=h,A=n*y*x+c*y+d)}}}n.set(A,o,I,r,c,k)}}}return n}(n.bufferSync(input),m),x=m.strideDepth,O=m.strideHeight,w=m.strideWidth,v=m.dilationDepth,k=m.dilationHeight,I=m.dilationWidth,N=m.effectiveFilterDepth,j=m.effectiveFilterHeight,S=m.effectiveFilterWidth,T=N-1-m.padInfo.front,C=S-1-m.padInfo.left,$=j-1-m.padInfo.top,E=Object(o.td)(input.shape,"float32"),A=n.bufferSync(c);for(let e=0;e<m.batchSize;++e)for(let t=0;t<m.inChannels;++t)for(let n=0;n<m.inDepth;++n)for(let r=0;r<m.inHeight;++r)for(let o=0;o<m.inWidth;++o){const c=n-T,l=r-$,d=o-C;let h=0;for(let n=0;n<N;n+=v){const r=(c+n)/x;if(!(r<0||r>=m.outDepth||Math.floor(r)!==r))for(let o=0;o<j;o+=k){const c=(l+o)/O;if(!(c<0||c>=m.outHeight||Math.floor(c)!==c))for(let l=0;l<S;l+=I){const f=(d+l)/w;if(f<0||f>=m.outWidth||Math.floor(f)!==f)continue;const mask=N*j*S-1-y.get(e,r,c,f,t)===n*j*S+o*S+l?1:0;if(0===mask)continue;h+=A.get(e,r,c,f,t)*mask}}}E.set(h,e,n,r,o,t)}return n.makeTensorInfo(E.shape,E.dtype,E.values)}};const Gf={kernelName:o.Mb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,input:input,output:output}=t,l=input;Ul([input,output],"maxPoolGrad");const{filterSize:d,strides:h,pad:f,dimRoundingMode:m}=r,y=o.od.computePool2DInfo(l.shape,d,h,1,f,m),x=n.data.get(l.dataId).values,O=Object(o.td)(y.outShape,l.dtype,sh(x,l.shape,l.dtype,y).values),w=y.strideHeight,v=y.strideWidth,k=y.dilationHeight,I=y.dilationWidth,N=y.effectiveFilterHeight,j=y.effectiveFilterWidth,S=j-1-y.padInfo.left,T=N-1-y.padInfo.top,C=Object(o.td)(l.shape,"float32"),$=n.data.get(c.dataId).values,E=Object(o.td)(c.shape,"float32",$);for(let b=0;b<y.batchSize;++b)for(let e=0;e<y.inChannels;++e)for(let t=0;t<y.inHeight;++t)for(let n=0;n<y.inWidth;++n){const r=t-T,o=n-S;let c=0;for(let t=0;t<N;t+=k){const n=(r+t)/w;if(!(n<0||n>=y.outHeight||Math.floor(n)!==n))for(let r=0;r<j;r+=I){const l=(o+r)/v;if(l<0||l>=y.outWidth||Math.floor(l)!==l)continue;const mask=N*j-1-O.get(b,n,l,e)===t*j+r?1:0;if(0===mask)continue;c+=E.get(b,n,l,e)*mask}}C.set(c,b,t,n,e)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};const Hf={kernelName:o.Nb,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:c,strides:l,pad:d,includeBatchInIndex:h}=t,f=n;Ul(r,"MaxPoolWithArgmax");const m=f.data.get(r.dataId).values,y=o.od.computePool2DInfo(r.shape,c,l,[1,1],d),[x,O]=function(e,t,n,r,c){const l=ah(e,0,n,o.of.computeStrides(t),c,"max"),d=sh(e,t,n,c,!0,r);return[l.values,d.values]}(m,r.shape,r.dtype,h,y),w=f.write(x,y.outShape,r.dtype),v=f.write(O,y.outShape,r.dtype);return[{dataId:w,shape:y.outShape,dtype:r.dtype},{dataId:v,shape:y.outShape,dtype:"int32"}]}};const Kf={kernelName:o.Pb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l,keepDims:d}=r,h=o.of.parseAxisParam(l,c.shape),f=o.od.computeOutAndReduceShapes(c.shape,h)[1],m=o.of.sizeFromShape(f),y=[],x=n.makeTensorInfo([],"float32",new Float32Array([m]));y.push(x);const O=xd({inputs:{x:c},backend:n,attrs:{dtype:"float32"}});y.push(O);const w=Cp({inputs:{a:O,b:x},backend:n});y.push(w);const v=sp({inputs:{x:w},backend:n,attrs:{axis:l,keepDims:d}});return y.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}};const qf={kernelName:o.Qb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l,keepDims:d}=r;Ul(c,"min");const h=o.of.parseAxisParam(l,c.shape);let f=h;const m=o.od.getAxesPermutation(f,c.shape.length);let y=c;null!=m&&(y=Pd({inputs:{x:c},backend:n,attrs:{perm:m}}),f=o.od.getInnerMostAxes(f.length,c.shape.length)),o.od.assertAxesAreInnerMostDims("min",f,y.shape.length);const[x,O]=o.od.computeOutAndReduceShapes(y.shape,f),w=o.of.sizeFromShape(O),v=o.of.makeZerosTypedArray(o.of.sizeFromShape(x),y.dtype),k=n.data.get(y.dataId).values;for(let i=0;i<v.length;++i){const e=i*w;let t=k[e];for(let n=0;n<w;++n){const r=k[e+n];r<t&&(t=r)}v[i]=t}null!=m&&n.disposeIntermediateTensorInfo(y);const I=n.makeTensorInfo(x,y.dtype,v);if(d){const e=Sd({inputs:{x:I},backend:n,attrs:{shape:o.od.expandShapeToKeepDim(x,h)}});return n.disposeIntermediateTensorInfo(I),e}return I}},Xf=nd(((e,t)=>Math.min(e,t))),Yf=wd(o.Rb,Xf),Jf={kernelName:o.Rb,backendName:"cpu",kernelFunc:Yf};const Zf={kernelName:o.Sb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{paddings:l,mode:d}=r;Ul(c,"mirrorPad");const h=l.map(((p,i)=>p[0]+c.shape[i]+p[1])),f=l.map((p=>p[0])),m=l.map(((p,i)=>p[0]+c.shape[i])),y="reflect"===d?0:1,x=n.data.get(c.dataId).values,O=c.shape.length,w=o.of.computeStrides(c.shape),v=o.of.sizeFromShape(h),k=h.length,I=o.of.computeStrides(h),N=o.of.getTypedArrayFromDType(c.dtype,v);for(let i=0;i<v;i++){let e=o.of.indexToLoc(i,k,I);for(let i=0;i<k;i++)e[i]<f[i]?e[i]=2*f[i]-e[i]-y:e[i]>=m[i]&&(e[i]=2*(m[i]-1)-e[i]+y);e=e.map(((e,i)=>e-f[i]));const t=o.of.locToIndex(e,O,w);N[i]=x[t]}return{dataId:n.write(N,h,c.dtype),shape:h,dtype:c.dtype}}},Qf=nd(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),tm=wd(o.Tb,Qf),nm={kernelName:o.Tb,backendName:"cpu",kernelFunc:tm};function rm(e){const{inputs:t,backend:n,attrs:r}=e,{logits:c}=t,{dim:l}=r,d=c.shape.length;let h=l;if(-1===h&&(h=d-1),h!==d-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${d} and dim was ${h}`);const f=o.of.parseAxisParam([h],c.shape),m=Mf({inputs:{x:c},backend:n,attrs:{reductionIndices:f,keepDims:!1}}),y=o.od.expandShapeToKeepDim(m.shape,f),x=Sd({inputs:{x:m},backend:n,attrs:{shape:y}}),a=Rp({inputs:{a:c,b:x},backend:n}),b=wp({inputs:{x:a},backend:n}),O=sp({inputs:{x:b},backend:n,attrs:{axis:f,keepDims:!1}}),w=Sd({inputs:{x:O},backend:n,attrs:{shape:y}}),v=Cp({inputs:{a:b,b:w},backend:n});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(O),n.disposeIntermediateTensorInfo(w),v}const am={kernelName:o.Gc,backendName:"cpu",kernelFunc:rm};const sm={kernelName:o.Ub,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:c}=t,{numSamples:l,seed:d,normalized:h}=r;Ul(c,"multinomial");const f=h?c:rm({inputs:{logits:c},backend:n,attrs:{dim:-1}}),m=f.shape[0],y=f.shape[1],x=n.data.get(f.dataId).values,O=[m,l],w=o.of.makeZerosTypedArray(o.of.sizeFromShape(O),"int32");for(let b=0;b<m;++b){const e=b*y,t=new Float32Array(y-1);t[0]=x[e];for(let n=1;n<t.length;++n)t[n]=t[n-1]+x[e+n];const n=Ml.alea(d.toString()),r=b*l;for(let e=0;e<l;++e){const o=n();w[r+e]=t.length;for(let n=0;n<t.length;n++)if(o<t[n]){w[r+e]=n;break}}}return h||n.disposeIntermediateTensorInfo(f),n.makeTensorInfo(O,"int32",w)}};function om(e,t,n){const r=o.of.createScalarValue(-1,n);return ep([],t,r,e,n)}const im={kernelName:o.Wb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;Ul(r,"neg");const o=n.data.get(r.dataId).values,[c,l]=om(o,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,c)}},um=o.be.nonMaxSuppressionV3Impl;const cm={kernelName:o.Xb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:o,scores:c}=t,{maxOutputSize:l,iouThreshold:d,scoreThreshold:h}=r;Ul(o,"NonMaxSuppression");const f=n.data.get(o.dataId).values,m=n.data.get(c.dataId).values,{selectedIndices:y}=um(f,m,l,d,h);return n.makeTensorInfo([y.length],"int32",new Int32Array(y))}},lm=o.be.nonMaxSuppressionV4Impl;const dm={kernelName:o.Yb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:o,scores:c}=t,{maxOutputSize:l,iouThreshold:d,scoreThreshold:h,padToMaxOutputSize:f}=r;Ul(o,"NonMaxSuppressionPadded");const m=n.data.get(o.dataId).values,y=n.data.get(c.dataId).values,{selectedIndices:x,validOutputs:O}=lm(m,y,l,d,h,f);return[n.makeTensorInfo([x.length],"int32",new Int32Array(x)),n.makeTensorInfo([],"int32",new Int32Array([O]))]}},hm=o.be.nonMaxSuppressionV5Impl;const pm={kernelName:o.Zb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:o,scores:c}=t,{maxOutputSize:l,iouThreshold:d,scoreThreshold:h,softNmsSigma:f}=r;Ul(o,"NonMaxSuppressionWithScore");const m=n.data.get(o.dataId).values,y=n.data.get(c.dataId).values,x=l,O=d,w=h,v=f,{selectedIndices:k,selectedScores:I}=hm(m,y,x,O,w,v);return[n.makeTensorInfo([k.length],"int32",new Int32Array(k)),n.makeTensorInfo([I.length],"float32",new Float32Array(I))]}},fm=nd(((a,b)=>a!==b?1:0)),mm=wd(o.ac,fm,null,"bool"),bm={kernelName:o.ac,backendName:"cpu",kernelFunc:mm};const gm={kernelName:o.bc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:c}=t,{depth:l,onValue:d,offValue:h}=r;Ul(c,"oneHot");const f=o.of.sizeFromShape(c.shape),m=new Float32Array(f*l);m.fill(h);const y=n.data.get(c.dataId).values;for(let e=0;e<f;++e)y[e]>=0&&y[e]<l&&(m[e*l+y[e]]=d);return n.makeTensorInfo([...c.shape,l],"int32",m)}};function ym(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=gd({inputs:{input:r},backend:n}),t=ym({inputs:{x:e},backend:n}),o=Sh({inputs:{input:r},backend:n}),i=ym({inputs:{x:o},backend:n}),c=fd({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}return zp({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const xm={kernelName:o.ed,backendName:"cpu",kernelFunc:ym};const Om={kernelName:o.cc,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:o}=n;if("string"===o.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===o.dtype){const t=gd({inputs:{input:o},backend:r}),n=e({inputs:{x:t},backend:r}),c=Sh({inputs:{input:o},backend:r}),i=ym({inputs:{x:c},backend:r}),l=fd({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(i),l}return zp({backend:r,attrs:{shape:o.shape,value:1,dtype:o.dtype}})}};function wm(e){const{inputs:t,backend:n,attrs:r}=e,{axis:c}=r;if(1===t.length)return kp({inputs:{input:t[0]},backend:n,attrs:{dim:c}});const l=t[0].shape,d=t[0].dtype;t.forEach((e=>{o.of.assertShapesMatch(l,e.shape,"All tensors passed to stack must have matching shapes"),o.of.assert(d===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const h=[],f=Ch({inputs:t.map((e=>{const t=kp({inputs:{input:e},backend:n,attrs:{dim:c}});return h.push(t),t})),backend:n,attrs:{axis:c}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const vm={kernelName:o.ec,backendName:"cpu",kernelFunc:wm};const km={kernelName:o.fc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{paddings:l,constantValue:d}=r;Ul(c,"pad");const h=l.map(((p,i)=>p[0]+c.shape[i]+p[1])),f=l.map((p=>p[0])),m=n.data.get(c.dataId).values,y=o.of.sizeFromShape(c.shape),x=c.shape.length,O=o.of.computeStrides(c.shape),w=o.of.sizeFromShape(h),v=h.length,k=o.of.computeStrides(h),I=o.of.getTypedArrayFromDType(c.dtype,w);0!==d&&I.fill(d);for(let i=0;i<y;i++){const e=o.of.indexToLoc(i,x,O).map(((e,i)=>e+f[i]));I[o.of.locToIndex(e,v,k)]=m[i]}return{dataId:n.write(I,h,c.dtype),shape:h,dtype:c.dtype}}},Im=nd(((a,b)=>Math.pow(a,b))),Nm=wd(o.gc,Im),jm={kernelName:o.gc,backendName:"cpu",kernelFunc:Nm};function Sm(e,t,n,r){const[c,l]=o.od.computeOutAndReduceShapes(e,r),d=Object(o.nf)(t,"int32"),h=o.of.makeZerosTypedArray(o.of.sizeFromShape(c),d),f=o.of.sizeFromShape(l);for(let i=0;i<h.length;++i){const e=i*f;let t=1;for(let r=0;r<f;++r)t*=n[e+r];h[i]=t}return{outVals:h,outShape:c,outDtype:d}}const Tm={kernelName:o.ic,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l,keepDims:d}=r;Ul(c,"prod");const h=c.shape.length,f=o.of.parseAxisParam(l,c.shape),m=o.od.getAxesPermutation(f,h);let y=f,x=c;const O=[];null!=m&&(x=Pd({inputs:{x:c},backend:n,attrs:{perm:m}}),O.push(x),y=o.od.getInnerMostAxes(y.length,h));const w=n.data.get(x.dataId).values,{outVals:v,outShape:k,outDtype:I}=Sm(x.shape,x.dtype,w,y);let N=k;return d&&(N=o.od.expandShapeToKeepDim(k,f)),O.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(N,I,v)}};function Cm(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return o.of.makeZerosTypedArray(0,r);const c=Math.abs(Math.ceil((t-e)/n)),l=o.of.makeZerosTypedArray(c,r);t<e&&1===n&&(n=-1),l[0]=e;for(let i=1;i<l.length;i++)l[i]=l[i-1]+n;return l}const $m={kernelName:o.jc,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:o,dtype:c,step:l}=n,d=Cm(r,o,l,c);return t.makeTensorInfo([d.length],c,d)}},Em=Kl(o.mc,(e=>1/e)),Am={kernelName:o.mc,backendName:"cpu",kernelFunc:Em};const Rm={kernelName:o.qc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:c}=t,{alignCorners:l,halfPixelCenters:d,size:h}=r;Ul(c,"resizeBilinear");const f=o.of.computeStrides(c.shape),[m,y]=h,[x,O,w,v]=c.shape,k=n.data.get(c.dataId).values,I=new Float32Array(o.of.sizeFromShape([x,m,y,v])),N=[l&&m>1?O-1:O,l&&y>1?w-1:w],j=[l&&m>1?m-1:m,l&&y>1?y-1:y];let S=0;const T=N[0]/j[0],C=N[1]/j[1];for(let b=0;b<x;b++)for(let e=0;e<m;e++){let t;t=d?T*(e+.5)-.5:T*e;const n=Math.max(0,Math.floor(t)),r=t-n,o=Math.min(O-1,Math.ceil(t)),c=b*f[0]+n*f[1],l=b*f[0]+o*f[1];for(let e=0;e<y;e++){let t;t=d?C*(e+.5)-.5:C*e;const n=Math.max(0,Math.floor(t)),o=t-n,h=Math.min(w-1,Math.ceil(t)),m=c+n*f[2],y=l+n*f[2],x=c+h*f[2],O=l+h*f[2];for(let e=0;e<v;e++){const t=k[m+e],n=k[y+e],c=t+(k[x+e]-t)*o,l=c+(n+(k[O+e]-n)*o-c)*r;I[S++]=l}}}return n.makeTensorInfo([x,m,y,v],"float32",I)}};const Fm={kernelName:o.rc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:c,dy:l}=t,{alignCorners:d}=r;Ul([l,c],"resizeBilinearGrad");const h=o.of.computeStrides(c.shape),[f,m,y,x]=c.shape,[,O,w]=l.shape,output=new Float32Array(f*m*y*x),v=[d&&O>1?m-1:m,d&&w>1?y-1:y],k=[d&&O>1?O-1:O,d&&w>1?w-1:w],I=v[0]/k[0],N=v[1]/k[1],j=n.data.get(l.dataId).values;let S=0;for(let b=0;b<f;b++){const e=b*h[0];for(let t=0;t<O;t++){const n=t*I,r=Math.floor(n),o=Math.min(Math.ceil(n),m-1),c=e+r*h[1],l=e+o*h[1],d=n-r,f=1-d;for(let e=0;e<w;e++){const t=e*N,n=Math.floor(t),r=Math.min(Math.ceil(t),y-1),o=t-n,m=1-o,O=c+n*h[2],w=c+r*h[2],v=l+n*h[2],k=l+r*h[2],I=f*m,T=f*o,C=d*m,$=d*o;for(let e=0;e<x;e++){const t=j[S++];output[O+e]+=t*I,output[w+e]+=t*T,output[v+e]+=t*C,output[k+e]+=t*$}}}}return n.makeTensorInfo([f,y,m,x],"float32",output)}};const Dm={kernelName:o.sc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:c}=t,{alignCorners:l,halfPixelCenters:d,size:h}=r;Ul(c,"resizeNearestNeighbor");const f=o.of.computeStrides(c.shape),[m,y]=h,[x,O,w,v]=c.shape,k=n.data.get(c.dataId).values,output=new Float32Array(x*m*y*v),I=[l&&m>1?O-1:O,l&&y>1?w-1:w],N=[l&&m>1?m-1:m,l&&y>1?y-1:y],j=I[0]/N[0],S=I[1]/N[1];let T=0;for(let b=0;b<x;b++){const e=b*f[0];for(let t=0;t<m;t++){const n=d?j*(t+.5):j*t;let r=Math.min(O-1,l?Math.round(n):Math.floor(n));d&&(r=Math.max(0,r));const o=e+r*f[1];for(let e=0;e<y;e++){const t=d?S*(e+.5):S*e;let n=Math.min(w-1,l?Math.round(t):Math.floor(t));d&&(n=Math.max(0,n));const r=o+n*f[2];for(let e=0;e<v;e++){const t=k[r+e];output[T++]=t}}}}return n.makeTensorInfo([x,m,y,v],c.dtype,output)}};const _m={kernelName:o.tc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:c,dy:l}=t,{alignCorners:d}=r;Ul([l,c],"resizeNearestNeighborGrad");const h=o.of.computeStrides(c.shape),f=o.of.computeStrides(l.shape),[m,y,x,O]=c.shape,[,w,v]=l.shape,output=new Float32Array(m*y*x*O),k=n.data.get(l.dataId).values,I=[d&&w>1?y-1:y,d&&v>1?x-1:x],N=[d&&w>1?w-1:w,d&&v>1?v-1:v],j=I[0]/N[0],S=I[1]/N[1],T=1/j,C=1/S,$=2*Math.ceil(T)+2,E=2*Math.ceil(C)+2;for(let b=0;b<m;b++){const e=b*h[0];for(let t=0;t<y;t++){const n=e+t*h[1],r=Math.floor(t*T),o=Math.floor(r-$/2);for(let r=0;r<x;r++){const c=n+r*h[2],l=Math.floor(r*C),m=Math.floor(l-E/2);for(let n=0;n<O;n++){let l=0;for(let c=0;c<$;c++){const h=c+o;if(h<0||h>=w)continue;const O=e+h*f[1],I=h*j;if(t===Math.min(y-1,d?Math.round(I):Math.floor(I)))for(let e=0;e<E;e++){const t=e+m;if(t<0||t>=v)continue;const o=O+t*f[2],c=t*S;r===Math.min(x-1,d?Math.round(c):Math.floor(c))&&(l+=k[o+n])}}output[c+n]=l}}}}return n.makeTensorInfo(c.shape,c.dtype,output)}};const Mm={kernelName:o.uc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{dims:l}=r;Ul(c,"reverse");const d=c.shape.length,h=o.of.parseAxisParam(l,c.shape);if(0===d)return Jl({inputs:{x:c},backend:n});const f=new o.Wc(c.shape,c.dtype),m=n.bufferSync(c);for(let i=0;i<f.size;i++){const e=f.indexToLoc(i),t=e.slice();h.forEach((e=>t[e]=c.shape[e]-1-t[e])),f.set(m.get(...t),...e)}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},Lm={kernelName:o.vc,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:image}=e,{radians:r,fillValue:c,center:l}=t,d=n,output=o.of.getTypedArrayFromDType(image.dtype,o.of.sizeFromShape(image.shape)),[h,f,m,y]=image.shape,[x,O]=o.od.getImageCenter(l,f,m),w=Math.sin(r),v=Math.cos(r),k=d.data.get(image.dataId).values;for(let e=0;e<h;e++){const t=e*m*f*y;for(let e=0;e<f;e++){const n=e*(m*y);for(let col=0;col<m;col++){const r=col*y;for(let o=0;o<y;o++){const l=[h,e,col,o],d=l[2],I=l[1];let N=(d-x)*v-(I-O)*w,j=(d-x)*w+(I-O)*v;N=Math.round(N+x),j=Math.round(j+O);let S=c;if("number"!=typeof c&&(S=3===o?255:c[o]),N>=0&&N<m&&j>=0&&j<f){S=k[t+j*(m*y)+N*y+o]}output[t+n+r+o]=S}}}}return{dataId:d.write(output,image.shape,image.dtype),shape:image.shape,dtype:image.dtype}}},zm=Kl(o.wc,(e=>{const base=Math.floor(e);return e-base<.5?Math.floor(e):e-base>.5?Math.ceil(e):base%2==0?base:base+1})),Pm={kernelName:o.wc,backendName:"cpu",kernelFunc:zm},Bm=xh((e=>1/Math.sqrt(e))),Wm=ql(o.xc,Bm),Vm={kernelName:o.xc,backendName:"cpu",kernelFunc:Wm};function Um(e,t,n,r,c,l,d,h,f,m){const y=[r/c,c],x=e.values,O=t.values;if(0===r)return Object(o.td)(n,t.dtype);const w=Object(o.td)(y,t.dtype);w.values.fill(f);for(let i=0;i<l;i++){const e=[];let o=0;for(let t=0;t<d;t++){const n=x[i*d+t];e.push(n),o+=n*h[t]}if(o<0||o>=r/c)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let e=0;e<c;e++)m?w.values[o*c+e]+=O[i*c+e]:w.values[o*c+e]=0===t.rank?O[0]:O[i*c+e]}return w}const Gm={kernelName:o.yc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:c,updates:l}=t,{shape:d}=r,{sliceRank:h,numUpdates:f,sliceSize:m,strides:y,outputSize:x}=o.od.calculateShapes(l,c,d),O=Um(n.bufferSync(c),n.bufferSync(l),d,x,m,f,h,y,0,!0);return n.makeTensorInfo(d,O.dtype,O.values)}};const Hm={kernelName:o.zc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:c,e:l}=t;Ul([r,c,l],"select");const d=r.shape.length,h=n.data.get(r.dataId).values,f=n.data.get(c.dataId).values,m=n.data.get(l.dataId).values,y=Object(o.nf)(c.dtype,l.dtype),x=o.of.makeZerosTypedArray(o.of.sizeFromShape(c.shape),y);let O=0;const w=0===d||d>1||1===c.shape.length?1:o.of.sizeFromShape(c.shape.slice(1));for(let i=0;i<h.length;i++)for(let e=0;e<w;e++)1===h[i]?x[O++]=f[i]:x[O++]=m[i];return n.makeTensorInfo(c.shape,y,x)}},Km=o.od.SELU_SCALEALPHA,qm=o.od.SELU_SCALE,Xm=Kl(o.Ac,(e=>e>=0?qm*e:Km*(Math.exp(e)-1))),Ym={kernelName:o.Ac,backendName:"cpu",kernelFunc:Xm},Jm=Kl(o.Cc,(e=>e<0?-1:e>0?1:0)),Zm={kernelName:o.Cc,backendName:"cpu",kernelFunc:Jm},Qm=Kl(o.Dc,(e=>Math.sin(e))),eb={kernelName:o.Dc,backendName:"cpu",kernelFunc:Qm},tb=Kl(o.Ec,(e=>Math.sinh(e))),nb={kernelName:o.Ec,backendName:"cpu",kernelFunc:tb},rb=Math.log(1.1920928955078125e-7)+2,ab=Kl(o.Hc,(e=>{const t=e>-rb,n=e<rb,r=Math.exp(e);let o;return o=n?r:t?e:Math.log(1+r),o})),sb={kernelName:o.Hc,backendName:"cpu",kernelFunc:ab};const ob={kernelName:o.Ic,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{blockShape:l,paddings:d}=r;Ul([c],"spaceToBatchND");const h=o.of.sizeFromShape(l),f=[[0,0]];f.push(...d);for(let i=1+l.length;i<c.shape.length;++i)f.push([0,0]);const m=km.kernelFunc({inputs:{x:c},backend:n,attrs:{paddings:f,constantValue:0}}),y=o.od.getReshaped(m.shape,l,h,!1),x=o.od.getPermuted(y.length,l.length,!1),O=o.od.getReshapedPermuted(m.shape,l,h,!1),w=Sd({inputs:{x:m},backend:n,attrs:{shape:y}}),v=Pd({inputs:{x:w},backend:n,attrs:{perm:x}}),k=Sd({inputs:{x:v},backend:n,attrs:{shape:O}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),k}};function ib(e,t,n,r,c){const l=o.of.sizeFromShape(r),d=t[0],h=c.length,f=[];let m=1,y=-1;for(let e=0;e<h;++e){const t=c[e];if(-1===t){if(-1!==y)throw new Error(`only one output dimension may be -1, not both ${y} and ${e}`);y=e,f.push(1)}else{if(t<0)throw new Error(`size ${e} must be non-negative, not ${t}`);m*=t,f.push(t)}}if(-1!==y){if(m<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(l/m);if(m*e!==l)throw new Error(`Input to reshape is a SparseTensor with ${l}\n          dense values, but the requested shape requires a multiple of ${m}. inputShape=${r} outputShape= ${f}`);f[y]=e}const x=o.of.sizeFromShape(f);if(x!==l)throw new Error(`Input to reshape is a tensor with ${l} dense values, but the requested shape has ${x}. inputShape=${r} outputShape=${f}`);const O=r.length,w=[];if(O>0){w[O-1]=1;for(let e=O-2;e>=0;--e)w[e]=w[e+1]*r[e+1]}const v=[];if(h>0){v[h-1]=1;for(let e=h-2;e>=0;--e)v[e]=v[e+1]*f[e+1]}const k=o.of.getArrayFromDType(n,d*h);for(let i=0;i<d;++i){let t=0;for(let n=0;n<O;++n)t+=e[i*O+n]*w[n];for(let e=0;e<h;++e)k[i*h+e]=Math.trunc(t/v[e]),t%=v[e]}return[k,[d,h],f]}const ub={kernelName:o.Jc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:o,newShape:c}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==o.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${o.shape}`);if(1!==c.shape.length)throw new Error(`Target shape should be a vector but received shape ${c.shape}`);const l=Array.from(n.data.get(o.dataId).values),d=n.data.get(r.dataId).values,h=Array.from(n.data.get(c.dataId).values),[f,m,y]=ib(d,r.shape,r.dtype,l,h);return[n.makeTensorInfo(m,r.dtype,f),n.makeTensorInfo([y.length],c.dtype,new Int32Array(y))]}};const cb={kernelName:o.Kc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:c,sparseValues:l,defaultValue:d}=t,{outputShape:h}=r,{sliceRank:f,numUpdates:m,sliceSize:y,strides:x,outputSize:O}=o.od.calculateShapes(l,c,h),w=Um(n.bufferSync(c),n.bufferSync(l),h,O,y,m,f,x,n.data.get(d.dataId).values[0],!1);return n.makeTensorInfo(h,w.dtype,w.values)}};const lb={kernelName:o.Lc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{numOrSizeSplits:l,axis:d}=r,h=o.of.parseAxisParam(d,c.shape)[0],f=o.od.prepareSplitSize(c,l,h),m=new Array(c.shape.length).fill(0),y=c.shape.slice();return f.map((s=>{const e=[...y];e[h]=s;const t=ph({inputs:{x:c},backend:n,attrs:{begin:m,size:e}});return m[h]+=s,t}))}},db=Kl(o.Mc,(e=>Math.sqrt(e))),hb={kernelName:o.Mc,backendName:"cpu",kernelFunc:db},pb={kernelName:o.Nc,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;Ul(n,"square");const o=r.data.get(n.dataId).values,c=new Float32Array(o.length);for(let i=0;i<o.length;++i){const e=o[i];c[i]=e*e}return{dataId:r.write(c,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},fb=nd(((a,b)=>{const e=a-b;return e*e})),mb=wd(o.Oc,fb),bb={kernelName:o.Oc,backendName:"cpu",kernelFunc:mb},gb=Kl(o.Pc,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),yb={kernelName:o.Pc,backendName:"cpu",kernelFunc:gb};function xb(e,t,n,r){const c=Object(o.td)(e,t.dtype);for(let i=0;i<c.size;i++){const e=c.indexToLoc(i),o=new Array(e.length);for(let t=0;t<o.length;t++)o[t]=e[t]*n[t]+r[t];c.set(t.get(...o),...e)}return c}const Ob={kernelName:o.Qc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{begin:l,end:d,strides:h,beginMask:f,endMask:m,ellipsisMask:y,newAxisMask:x,shrinkAxisMask:O}=r;Ul(c,"stridedSlice");const{nonStrided:w,$begin:v,$strides:k,size:I,newShape:N,outShape:j}=o.Se.sliceInfo(c.shape,l,d,h,f,m,y,x,O),S=Sd({inputs:{x:c},backend:n,attrs:{shape:N}});let T;if(w){const e=ph({inputs:{x:S},backend:n,attrs:{begin:v,size:I}});T=Sd({inputs:{x:e},backend:n,attrs:{shape:j}}),n.disposeIntermediateTensorInfo(e)}else if(j.some((e=>0===e)))T=n.makeTensorInfo(j,c.dtype,[]);else{const e=xb(j,n.bufferSync(S),k,v);T=n.makeTensorInfo(e.shape,e.dtype,e.values)}const C=Sd({inputs:{x:T},backend:n,attrs:{shape:j}});return n.disposeIntermediateTensorInfo(S),n.disposeIntermediateTensorInfo(T),C}},wb=Kl(o.Tc,(e=>Math.tan(e))),vb={kernelName:o.Tc,backendName:"cpu",kernelFunc:wb},kb=Kl(o.Uc,(e=>Math.tanh(e))),Ib={kernelName:o.Uc,backendName:"cpu",kernelFunc:kb};function Nb(e,t){const n=new Array(e.rank);for(let i=0;i<n.length;i++)n[i]=e.shape[i]*t[i];const r=Object(o.td)(n,e.dtype);for(let i=0;i<r.values.length;++i){const t=r.indexToLoc(i),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const o=e.locToIndex(n);r.values[i]=e.values[o]}return r}const jb={kernelName:o.Xc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{reps:c}=r;Ul(o,"tile");const l=Nb(n.bufferSync(o),c);return n.makeTensorInfo(l.shape,l.dtype,l.values)}};function Sb(e,t,n,r,c){const l=t[t.length-1],[d,h]=[e.length/l,l],f=o.of.getTypedArrayFromDType(n,d*r),m=o.of.getTypedArrayFromDType("int32",d*r);for(let b=0;b<d;b++){const t=b*h,n=e.subarray(t,t+h),o=[];for(let i=0;i<n.length;i++)o.push({value:n[i],index:i});o.sort(((a,b)=>b.value-a.value));const c=b*r,l=f.subarray(c,c+r),d=m.subarray(c,c+r);for(let i=0;i<r;i++)l[i]=o[i].value,d[i]=o[i].index}const y=t.slice();return y[y.length-1]=r,[Object(o.td)(y,n,f),Object(o.td)(y,"int32",m)]}const Tb={kernelName:o.Yc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{k:c,sorted:l}=r;Ul(o,"topk");const d=n.data.get(o.dataId).values,[h,f]=Sb(d,o.shape,o.dtype,c);return[n.makeTensorInfo(h.shape,h.dtype,h.values),n.makeTensorInfo(f.shape,f.dtype,f.values)]}};const Cb={kernelName:o.Zc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:image,transforms:c}=t,{interpolation:l,fillMode:d,fillValue:h,outputShape:f}=n,[m,y,x,O]=image.shape,[w,v]=null!=f?f:[y,x],k=[m,w,v,O],I=o.of.computeStrides(image.shape),N=I[0],j=I[1],S=I[2],T=o.of.getTypedArrayFromDType(image.dtype,o.of.sizeFromShape(k));T.fill(h);const C=r.data.get(image.dataId).values,$=r.data.get(c.dataId).values;for(let b=0;b<m;++b){const e=1===c.shape[0]?$:$.subarray(8*b,8*b+8);for(let t=0;t<w;++t)for(let n=0;n<v;++n)for(let r=0;r<O;++r){let o;const c=e[6]*n+e[7]*t+1;if(0===c)continue;const f=(e[0]*n+e[1]*t+e[2])/c,m=(e[3]*n+e[4]*t+e[5])/c,O=$b(f,x,d),w=$b(m,y,d);switch(l){case"nearest":o=Ab(C,y,x,N,j,S,b,w,O,r,h);break;case"bilinear":o=Rb(C,y,x,N,j,S,b,w,O,r,h);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${l}`)}T[b*N+t*j+n*S+r]=o}return r.makeTensorInfo(k,image.dtype,T)}return{dataId:r.write(T,k,image.dtype),shape:image.shape,dtype:image.dtype}}};function $b(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return o.of.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return o.of.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return o.of.clamp(0,e,t-1)}(e,t);case"constant":default:return function(e,t){return e}(e)}}function Eb(e,t,n,r,o,c,l,d,h,f,m){return 0<=d&&d<t&&0<=h&&h<n?e[l*r+d*o+h*c+f]:m}function Ab(e,t,n,r,o,c,l,d,h,f,m){return Eb(e,t,n,r,o,c,l,Math.round(d),Math.round(h),f,m)}function Rb(e,t,n,r,o,c,l,d,h,f,m){const y=Math.floor(d),x=Math.floor(h),O=y+1,w=x+1;return(O-d)*((w-h)*Eb(e,t,n,r,o,c,l,y,x,f,m)+(h-x)*Eb(e,t,n,r,o,c,l,y,w,f,m))+(d-y)*((w-h)*Eb(e,t,n,r,o,c,l,O,x,f,m)+(h-x)*Eb(e,t,n,r,o,c,l,O,w,f,m))}function Fb(e,t,n,r){const c=o.of.parseAxisParam(t,n)[0],l=[1,n[0],1];for(let i=0;i<c;i++)l[0]*=n[i];l[1]=n[c];for(let i=c+1;i<n.length;i++)l[2]*=n[i];const d={},h=new Int32Array(n[c]),f=new o.Wc(l,r,e),m=[],y=1===l[0]&&1===l[2];for(let i=0;i<n[c];i++){let element;if(y)element=e[i].toString();else{const e=[];for(let t=0;t<l[0];t++)for(let n=0;n<l[2];n++)e.push(f.get(t,i,n));element=e.join(",")}if(void 0!==d[element])h[i]=d[element];else{const e=Object.keys(d).length;d[element]=e,h[i]=e,m.push(i)}}const x=l.slice();x[1]=Object.keys(d).length;const O=new o.Wc(x,r);m.forEach(((e,i)=>{for(let t=0;t<l[0];t++)for(let n=0;n<l[2];n++)O.set(f.get(t,e,n),t,i,n)}));const w=n.slice();return w[c]=x[1],{outputValues:O.values,outputShape:w,indices:h}}const Db={kernelName:o.bd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:o}=n,{x:c}=t;Ul(c,"unique");const l=r.data.get(c.dataId).values,{outputValues:d,outputShape:h,indices:f}=Fb(l,o,c.shape,c.dtype);return[r.makeTensorInfo(h,c.dtype,d),r.makeTensorInfo([f.length],"int32",f)]}};const _b={kernelName:o.cd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:o}=t;let{axis:c}=r;c<0&&(c+=o.shape.length);const l=o.shape.length,d=o.shape[c],h=new Array(l-1);let f=0;for(let i=0;i<l;i++)i!==c&&(h[f++]=o.shape[i]);const m=new Array(l).fill(0),y=o.shape.slice();y[c]=1;const x=new Array(d);for(let i=0;i<x.length;i++){m[c]=i;const e=ph({inputs:{x:o},backend:n,attrs:{begin:m,size:y}});x[i]=Sd({inputs:{x:e},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(e)}return x}};const Mb={kernelName:o.dd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,segmentIds:l}=t,{numSegments:d}=r;Ul(c,"unsortedSegmentSum");const h=[],f=[],m=c.shape.length-l.shape.length;let y=l;for(let i=0;i<m;++i){const e=kp({inputs:{input:y},backend:n,attrs:{dim:i+1}});y=e,f.push(e)}for(let i=0;i<d;++i){const e=o.of.createScalarValue(i,"int32"),t=n.makeTensorInfo([],"int32",e),mask=lp({inputs:{a:t,b:y},backend:n}),r=xd({inputs:{x:mask},backend:n,attrs:{dtype:"float32"}}),l=np({inputs:{a:r,b:c},backend:n}),d=sp({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});h.push(d),f.push(t),f.push(mask),f.push(r),f.push(l),f.push(d)}const x=wm({inputs:h,backend:n,attrs:{axis:0}});return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},Lb=[Ed,Rd,Dd,Md,jd,Ld,Wd,Vd,Ud,Gd,Kd,Xd,Jd,eh,rh,ih,uh,ch,lh,$d,dh,mh,yh,Od,vh,Ih,md,Nh,$h,Rh,Fh,Ah,_h,Mh,Dh,zh,Bh,Wh,Vh,Uh,Gh,Kh,qh,Xh,Yh,Jh,Qh,Zh,$p,ip,Yl,up,dp,xp,vp,Ip,Sp,Lp,Pp,Bp,Up,Kp,qp,Xp,Yp,Zp,tf,af,Zl,sf,Th,uf,lf,hf,ed,mf,yf,Of,kf,Nf,Tf,$f,Rf,Ff,Df,Bf,Wf,Vf,Uf,Gf,Hf,Lf,Kf,qf,Jf,Zf,nm,sm,ap,im,cm,dm,pm,bm,gm,Om,vm,km,jm,sd,Tm,$m,yd,Am,id,cd,Td,Rm,Fm,Dm,_m,Mm,Lm,Pm,Vm,Gm,Hm,Ym,hd,Zm,eb,nb,fh,am,sb,ob,ub,cb,lb,hb,pb,bb,yb,Ob,Fp,op,vb,Ib,jb,Tb,Bd,Cb,Db,_b,Mb,xm];for(const e of Lb)Object(o.De)(e);const zb={},Pb={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Bb(e){if(!(e in zb)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const canvas=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);if(canvas.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete zb[e]}),!1),1===e)return canvas.getContext("webgl",Pb)||canvas.getContext("experimental-webgl",Pb);return canvas.getContext("webgl2",Pb)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;zb[e]=t}const t=zb[e];return t.isContextLost()?(delete zb[e],Bb(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),zb[e])}var Wb,Vb,Ub;function Gb(e,t){return[t,e]}function Hb(e){const t=o.of.sizeFromShape(e),n=Math.ceil(t/4);return o.of.sizeToSquarishShape(n)}function Kb(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function qb(e,t){const n=e;let r,c,l,d,h,f,m,y,x,O;return 2===Object(o.Od)().getNumber("WEBGL_VERSION")?(r=n.R32F,c=n.R16F,l=n.RGBA16F,d=n.RGBA32F,h=n.RED,m=4,y=1,x=n.HALF_FLOAT,O=n.FLOAT):(r=e.RGBA,c=e.RGBA,l=e.RGBA,d=n.RGBA,h=e.RGBA,m=4,y=4,x=null!=t?t.HALF_FLOAT_OES:null,O=e.FLOAT),f=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:c,internalFormatPackedHalfFloat:l,internalFormatPackedFloat:d,textureFormatFloat:h,downloadTextureFormat:f,downloadUnpackNumChannels:m,defaultNumChannels:y,textureTypeHalfFloat:x,textureTypeFloat:O}}function Xb(e,t){const n=t();return Object(o.Od)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(Wb||(Wb={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(Vb||(Vb={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Ub||(Ub={}));function Yb(e){return!!(Object(o.Od)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function Jb(e,t){return og(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function Zb(e,t){const n=og(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(Xb(e,(()=>e.shaderSource(n,t))),Xb(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=Qb.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],c=e.split("\n"),l=c.length.toString().length+2,d=c.map(((line,e)=>o.of.rightPad((e+1).toString(),l)+line));let h=0;for(let i=0;i<d.length;i++)h=Math.max(d[i].length,h);const f=d.slice(0,r-1),m=d.slice(r-1,r),y=d.slice(r);console.log(f.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${o.of.rightPad(m[0],h)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(y.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const Qb=/ERROR: [0-9]+:([0-9]+):/g;function eg(e,t){if(Xb(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function tg(e,t,n,r,o,c,l){const d=e.getAttribLocation(t,n);return-1!==d&&(Xb(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),Xb(e,(()=>e.vertexAttribPointer(d,o,e.FLOAT,!1,c,l))),Xb(e,(()=>e.enableVertexAttribArray(d))),!0)}function ng(e,t,n,r){Xb(e,(()=>function(e,t,n){ig(e,n),Xb(e,(()=>e.activeTexture(e.TEXTURE0+n))),Xb(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),Xb(e,(()=>e.uniform1i(n,r)))}function rg(e,t,n){Xb(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),Xb(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function ag(e,t){Xb(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),Xb(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function sg(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function og(e,t,n){const r=Xb(e,(()=>t()));if(null==r)throw new Error(n);return r}function ig(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function ug(e,t=2){return o.of.sizeFromShape(e.slice(0,e.length-t))}function cg(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function lg(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[ug(e),...cg(e)]),t}function dg(e){return e%2==0}function hg(e,t){if(e=e.slice(-2),t=t.slice(-2),o.of.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(dg(n)&&dg(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&dg(e[0])&&dg(t[0])}let pg,fg;function mg(e,t){return null!=e.getExtension(t)}function bg(e){try{if(null!=Bb(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function gg(e){if(0===e)return!1;const t=Bb(e);if(1!==e){if(mg(t,"EXT_color_buffer_float"))return yg(t);const e="EXT_color_buffer_half_float";if(mg(t,e)){const n=t.getExtension(e);return function(e,t){const n=qb(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const o=1,c=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,o,c,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const l=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,l),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const d=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(l),d}(t,n)}return!1}if(!mg(t,"OES_texture_float"))return!1;if(!mg(t,"WEBGL_color_buffer_float"))return!1;return yg(t)}function yg(e){const t=qb(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),o}function xg(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&o.of.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const Og=Object(o.Od)();function wg(){let e,t,n,r,c,output,l,d,h,f;return 2===Object(o.Od)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",c="texture",output="outputColor",l="out vec4 outputColor;",d="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",h="",f="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",c="texture2D",output="gl_FragColor",l="",d="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",h="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",f="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:c,output:output,defineOutput:l,defineSpecialNaN:d,defineSpecialInf:h,defineRound:f}}function vg(e,t,n="index"){const r=o.of.computeStrides(t);return r.map(((t,i)=>`${`int ${e[i]} = ${n} / ${t}`}; ${i===r.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * ${t}`:`index -= ${e[i]} * ${t}`};`)).join("")}function kg(e){const t=o.of.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}Og.registerFlag("HAS_WEBGL",(()=>Og.getNumber("WEBGL_VERSION")>0)),Og.registerFlag("WEBGL_VERSION",(()=>bg(2)?2:bg(1)?1:0)),Og.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),Og.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===Og.get("WEBGL_VERSION"))),Og.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),Og.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),Og.registerFlag("WEBGL_PACK",(()=>Og.getBool("HAS_WEBGL"))),Og.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>Og.getBool("WEBGL_PACK"))),Og.registerFlag("WEBGL_PACK_CLIP",(()=>Og.getBool("WEBGL_PACK"))),Og.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>Og.getBool("WEBGL_PACK"))),Og.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>Og.getBool("WEBGL_PACK"))),Og.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>Og.getBool("WEBGL_PACK"))),Og.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>Og.getBool("WEBGL_PACK"))),Og.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>Og.getBool("WEBGL_PACK"))),Og.registerFlag("WEBGL_PACK_REDUCE",(()=>Og.getBool("WEBGL_PACK"))),Og.registerFlag("WEBGL_LAZILY_UNPACK",(()=>Og.getBool("WEBGL_PACK"))),Og.registerFlag("WEBGL_CONV_IM2COL",(()=>Og.getBool("WEBGL_PACK"))),Og.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==pg){const t=Bb(e);pg=t.getParameter(t.MAX_TEXTURE_SIZE)}return pg}(Og.getNumber("WEBGL_VERSION")))),Og.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==fg){const t=Bb(e);fg=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,fg)}(Og.getNumber("WEBGL_VERSION")))),Og.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=Og.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=Bb(e);return t=mg(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:mg(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),Og.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>Og.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!o.Id.isMobile())),Og.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=Bb(e);if(1===e){if(!mg(t,"OES_texture_float"))return!1}else if(!mg(t,"EXT_color_buffer_float"))return!1;return yg(t)}(Og.getNumber("WEBGL_VERSION")))),Og.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!Og.getBool("WEBGL_FORCE_F16_TEXTURES")&&Og.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),Og.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>gg(Og.getNumber("WEBGL_VERSION")))),Og.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=Og.getNumber("WEBGL_VERSION"))&&null!=Bb(e).fenceSync;var e})),Og.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>Og.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),Og.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),Og.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>o.Id.isMobile()&&Og.getBool("IS_CHROME")?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}));const Ig="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class Ng{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Wb.DENSE;const t=Hb(e),n=wg();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${vg(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class jg{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Wb.DENSE;const t=Hb(e),n=wg();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${vg(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class Sg{constructor(e){this.variableNames=["A"],this.outTexUsage=Vb.DOWNLOAD;const t=wg();this.outputShape=e,this.userCode=`\n      ${Ig}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class Tg{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Vb.DOWNLOAD;const t=wg();this.outputShape=e,this.userCode=`\n      ${Ig}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class Cg{constructor(e,t,n=!1){this.variableNames=["A"];const r=wg(),[o,c]=t;this.outputShape=e;let output="result";n&&(output="floor(result * 255. + 0.5)"),this.userCode=`\n      ${kg(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${c};\n        int c = imod(flatIndex, ${c});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${c}.0, ${o}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${output}, 0., 0., 0.);\n      }\n    `}}class $g{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=wg(),[o,c]=t;this.outputShape=e;let l="",output="result";n&&(output="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let col=0;col<=1;col++){const n=2*t+col;l+=`\n          localCoords = coords;\n          if(localCoords[2] + ${col} < ${e[2]}) {\n            localCoords[2] += ${col};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${c};\n              c = imod(flatIndex, ${c});\n              uv = (vec2(c, r) + halfCR) / vec2(${c}.0, ${o}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${n}] = values[0];\n              } else if(offset == 1) {\n                result[${n}] = values[1];\n              } else if(offset == 2) {\n                result[${n}] = values[2];\n              } else {\n                result[${n}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${kg(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${l}\n\n        ${r.output} = ${output};\n      }\n    `}}function Eg(e){const t=wg();return function(e,t){const n=og(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(Xb(e,(()=>e.shaderSource(n,t))),Xb(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function Ag(e){return function(e,data){const t=og(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return Xb(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,t))),Xb(e,(()=>e.bufferData(e.ARRAY_BUFFER,data,e.STATIC_DRAW))),t}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Rg(e){return function(e,data){const t=og(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return Xb(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,t))),Xb(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,data,e.STATIC_DRAW))),t}(e,new Uint16Array([0,1,2,2,1,3]))}function Fg(e,t,n,r,c,l){!function(e,t){const n=Object(o.Od)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const d=function(e){return og(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),h=e.TEXTURE_2D;return Xb(e,(()=>e.bindTexture(h,d))),Xb(e,(()=>e.texParameteri(h,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),Xb(e,(()=>e.texParameteri(h,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),Xb(e,(()=>e.texParameteri(h,e.TEXTURE_MIN_FILTER,e.NEAREST))),Xb(e,(()=>e.texParameteri(h,e.TEXTURE_MAG_FILTER,e.NEAREST))),Xb(e,(()=>e.texImage2D(h,0,r,t,n,0,c,l,null))),Xb(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),d}function Dg(e){return e.internalFormatFloat}function _g(e){return e.internalFormatHalfFloat}function Mg(e){return e.downloadTextureFormat}function Lg(e){return e.internalFormatPackedFloat}function zg(e){return e.internalFormatPackedHalfFloat}function Pg(e,t,n,r,o,c,l,d){const h=e,f=new Float32Array(function(e,t){const[n,r]=Kb(e,t);return n*r*4}(c,l));return h.bindBuffer(h.PIXEL_PACK_BUFFER,t),h.getBufferSubData(h.PIXEL_PACK_BUFFER,0,f),h.bindBuffer(h.PIXEL_PACK_BUFFER,null),f}class Bg{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Object(o.Od)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){zb[e]=t}(t,e)):this.gl=Bb(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===Object(o.Od)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=Jb(this.gl,e),mg(this.gl,t))this.textureHalfFloatExtension=Jb(this.gl,t);else if(Object(o.Od)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),mg(this.gl,r))this.colorBufferHalfFloatExtension=Jb(this.gl,r);else if(Object(o.Od)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",mg(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!mg(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=Ag(this.gl),this.indexBuffer=Rg(this.gl),this.framebuffer=function(e){return og(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=qb(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(o.Od)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;Xb(e,(()=>e.finish())),Xb(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),Xb(e,(()=>e.deleteFramebuffer(this.framebuffer))),Xb(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),Xb(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),Xb(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[o,c]=Gb(t,n);return Fg(e,o,c,Dg(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[o,c]=Gb(t,n);return Fg(e,o,c,_g(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[o,c]=Gb(t,n);return Fg(e,o,c,Mg(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){Xb(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?Xb(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):Xb(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),Xb(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,data){this.throwIfDisposed(),function(e,t,n,r,data,o){let c,l,d;Xb(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),data instanceof Uint8Array?(c=new Uint8Array(n*r*4),l=e.UNSIGNED_BYTE,d=e.RGBA):(c=new Float32Array(n*r*4),l=e.FLOAT,d=o.internalFormatPackedFloat),c.set(data),Xb(e,(()=>e.texImage2D(e.TEXTURE_2D,0,d,n,r,0,e.RGBA,l,c))),Xb(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,data,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[o,c]=Kb(t,n);return Fg(e,o,c,zg(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[o,c]=Kb(t,n);return Fg(e,o,c,Lg(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(ag(this.gl,this.framebuffer),this.outputTexture=null),Xb(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[o,c]=Gb(t,n),l=new Uint8Array(t*n*4);return Xb(e,(()=>e.readPixels(0,0,o,c,r.downloadTextureFormat,e.UNSIGNED_BYTE,l))),new Float32Array(l.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,o,c){return Pg(this.gl,e,0,0,0,o,c,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,o=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,o),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),o}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const o=e.createBuffer();Xb(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,o)));const c=16*t*n;return Xb(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,c,e.STREAM_READ))),Xb(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),Xb(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),o}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Object(o.Od)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,o=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(o,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=o}else Object(o.Od)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Object(o.Od)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return Xb(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=Zb(t,e),r=Eg(t),o=function(e){return og(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return Xb(t,(()=>t.attachShader(o,r))),Xb(t,(()=>t.attachShader(o,n))),function(e,t){if(Xb(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,o),this.debug&&eg(t,o),this.vertexAttrsAreBound||(this.setProgram(o),this.vertexAttrsAreBound=function(e,t,n){return Xb(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),tg(e,t,"clipSpacePos",n,3,20,0)&&tg(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),o}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&Xb(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&eg(this.gl,this.program),Xb(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return og(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Xb(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),ng(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,o]=Kb(t,n);this.setOutputMatrixTextureDriver(e,r,o)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&eg(this.gl,this.program),sg(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),Xb(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Xb(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Jb(this.gl,2===Object(o.Od)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Object(o.Od)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Object(o.Od)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await o.of.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Object(o.Od)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Object(o.Od)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let i=0;for(;i<e.length;++i){if(!e[i]())break}return i-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let i=0;i<=e;++i){const{resolveFn:e}=this.itemsToPoll[i];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||o.of.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),rg(this.gl,e,this.framebuffer),this.debug&&sg(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(rg(this.gl,this.outputTexture,this.framebuffer),this.debug&&sg(this.gl)):ag(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;rg(r,e,this.framebuffer),this.debug&&sg(r),this.outputTexture=e,Xb(r,(()=>r.viewport(0,0,t,n))),Xb(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),Xb(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:Wg}=o.od;function Vg(e,t,n,r){const c=[];e.forEach((e=>{const t=o.of.sizeFromShape(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?c.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(c.push(`uniform sampler2D ${e.name};`),c.push(`uniform int offset${e.name};`))}));const l=c.join("\n"),d=e.map((e=>function(e,t,n=!1){let r="";r+=n?Gg(e):Ug(e);const c=e.shapeInfo.logicalShape,l=t.logicalShape;c.length<=l.length&&(r+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),c="get"+r+"AtOutCoords",l=e.shapeInfo.logicalShape.length,d=t.logicalShape.length,h=Wg(e.shapeInfo.logicalShape,t.logicalShape),f=Qg(d),m=d-l;let y;const x=["x","y","z","w","u","v"];y=0===l?"":d<2&&h.length>=1?"coords = 0;":h.map((e=>`coords.${x[e+m]} = 0;`)).join("\n");let O="";O=d<2&&l>0?"coords":e.shapeInfo.logicalShape.map(((s,i)=>`coords.${x[i+m]}`)).join(", ");let output="return outputValue;";const w=1===o.of.sizeFromShape(e.shapeInfo.logicalShape),v=1===o.of.sizeFromShape(t.logicalShape);if(1!==l||w||v){if(w&&!v)output=1===d?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(h.length){const e=l-2,t=l-1;h.indexOf(e)>-1&&h.indexOf(t)>-1?output="return vec4(outputValue.x);":h.indexOf(e)>-1?output="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":h.indexOf(t)>-1&&(output="return vec4(outputValue.xx, outputValue.zz);")}}else output="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${c}() {\n      ${f} coords = getOutputCoords();\n      ${y}\n      vec4 outputValue = get${r}(${O});\n      ${output}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),c="get"+r+"AtOutCoords",l=t.texShape,d=e.shapeInfo.texShape,h=e.shapeInfo.logicalShape.length,f=t.logicalShape.length;if(!e.shapeInfo.isUniform&&h===f&&null==e.shapeInfo.flatOffset&&o.of.arraysEqual(d,l))return`\n      float ${c}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const m=Qg(f),y=Wg(e.shapeInfo.logicalShape,t.logicalShape),x=f-h;let O;const w=["x","y","z","w","u","v"];O=0===h?"":f<2&&y.length>=1?"coords = 0;":y.map((e=>`coords.${w[e+x]} = 0;`)).join("\n");let v="";v=f<2&&h>0?"coords":e.shapeInfo.logicalShape.map(((s,i)=>`coords.${w[i+x]}`)).join(", ");return`\n    float ${c}() {\n      ${m} coords = getOutputCoords();\n      ${O}\n      return get${r}(${v});\n    }\n  `}(e,t));return r}(e,t,r))).join("\n"),h=t.texShape,f=wg(),m=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(f);let y,x,O=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Hg}\n    ${Kg}\n    ${qg}\n  `}(f);t.isPacked?(y=function(e,t){switch(e.length){case 0:return Yg();case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===n[0])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `;if(1===n[1])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(o.of.arraysEqual(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),o=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${o};\n      index -= b * ${o};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),o=r*Math.ceil(e[e.length-2]/2);let c=o,l="",d="b, r, c";for(let b=2;b<e.length-1;b++)c*=e[e.length-b-1],l=`\n      int b${b} = index / ${c};\n      index -= b${b} * ${c};\n    `+l,d=`b${b}, `+d;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${l}\n\n      int b = index / ${o};\n      index -= b * ${o};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${d});\n    }\n  `}(e,t)}}(t.logicalShape,h),x=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(f)):(y=function(e,t){switch(e.length){case 0:return Yg();case 1:return function(e,t){if(1===t[0])return`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t);case 2:return function(e,t){if(o.of.arraysEqual(e,t))return`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=vg(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=vg(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=vg(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=vg(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,h),x=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(f)),r&&(O+=Xg);return[O,m,x,l,y,d,n].join("\n")}function Ug(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,o]=e.shapeInfo.texShape;if(1===r&&1===o)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[c,l]=e.shapeInfo.texShape,d=Jg(t);return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${c}, ${l}, ${d});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${Zg(e)}\n      }\n    `;const r=e.shapeInfo.texShape,o=r[0],c=r[1];if(1===c&&1===o)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const l=Jg(t);if(1===c)return`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${l}) + 0.5) / ${o}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `;if(1===o)return`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${l}) + 0.5) / ${c}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `;return`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${o}, ${c}, index + ${l});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),c=e.shapeInfo.texShape;if(null!=c&&o.of.arraysEqual(t,c)){const e=c[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${c[1]}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:l,keptDims:d}=o.of.squeezeShape(t),h=l;if(h.length<t.length){const t=["row","col"];return`\n      ${Ug(ey(e,h))}\n      float ${r}(int row, int col) {\n        return ${r}(${ty(t,d)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${Zg(e)}\n      }\n    `;const f=c[0],m=c[1],y=Jg(n);if(1===m)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${y}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${f}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;if(1===f)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${y}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${m}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${y};\n    vec2 uv = uvFromFlat(${f}, ${m}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),c=t[1]*t[2],l=t[2],{newShape:d,keptDims:h}=o.of.squeezeShape(t),f=d;if(f.length<t.length){const t=["row","col","depth"];return`\n        ${Ug(ey(e,f))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${ty(t,h)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${c}, ${l}, 1)));\n        ${Zg(e)}\n      }\n    `;const m=e.shapeInfo.texShape,y=m[0],x=m[1],O=e.shapeInfo.flatOffset;if(x===c&&null==O)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${l}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${x}.0, ${y}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(x===l&&null==O)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${x}.0, ${y}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const w=Jg(n);return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${c} + col * ${l} + depth + ${w};\n        vec2 uv = uvFromFlat(${y}, ${x}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),c=t[3],l=t[2]*c,d=t[1]*l,{newShape:h,keptDims:f}=o.of.squeezeShape(t);if(h.length<t.length){const t=["row","col","depth","depth2"];return`\n      ${Ug(ey(e,h))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${ty(t,f)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${d}, ${l}, ${c}, 1)));\n        ${Zg(e)}\n      }\n    `;const m=e.shapeInfo.flatOffset,y=e.shapeInfo.texShape,x=y[0],O=y[1];if(O===d&&null==m)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${l}, ${c}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${O}.0, ${x}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(O===c&&null==m)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${O}.0, ${x}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const w=Jg(n);return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${l} +\n          depth * ${c} + depth2;\n      vec2 uv = uvFromFlat(${x}, ${O}, index + ${w});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),c=t[4],l=t[3]*c,d=t[2]*l,h=t[1]*d,{newShape:f,keptDims:m}=o.of.squeezeShape(t);if(f.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${Ug(ey(e,f))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${ty(t,m)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${d}, ${l}, ${c})) +\n          depth3;\n        ${Zg(e)}\n      }\n    `;const y=e.shapeInfo.flatOffset,x=e.shapeInfo.texShape,O=x[0],w=x[1];if(w===h&&null==y)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${d}, ${l}, ${c}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${w}.0, ${O}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(w===c&&null==y)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${w}.0, ${O}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const v=Jg(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${d} + depth * ${l} +\n          depth2 * ${c} + depth3 + ${v};\n      vec2 uv = uvFromFlat(${O}, ${w}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:c,keptDims:l}=o.of.squeezeShape(t);if(c.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Ug(ey(e,c))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${ty(t,l)});\n      }\n    `}const d=t[5],h=t[4]*d,f=t[3]*h,m=t[2]*f,y=t[1]*m;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${y}, ${m}, ${f}, ${h})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${d}, 1)));\n        ${Zg(e)}\n      }\n    `;const x=e.shapeInfo.flatOffset,O=e.shapeInfo.texShape,w=O[0],v=O[1];if(v===y&&null==x)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${m}, ${f}, ${h}, ${d})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${v}.0, ${w}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(v===d&&null==x)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${v}.0, ${w}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const k=Jg(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${y} + col * ${m} + depth * ${f} +\n          depth2 * ${h} + depth3 * ${d} + depth4 + ${k};\n      vec2 uv = uvFromFlat(${w}, ${v}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function Gg(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=wg();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],c=wg();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${o[0]}, ${o[1]}, index);\n      return ${c.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),c=e.shapeInfo.texShape,l=c[0],d=c[1],h=wg();if(null!=c&&o.of.arraysEqual(t,c))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${d}.0, ${l}.0);\n\n        return ${h.texture2D}(${n}, uv);\n      }\n    `;const f=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)],m=Math.ceil(t[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${m}, ${f[0]}, ${f[1]}, row, col);\n      return ${h.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=e.shapeInfo.texShape,c=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(1===t[0]){const n=[1,2],o=["b","row","col"];return`\n        ${Gg(ey(e,t.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${ty(o,n)});\n        }\n      `}const l=c[0],d=c[1],h=Math.ceil(t[2]/2),f=h*Math.ceil(t[1]/2),m=wg();return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${d}, ${f}, ${h}, b, row, col);\n      return ${m.texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,o="get"+r.charAt(0).toUpperCase()+r.slice(1),c=e.shapeInfo.texShape,l=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)],d=l[0],h=l[1],f=Math.ceil(t[n-1]/2);let m=f*Math.ceil(t[n-2]/2),y="int b, int row, int col",x=`b * ${m} + (row / 2) * ${f} + (col / 2)`;for(let b=2;b<n-1;b++)y=`int b${b}, `+y,m*=t[n-b-1],x=`b${b} * ${m} + `+x;const O=wg();return`\n    vec4 ${o}(${y}) {\n      int index = ${x};\n      int texR = index / ${h};\n      int texC = index - texR * ${h};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}, ${d});\n      return ${O.texture2D}(${r}, uv);\n    }\n  `}(e)}}const Hg="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Kg="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",qg="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Xg="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Yg(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function Jg(e){return`offset${e}`}function Zg(e){const t=e.name,n=o.of.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function Qg(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function ey(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function ty(e,t){return t.map((t=>e[t])).join(", ")}function ny(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((s,i)=>{const e=s.logicalShape,input=t[i],n=input.shape;if(!o.of.arraysEqual(e,n))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${e} and ${n} must match`);if(s.isUniform&&input.isUniform)return;const r=s.texShape,c=input.isUniform?null:input.texData.texShape;if(!o.of.arraysEqual(r,c))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${r} and ${c} must match`)}))}const{addImpl:ry,bincountImpl:ay,bincountReduceImpl:sy,ceilImpl:oy,concatImpl:iy,expImpl:uy,expm1Impl:cy,floorImpl:ly,gatherV2Impl:dy,greaterImpl:hy,lessImpl:py,linSpaceImpl:fy,logImpl:my,maxImpl:by,maximumImpl:gy,minimumImpl:yy,multiplyImpl:xy,negImpl:Oy,prodImpl:wy,rangeImpl:vy,rsqrtImpl:ky,simpleAbsImpl:Iy,sliceImpl:Ny,sparseReshapeImpl:jy,stridedSliceImpl:Sy,subImpl:Ty,tileImpl:Cy,topKImpl:$y,transposeImpl:Ey,uniqueImpl:Ay}=r;function Ry(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function Fy(e,t){return 1===t?[e]:Ry(e,t)}class Dy{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=Fy("rc",t),r=Qg(t),o=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let i=e-2;i<e;i++)r+=`${n[i]} >= ${t[i]}`,i<e-1&&(r+="||");return r}(t,e,n),c=function(e,t,n,r){if(1===e)return"";const o=r.slice(-2);return`\n    int r = ${o[0]};\n    int c = ${o[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),output=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let col=0;col<=1;col++){let o=`${0===r?"r":"rp1"}, ${0===col?"c":"cp1"}`;for(let n=2;n<e;n++)o=`${t[t.length-1-n]},`+o;n.push(o)}return n}(n,t);if(1===n)return`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`;return`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${o}) {\n            setOutput(vec4(0));\n          } else {\n            ${c}\n\n            setOutput(vec4(${output}));\n          }\n        }\n      `}}}class _y{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let i=0;i<4;i++){let e="thisRC = rc;";i%2==1&&(e+="thisRC.z += 1;"),i>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${i>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${i>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${vg(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${kg(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class My{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=zy(t,n),o=Py(e,r,n);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const c=Ly(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=c,this.log();const e=this.freeTextures[o].shift();return this.usedTextures[o].push(e),e}let l;return r===Ub.PACKED_2X2_FLOAT32?l=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===Ub.PACKED_2X2_FLOAT16?l=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===Ub.UNPACKED_FLOAT32?l=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===Ub.UNPACKED_FLOAT16?l=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===Ub.PACKED_4X1_UNSIGNED_BYTE&&(l=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(l),this.numUsedTextures++,this._numBytesAllocated+=c,this.log(),l}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const c=zy(n,r),l=Py(t,c,r);l in this.freeTextures||(this.freeTextures[l]=[]);const d=Ly(t,c,this.gpgpu.gl,this.gpgpu.textureConfig,r),h=Object(o.Od)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==h&&this._numBytesAllocated>h?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=d):(this.freeTextures[l].push(e),this.numFreeTextures++,this._numBytesFree+=d),this.numUsedTextures--;const f=this.usedTextures[l],m=f.indexOf(e);if(m<0)throw new Error("Cannot release a texture that was never provided by this texture manager");f.splice(m,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Ly(e,t,n,r,o){const c=function(e,t){switch(e){case Ub.PACKED_2X2_FLOAT32:return Lg(t);case Ub.PACKED_2X2_FLOAT16:return zg(t);case Ub.UNPACKED_FLOAT32:return Dg(t);case Ub.UNPACKED_FLOAT16:return _g(t);case Ub.PACKED_4X1_UNSIGNED_BYTE:return Mg(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let l;if(o){const[t,n]=Kb(e[0],e[1]);l=t*n}else{const[t,n]=Gb(e[0],e[1]);l=t*n}return l*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,c)}function zy(e,t){if(e===Vb.UPLOAD)return Ub.PACKED_2X2_FLOAT32;if(e===Vb.RENDER||null==e)return function(e){return Object(o.Od)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Ub.PACKED_2X2_FLOAT32:Ub.UNPACKED_FLOAT32:e?Ub.PACKED_2X2_FLOAT16:Ub.UNPACKED_FLOAT16}(t);if(e===Vb.DOWNLOAD||e===Vb.PIXELS)return Ub.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function Py(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class By{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Wy="return abs(x);";const Vy="return x;";class Uy{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class Gy{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=Fy("rc",t),r=Qg(t),o=function(e,t){if(1===e)return"rc";let n="";for(let i=0;i<e;i++)n+=t[i],i<e-1&&(n+=",");return n}(t,n),c=n.slice(-2),l=t<=1?"rc":`vec2(${c.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${o});\n\n        setOutput(getChannel(packedInput, ${l}));\n      }\n    `}}const Hy=o.be.whereImpl,Ky={};class qy extends o.wb{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Object(o.Od)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=Bb(Object(o.Od)().getNumber("WEBGL_VERSION"));this.binaryCache=((t=Object(o.Od)().getNumber("WEBGL_VERSION"))in Ky||(Ky[t]={}),Ky[t]),this.gpgpu=new Bg(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new My(this.gpgpu),this.numMBBeforeWarning=null==Object(o.Od)().global.screen?1024:Object(o.Od)().global.screen.height*Object(o.Od)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new o.L(this,Object(o.Nd)())}nextDataId(){return qy.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Object(o.Od)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(o.Od)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:Vb.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,c){if(Object(o.Od)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:Vb.UPLOAD,refCount:c})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:c,slice:l,shape:d,isPacked:h}=t;if(null!=l){let t;t=h?new Uy(d,Vy):new By(d,Vy);const n=this.runWebGLProgram(t,[{dataId:e,shape:d,dtype:r}],r),data=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),data}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const f=null!=this.activeTimers;let m,y;if(f&&(m=o.of.now()),"complex64"===r){const e=this.readSync(c.real.dataId),t=this.readSync(c.imag.dataId);y=o.od.mergeRealAndImagArrays(e,t)}else y=this.getValuesFromTexture(e);return f&&(this.downloadWaitMs+=o.of.now()-m),this.convertAndCacheOnCPU(e,y)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:c,dtype:l,complexTensorInfos:d,isPacked:h}=t;if(null!=c){let t;t=h?new Uy(r,Vy):new By(r,Vy);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:l}],l),data=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),data}if(null!=n)return this.convertAndCacheOnCPU(e);if(!Object(o.Od)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Object(o.Od)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let f,m,y=null;if("complex64"!==l&&Object(o.Od)().get("WEBGL_BUFFER_SUPPORTED")){f=this.decode(e);const t=this.texData.get(f.dataId);y=this.gpgpu.createBufferFromTexture(t.texture,...Hb(r))}if(this.pendingRead.set(e,[]),"complex64"!==l&&await this.gpgpu.createAndWaitForFence(),"complex64"===l){const e=await Promise.all([this.read(d.real.dataId),this.read(d.imag.dataId)]),t=e[0],n=e[1];m=o.od.mergeRealAndImagArrays(t,n)}else if(null==y)m=this.getValuesFromTexture(e);else{const e=o.of.sizeFromShape(r);m=this.gpgpu.downloadFloat32MatrixFromBuffer(y,e)}null!=f&&this.disposeIntermediateTensorInfo(f);const x=this.convertAndCacheOnCPU(e,m),O=this.pendingRead.get(e);return this.pendingRead.delete(e),O.forEach((e=>e(x))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Object(o.Nd)().removeDataId(e,this),this.pendingDeletes--),x}bufferSync(e){const data=this.readSync(e.dataId);let t=data;if("string"===e.dtype)try{t=data.map((e=>o.of.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(o.td)(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let i=0;i<e.length;i++){const t=e[i];if(!Yb(t)){if(Object(o.Od)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${t} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${t} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),c=o.of.sizeFromShape(t);if(Object(o.Od)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),o=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...Hb(t)).subarray(0,c);return this.disposeIntermediateTensorInfo(n),o}const l=Object(o.Od)().getBool("WEBGL_PACK")&&!0===r,d=l?lg(t):t,h=l?new Tg(d):new Sg(d),output=this.runWebGLProgram(h,[{shape:d,dtype:n,dataId:e}],"float32"),f=this.texData.get(output.dataId),m=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(f.texture,f.texShape[0],f.texShape[1]).subarray(0,c);return this.disposeIntermediateTensorInfo(output),m}timerAvailable(){return Object(o.Od)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const c=o.of.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),l=o.of.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const d={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Object(o.Od)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(c);d.kernelMs=o.of.sum(e),d.getExtraProfileInfo=()=>e.map(((e,i)=>({name:l[i],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else d.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,d}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Object(o.Od)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:o.of.now(),endMs:null}}endTimer(e){return Object(o.Od)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=o.of.now(),e)}async getQueryTime(e){if(Object(o.Od)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:o,isPacked:c,slice:l}=this.texData.get(e),d=l&&l.origDataId||e,h=this.dataRefCount.get(d);h>1?this.dataRefCount.set(d,h-1):(this.dataRefCount.delete(d),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,o,c)));const f=this.texData.get(e);f.texture=null,f.texShape=null,f.isPacked=!1,f.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=128){return Object(o.Od)().getBool("WEBGL_CPU_FORWARD")&&e.every((input=>null==this.texData.get(input.dataId).texture&&o.of.sizeFromShape(input.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){o.od.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Hy(e.shape,t)}packedUnaryOp(e,t,n){const r=new Uy(e.shape,t),c=this.compileAndRun(r,[e],n);return Object(o.Nd)().makeTensorFromDataId(c.dataId,c.shape,c.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Iy(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Object(o.Od)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Wy,e.dtype);const t=new By(e.shape,Wy),n=this.compileAndRun(t,[e]);return Object(o.Nd)().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&o.of.isString(n[0])){const c=n.map((e=>o.of.encodeString(e)));r=this.write(c,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return Object(o.Nd)().makeTensorFromDataId(r,e,t,this)}unpackTensor(input){const e=new Gy(input.shape);return this.runWebGLProgram(e,[input],input.dtype)}packTensor(input){const e=new Dy(input.shape);return this.runWebGLProgram(e,[input],input.dtype,null,!0)}packedReshape(input,e){const t=[ug(input.shape),...cg(input.shape)],n={dtype:input.dtype,shape:t,dataId:input.dataId},r=[ug(e),...cg(e)],o=new _y(r,t),output=this.runWebGLProgram(o,[n],input.dtype,null,!0);return{dataId:output.dataId,shape:e,dtype:output.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:o}=t,c=lg(r);let l;l=n?new jg(c):new Ng(c);return{dtype:o,shape:r,dataId:this.runWebGLProgram(l,[{shape:c,dtype:o,dataId:e}],o,null,!0).dataId}}runWebGLProgram(e,t,n,r,c=!1){const output=this.makeTensorInfo(e.outputShape,n),l=this.texData.get(output.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===Wb.DENSE){const t=Hb(e.outputShape);l.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(l.usage=e.outTexUsage),0===o.of.sizeFromShape(output.shape))return l.values=o.of.getTypedArrayFromDType(output.dtype,0),output;const d=[],h=t.map((input=>{if("complex64"===input.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let t=this.texData.get(input.dataId);if(null==t.texture){if(!e.packedInputs&&o.of.sizeFromShape(input.shape)<=Object(o.Od)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:input.shape,texData:null,isUniform:!0,uniformValues:t.values};e.packedInputs&&(t.isPacked=!0,t.shape=input.shape)}else if(!!t.isPacked!=!!e.packedInputs)input=t.isPacked?this.unpackTensor(input):this.packTensor(input),d.push(input),t=this.texData.get(input.dataId);else if(t.isPacked&&!hg(t.shape,input.shape)){const e=input,n=input.shape;input.shape=t.shape,input=this.packedReshape(input,n),d.push(input),t=this.texData.get(input.dataId),e.shape=n}return this.uploadToGPU(input.dataId),{shape:input.shape,texData:t,isUniform:!1}}));this.uploadToGPU(output.dataId);const f={shape:output.shape,texData:l,isUniform:!1},m=function(e,t,output){let n="";t.concat(output).forEach((e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,r=e.isUniform?"uniform":e.texData.texShape;n+=`${e.shape}_${r}_${t}`}));const r=e.userCode;let o=e.constructor.name;return o+="_"+n+"_"+r,o}(e,h,f),y=this.getAndSaveBinary(m,(()=>function(e,t,n,output){const r=t.userCode,c=n.map(((input,i)=>{const e={logicalShape:input.shape,texShape:input.isUniform?null:input.texData.texShape,isUniform:input.isUniform,isPacked:!input.isUniform&&input.texData.isPacked,flatOffset:null};return null!=input.texData&&null!=input.texData.slice&&input.texData.slice.flatOffset>0&&(e.flatOffset=input.texData.slice.flatOffset),{name:t.variableNames[i],shapeInfo:e}})),l=c.map((e=>e.shapeInfo)),d={logicalShape:output.shape,texShape:output.texData.texShape,isUniform:!1,isPacked:output.texData.isPacked,flatOffset:null},source=Vg(c,d,r,t.packedInputs),h=e.createProgram(source);let f=null;const m=e.getUniformLocation(h,"NAN",!1);1===Object(o.Od)().getNumber("WEBGL_VERSION")&&(f=e.getUniformLocation(h,"INFINITY",!1));const y={};for(let i=0;i<t.variableNames.length;i++){const n=t.variableNames[i],r=!1;y[n]=e.getUniformLocation(h,n,r),y[`offset${n}`]=e.getUniformLocation(h,`offset${n}`,r)}return{program:t,source:source,webGLProgram:h,uniformLocations:y,inShapeInfos:l,outShapeInfo:d,infLoc:f,nanLoc:m}}(this.gpgpu,e,h,f))),x=null!=this.activeTimers;let O;x&&(O=this.startTimer()),function(e,t,n,output,r){ny(t.inShapeInfos,n),ny([t.outShapeInfo],[output]);const c=output.texData.texture,l=output.texData.texShape;output.texData.isPacked?e.setOutputPackedMatrixTexture(c,l[0],l[1]):e.setOutputMatrixTexture(c,l[0],l[1]),e.setProgram(t.webGLProgram),1===Object(o.Od)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((input,i)=>{const n=t.program.variableNames[i],r=t.uniformLocations[n],c=t.uniformLocations[`offset${n}`];if(null!=r)if(input.isUniform)if(o.of.sizeFromShape(input.shape)<2)e.gl.uniform1f(r,input.uniformValues[0]);else{let t=input.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(r,t)}else null!=input.texData.slice&&null!=c&&e.gl.uniform1i(c,input.texData.slice.flatOffset),e.setInputMatrixTexture(input.texData.texture,r,i)})),null!=r&&r(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,y,h,f,r),d.forEach((e=>this.disposeIntermediateTensorInfo(e))),x&&(O=this.endTimer(O),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(O)}));const w=Object(o.Od)().get("WEBGL_FLUSH_THRESHOLD");if(w>0){const time=o.of.now();time-this.lastGlFlushTime>w&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=time)}if(!Object(o.Od)().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&!1===c){const e=this.unpackTensor(output);return this.disposeIntermediateTensorInfo(output),e}return output}compileAndRun(e,t,n,r,o=!1){n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,o)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Object(o.Od)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(o.hf)((()=>{if(!Object(o.Od)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Object(o.Od)().getBool("DEBUG");Object(o.Od)().set("DEBUG",!1);const t=this.abs(Object(o.He)(1e-8)).dataSync()[0];if(Object(o.Od)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:c,texture:l,usage:d,isPacked:h}=t;if(null!=l)return;const f=null!=this.activeTimers;let m;f&&(m=o.of.now());let y=t.texShape;if(null==y&&(y=function(e,t=!1){let n=Object(o.Od)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,i)=>i>=e.length-2?o.of.nearestLargerEven(e[i]):e[i]))).length&&(e=[2,e[0]])),2!==e.length){const t=o.of.squeezeShape(e);e=t.newShape}let r=o.of.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=ug(e);let n=2,c=2;return e.length&&([n,c]=cg(e)),r=t*(n/2)*(c/2),o.of.sizeToSquarishShape(r).map((e=>2*e))}return o.of.sizeToSquarishShape(r)}(n,h),t.texShape=y),null!=c){const e=lg(n);let l,d=y[1],x=y[0];const O=c instanceof Uint8Array;h?([d,x]=Kb(y[0],y[1]),l=new $g(e,[x,d],O)):l=new Cg(e,[x,d],O);const w=this.makeTensorInfo([x,d],r);this.texData.get(w.dataId).usage=O?Vb.PIXELS:Vb.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(w.dataId),d,x,c);const v=!0,k=this.runWebGLProgram(l,[w],r,null,v),I=this.texData.get(k.dataId);t.texture=I.texture,t.texShape=I.texShape,t.isPacked=I.isPacked,t.usage=I.usage,this.disposeIntermediateTensorInfo(w),this.texData.delete(k.dataId),t.values=null,f&&(this.uploadWaitMs+=o.of.now()-m)}else{const e=this.acquireTexture(y,d,r,h);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(a,e){if("float32"===e||"complex64"===e)return a;if("int32"===e||"bool"===e){const t="int32"===e?new Int32Array(a.length):new Uint8Array(a.length);for(let i=0;i<t.length;++i)t[i]=Math.round(a[i]);return t}throw new Error(`Unknown dtype ${e}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*o.of.bytesPerElement(t)}}qy.nextDataId=0;o.Id.isBrowser()&&Object(o.Ce)("webgl",(()=>new qy),2);class Xy{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=o.od.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class Yy{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o.od.assertAndGetBroadcastShape(t,n);const c=this.outputShape.length;let l="";if(r)if(0===c||1===o.of.sizeFromShape(this.outputShape))l="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(l=`\n          ${Qg(c)} coords = getOutputCoords();\n        `,1===c)l+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=Fy("coords",c);l+=`\n            bool nextRowOutOfBounds =\n              (${e[c-2]} + 1) >= ${this.outputShape[c-2]};\n            bool nextColOutOfBounds =\n              (${e[c-1]} + 1) >= ${this.outputShape[c-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${l}\n\n        setOutput(result);\n      }\n    `}}function Jy(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Zy={kernelName:o.rb,backendName:"webgl",kernelFunc:Jy};function Qy(e){const{inputs:t,backend:n}=e,{real:r,imag:o}=t,c=n.makeTensorInfo(r.shape,"complex64"),l=n.texData.get(c.dataId),d=Jy({inputs:{x:r},backend:n}),h=Jy({inputs:{x:o},backend:n});return l.complexTensorInfos={real:d,imag:h},c}const ex={kernelName:o.y,backendName:"webgl",kernelFunc:Qy},tx="return (a < 0.) ? b * a : a;",nx="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const rx={kernelName:o.zb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{alpha:l}=r,d=n.makeTensorInfo([],"float32",o.of.createScalarValue(l,"float32")),h=Object(o.Od)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Yy(nx,c.shape,d.shape):new Xy(tx,c.shape,d.shape),f=n.runWebGLProgram(h,[c,d],c.dtype);return n.disposeIntermediateTensorInfo(d),f}},ax="return (a < 0.) ? b * a : a;",sx="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const ox={kernelName:o.hc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:c}=t,l=Object(o.Od)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Yy(sx,r.shape,c.shape):new Xy(ax,r.shape,c.shape);return n.runWebGLProgram(l,[r,c],r.dtype)}};function ix({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:c,backend:l})=>{const{x:d}=c,h=l,f=r||d.dtype;if(h.shouldExecuteOnCPU([d])&&null!=n){const e=h.texData.get(d.dataId),t=n(e.values,f);return h.makeTensorInfo(d.shape,f,t)}let m;return m=Object(o.Od)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new Uy(d.shape,t):new By(d.shape,e),h.runWebGLProgram(m,[d],f)}}function ux({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:c,dtype:l}){return({inputs:d,backend:h})=>{const{a:a,b:b}=d,f=h;if(r&&"complex64"===a.dtype){const t=f.texData.get(a.dataId),n=f.texData.get(b.dataId),[r,c]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,c={dataId:n.dataId,dtype:n.dtype,shape:a.shape},l={dataId:r.dataId,dtype:r.dtype,shape:b.shape},d=new Xy(e,a.shape,b.shape);return f.runWebGLProgram(d,[c,l],Object(o.nf)(n.dtype,r.dtype))})),l=Qy({inputs:{real:r,imag:c},backend:f});return f.disposeIntermediateTensorInfo(r),f.disposeIntermediateTensorInfo(c),l}const m=l||Object(o.nf)(a.dtype,b.dtype);if(f.shouldExecuteOnCPU([a,b])&&null!=c){const e=f.texData.get(a.dataId),t=f.texData.get(b.dataId),[n,r]=c(a.shape,b.shape,e.values,t.values,m),o=f.makeTensorInfo(r,m);return f.texData.get(o.dataId).values=n,o}let y;return y=Object(o.Od)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new Yy(t,a.shape,b.shape,n):new Xy(e,a.shape,b.shape),f.runWebGLProgram(y,[a,b],m)}}function cx(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?sx:ax;if("leakyrelu"===e)return t?nx:tx;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class lx{constructor(e,t,n,r=!1,o=!1,c=!1,l=null,d=!1,h=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const f=r?e[1]:e[2],m=Math.ceil(f/2),y=r?"i * 2, rc.y":"rc.y, i * 2",x=o?"rc.z, i * 2":"i * 2, rc.z",O=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],w=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let v="",k="";l&&(v=d?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${l}\n        }`:h?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${l}\n        }`:`vec4 activation(vec4 x) {\n          ${l}\n        }`,k="result = activation(result);");const I=c?"result += getBiasAtOutCoords();":"";c&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),h&&this.variableNames.push("leakyreluAlpha");let N="rc.x",j="rc.x";e[0]<t[0]?N=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(j=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${v}\n\n      const float sharedDimension = ${m}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${m}; i++) {\n          int batchA = ${N};\n          int batchB = ${j};\n          vec4 a = getMatrixA(batchA, ${y});\n          vec4 b = getMatrixB(batchB, ${x});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${O[0]} * ${w[0]});\n          result += (${O[1]} * ${w[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${I}\n\n        ${k}\n\n        setOutput(result);\n      }\n    `}}const dx="return areal * breal - aimag * bimag;",hx="return areal * bimag + aimag * breal;";class px{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=o.od.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const fx="return a * b;";function mx(e){const{inputs:t,backend:n}=e,{a:a,b:b}=t,r=o.od.upcastType(a.dtype,b.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(b.dataId),r=new px(dx,a.shape,b.shape),o=new px(hx,a.shape,b.shape),c=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:b.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:b.shape}],l=n.runWebGLProgram(r,c,"float32"),d=n.runWebGLProgram(o,c,"float32"),h=Qy({inputs:{real:l,imag:d},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),h}if(n.shouldExecuteOnCPU([a,b])){const e=n.texData.get(a.dataId),t=n.texData.get(b.dataId),[o,c]=xy(a.shape,b.shape,e.values,t.values,r),l=n.makeTensorInfo(c,r);return n.texData.get(l.dataId).values=o,l}let c;return c=Object(o.Od)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Yy(fx,a.shape,b.shape):new Xy(fx,a.shape,b.shape),n.runWebGLProgram(c,[a,b],r)}const bx={kernelName:o.Vb,backendName:"webgl",kernelFunc:mx};function gx(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{shape:l}=r,d=n,h=o.of.sizeFromShape(c.shape),f=o.of.inferFromImplicitShape(l,h),m=o.of.sizeFromShape(f);o.of.assert(h===m,(()=>`The new shape (${f}) has ${m} elements and the old shape (${c.shape}) has ${h} elements. The new shape and old shape must have the same number of elements.`));const y=d.texData.get(c.dataId);return!y.isPacked||hg(c.shape,f)||null!==y.texture&&hg(y.shape,f)?(d.incRef(c.dataId),{dataId:c.dataId,shape:f,dtype:c.dtype}):function(input,e,t){const n=[ug(input.shape),...cg(input.shape)],r={dtype:input.dtype,shape:n,dataId:input.dataId},o=[ug(e),...cg(e)],c=new _y(o,n),output=t.runWebGLProgram(c,[r],input.dtype,null,!0);return{dataId:output.dataId,shape:e,dtype:output.dtype}}(c,f,d)}const yx={kernelName:o.pc,backendName:"webgl",kernelFunc:gx};class xx{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:c,outSize:l}=e;this.outputShape=[r,l];const d=4*Math.floor(n/4),h=n%4;let f="sumValue += dot(values, ones);";if(null!=t){const e=1/t;f=`sumValue += dot(values * ${o.of.isInt(e)?e.toPrecision(2):e}, ones);`}let m="";c%n>0&&(m=`\n        if (inIdx < 0 || inIdx >= ${c}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${m}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${d}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${f}\n        }\n\n        int inIdx = inOffset + ${d};\n        if (${1===h}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${f}\n        } else if (${2===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${f}\n        } else if (${3===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${f}\n        }\n        setOutput(sumValue);\n      }\n    `}}class Ox{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:o,outSize:c}=e;this.outputShape=[r,c];let l="0.0",d="";"prod"===t?l="1.0":"min"===t?(l="1.0 / 1e-20",d="min"):"max"===t&&(l="-1.0 / 1e-20",d="max");let h=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?h="sumValue":"prod"===t?h="prodValue":"all"===t?h="allValue":"any"===t&&(h="anyValue");const f=4*Math.floor(n/4),m=n%4;let y=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${d}(values, minMaxValue);\n      }\n    `,x="vec4";"all"===t?(l="1.0",y="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",x="bvec4"):"any"===t&&(l="0.0",y="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",x="bvec4");let O="";o%n>0&&(O=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${l};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${O}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${l});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${f}; i += 4) {\n          int inIdx = inOffset + i;\n          ${x} values = ${x}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${y}\n        }\n\n        int inIdx = inOffset + ${f};\n        if (${1===m}) {\n          ${x} values = ${x}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${y}\n        } else if (${2===m}) {\n          ${x} values = ${x}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${y}\n        } else if (${3===m}) {\n          ${x} values = ${x}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${y}\n        }\n        setOutput(${h});\n      }\n    `}}function wx(e,t,n,r){const c=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=o.od.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let l=e;for(let i=0;i<c.length;i++){const{inSize:o,windowSize:d,outSize:h}=c[i];let f,m;f="mean"===n?0===i?new xx({windowSize:d,inSize:o,batchSize:e.shape[0],outSize:h},o):new xx({windowSize:d,inSize:o,batchSize:e.shape[0],outSize:h}):new Ox({windowSize:d,inSize:o,batchSize:e.shape[0],outSize:h},n),m=l,l=r.runWebGLProgram(f,[l],t),m.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(m)}return l}class vx{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[t[i]];this.outputShape=n,this.rank=n.length;const r=Qg(this.rank),o=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let i=0;i<e.length;i++)r[e[i]]=n[i];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${o}));\n    }\n    `}}class kx{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[t[i]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Qg(this.rank),o=Ry("rc",this.rank),c=new Array(this.rank);for(let i=0;i<t.length;i++)c[t[i]]=o[i];const l=`vec2(${c.slice(-2).join()})`,d=`++${o[this.rank-1]} < ${n[this.rank-1]}`,h=`getChannel(getA(${c.join()}), ${l})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${h};\n      if(${d}) {\n        result[1] = ${h};\n      }\n      --${o[this.rank-1]};\n      if(++${o[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${h};\n        if(${d}) {\n          result[3] = ${h};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Ix(e,t,n){const r=Object(o.Od)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new kx(e.shape,t):new vx(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function Nx(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l,keepDims:d}=r;return function(e,t,n,r){const c=t,l=e.shape.length,d=o.of.parseAxisParam(c,e.shape);let h=d;const f=o.od.getAxesPermutation(h,l),m=null!=f;let y=e;m&&(y=Ix(e,f,r),h=o.od.getInnerMostAxes(h.length,l)),o.od.assertAxesAreInnerMostDims("sum",h,l);const[x,O]=o.od.computeOutAndReduceShapes(y.shape,h);let w=x;n&&(w=o.od.expandShapeToKeepDim(x,d));const v=o.of.sizeFromShape(O),k=gx({inputs:{x:y},attrs:{shape:[o.of.sizeFromShape(e.shape)/v,v]},backend:r}),I=wx(k,Object(o.bf)(e.dtype),"sum",r),N=gx({inputs:{x:I},attrs:{shape:w},backend:r});return r.disposeIntermediateTensorInfo(k),r.disposeIntermediateTensorInfo(I),m&&r.disposeIntermediateTensorInfo(y),N}(c,l,d,n)}const jx={kernelName:o.Sc,backendName:"webgl",kernelFunc:Nx};function Sx(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{perm:c}=r,l=n,d=o.shape.length,h=new Array(d);for(let i=0;i<h.length;i++)h[i]=o.shape[c[i]];let f;if(l.shouldExecuteOnCPU([o])){const e=l.texData.get(o.dataId).values,t=Ey(e,o.shape,o.dtype,c,h);f=l.makeTensorInfo(h,o.dtype);l.texData.get(f.dataId).values=t}else f=Ix(o,c,l);return f}const Tx={kernelName:o.ad,backendName:"webgl",kernelFunc:Sx};function Cx({a:a,b:b,transposeA:e,transposeB:t,backend:n,bias:r=null,preluActivationWeights:c=null,leakyreluAlpha:l=0,activation:d=null}){const h=a.shape.length,f=b.shape.length,m=e?a.shape[h-2]:a.shape[h-1],y=t?b.shape[f-1]:b.shape[f-2],x=e?a.shape[h-1]:a.shape[h-2],O=t?b.shape[f-2]:b.shape[f-1],w=a.shape.slice(0,-2),v=b.shape.slice(0,-2),k=o.of.sizeFromShape(w),I=o.of.sizeFromShape(v),N=k===I||1===k||1===I;o.of.assert(h>=2&&f>=2&&N,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${w}) and (${v}).`));const j=(k>I?a.shape.slice(0,-2):b.shape.slice(0,-2)).concat([x,O]);o.of.assert(m===y,(()=>`Error in matMul: inner shapes (${m}) and (${y}) of Tensors with shapes ${a.shape} and ${b.shape} and transposeA=${e} and transposeB=${t} must match.`));const S=e?[k,m,x]:[k,x,m],T=t?[I,O,y]:[I,y,O],C=gx({inputs:{x:a},backend:n,attrs:{shape:S}}),$=gx({inputs:{x:b},backend:n,attrs:{shape:T}}),E=[C,$],A=Math.max(k,I),R=e?C.shape[1]:C.shape[2],F=null!=r,D=null!=c,_="leakyrelu"===d,M=null!=d?cx(d,!0):null;let L;if((1===x||1===O)&&R>1e3&&!1===(F||D||_||null!=M)){let r=C,o=$;e&&(r=Sx({inputs:{x:C},backend:n,attrs:{perm:[0,2,1]}}),E.push(r)),t&&(o=Sx({inputs:{x:$},backend:n,attrs:{perm:[0,2,1]}}),E.push(o));const c=1===O;let l=r;1!==O&&(l=gx({inputs:{x:r},backend:n,attrs:{shape:[A,R,1]}}),E.push(l));const d=1===O?2:1;let h=o;c&&(h=gx({inputs:{x:o},backend:n,attrs:{shape:[A,1,R]}}),E.push(h));const f=mx({inputs:{a:l,b:h},backend:n});L=Nx({inputs:{x:f},backend:n,attrs:{axis:d,keepDims:!0}}),E.push(f)}else{const d=Object(o.nf)(a.dtype,b.dtype),h=new lx(S,T,[A,x,O],e,t,F,M,D,_),f=[C,$];if(null!=r&&f.push(r),D&&f.push(c),_){const e=n.makeTensorInfo([],"float32",o.of.createScalarValue(l,"float32"));f.push(e),E.push(e)}L=n.runWebGLProgram(h,f,d)}const z=gx({inputs:{x:L},backend:n,attrs:{shape:j}});E.push(L);for(const i of E)n.disposeIntermediateTensorInfo(i);return z}const $x={kernelName:o.fd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:b,bias:o,preluActivationWeights:c}=t,{transposeA:l,transposeB:d,activation:h,leakyreluAlpha:f}=r;return Cx({a:a,b:b,transposeA:l,transposeB:d,backend:n,bias:o,preluActivationWeights:c,leakyreluAlpha:f,activation:h})}},Ex="return abs(x);";const Ax={kernelName:o.a,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=Iy(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let c;return c=Object(o.Od)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Uy(r.shape,Ex):new By(r.shape,Ex),n.runWebGLProgram(c,[r],r.dtype)}},Rx=ix({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Fx={kernelName:o.b,backendName:"webgl",kernelFunc:Rx},Dx=ix({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),_x={kernelName:o.c,backendName:"webgl",kernelFunc:Dx},Mx="return a + b;",Lx=ux({opSnippet:Mx,packedOpSnippet:Mx,supportsComplex:!0,cpuKernelImpl:ry}),zx={kernelName:o.d,backendName:"webgl",kernelFunc:Lx};class Px{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,i)=>`T${i}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class Bx{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,i)=>`T${i}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const Wx={kernelName:o.e,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,c=n;if(1===c.length)return Jy({inputs:{x:c[0]},backend:r});if(c.length>Object(o.Od)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(c.length/2),n=e({inputs:c.slice(0,t),backend:r}),o=e({inputs:c.slice(t),backend:r});return e({inputs:[n,o],backend:r})}const l=c.map((e=>e.dtype)).reduce(((e,t)=>Object(o.nf)(e,t))),d=c.map((e=>e.shape)),h=Object(o.Od)().getBool("WEBGL_PACK")?new Bx(c[0].shape,d):new Px(c[0].shape,d);return r.runWebGLProgram(h,c,l)}};const Vx={kernelName:o.f,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l,keepDims:d}=r,h=c.shape.length,f=o.of.parseAxisParam(l,c.shape);let m=f;const y=o.od.getAxesPermutation(m,h);let x=c;null!=y&&(x=Sx({inputs:{x:c},backend:n,attrs:{perm:y}}),m=o.od.getInnerMostAxes(m.length,h)),o.od.assertAxesAreInnerMostDims("all",m,h);const[O,w]=o.od.computeOutAndReduceShapes(x.shape,m),v=gx({inputs:{x:x},backend:n,attrs:{shape:[-1,o.of.sizeFromShape(w)]}}),k=wx(v,v.dtype,"all",n);let I;if(d){I=gx({inputs:{x:k},backend:n,attrs:{shape:o.od.expandShapeToKeepDim(O,f)}})}else I=gx({inputs:{x:k},backend:n,attrs:{shape:O}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(k),null!=y&&n.disposeIntermediateTensorInfo(x),I}};const Ux={kernelName:o.g,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l,keepDims:d}=r,h=c.shape.length,f=o.of.parseAxisParam(l,c.shape);let m=f;const y=o.od.getAxesPermutation(m,h);let x=c;null!=y&&(x=Sx({inputs:{x:c},backend:n,attrs:{perm:y}}),m=o.od.getInnerMostAxes(m.length,h)),o.od.assertAxesAreInnerMostDims("any",m,h);const[O,w]=o.od.computeOutAndReduceShapes(x.shape,m),v=gx({inputs:{x:x},backend:n,attrs:{shape:[-1,o.of.sizeFromShape(w)]}}),k=wx(v,v.dtype,"any",n);let I;if(d){I=gx({inputs:{x:k},backend:n,attrs:{shape:o.od.expandShapeToKeepDim(O,f)}})}else I=gx({inputs:{x:k},backend:n,attrs:{shape:O}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(k),null!=y&&n.disposeIntermediateTensorInfo(x),I}};class Gx{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:o,outSize:c}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[o,c];const l="max"===t?">":"<",d=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${d};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${l} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class Hx{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,o.of.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const c=e[e.length-1],l=Math.ceil(c/t);this.outputShape=e.slice(0,-1),l>1&&this.outputShape.push(l),r||this.variableNames.push("bestIndicesA");const d=this.outputShape,h=d.length,f=Qg(h),m=Fy("coords",h);let y,x;if(1===l){x=h+1;const e=Qg(x);y=`\n        ${e} sourceLocR = ${e}(${m.join()}, 0);\n        ++${m[h-1]};\n        ${e} sourceLocG = ${e}(${m.join()}, 0);\n        ++${m[h-2]};\n        ${e} sourceLocA = ${e}(${m.join()}, 0);\n        --${m[h-1]};\n        ${e} sourceLocB = ${e}(${m.join()}, 0);\n        --${m[h-2]};`}else x=h,y=`\n        ${f} sourceLocR = coords;\n        ++${m[h-1]};\n        ${f} sourceLocG = coords;\n        ++${m[h-2]};\n        ${f} sourceLocA = coords;\n        --${m[h-1]};\n        ${f} sourceLocB = coords;\n        --${m[h-2]};`;const O=["x","y","z","w","u","v"].slice(0,x),w="."+O[x-1],v=O.map((e=>"int "+e)),k=Fy("sourceLocR",x-1).concat("inIdx.r"),I=Fy("sourceLocG",x-1).concat("inIdx.g"),N=Fy("sourceLocB",x-1).concat("inIdx.b"),j=Fy("sourceLocA",x-1).concat("inIdx.a"),S="max"===n?"greaterThan":"lessThan",T=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${k.join()}),\n                             getBestIndicesAChannel(${I.join()}),\n                             getBestIndicesAChannel(${N.join()}),\n                             getBestIndicesAChannel(${j.join()})));`,C=`vec4(\n            getAChannel(${k.join()}),\n            hasNextCol ? getAChannel(${I.join()}) : 0.,\n            hasNextRow ? getAChannel(${N.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${j.join()}) : 0.)`,$=r?"":`\n      float getBestIndicesAChannel(${v.join()}) {\n        return getChannel(getBestIndicesA(${O.join()}),\n                                          vec2(${O.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${v.join()}) {\n        return getChannel(getA(${O.join()}),\n                               vec2(${O.slice(-2).join()}));\n      }\n      ${$}\n      void main() {\n        ${f} coords = getOutputCoords();\n        bool hasNextCol = ${m[h-1]} < ${d[h-1]-1};\n        bool hasNextRow = ${m[h-2]} < ${d[h-2]-1};\n        ${y}\n        ivec4 srcIdx = ivec4(sourceLocR${w}, sourceLocG${w},\n          sourceLocB${w}, sourceLocA${w}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${C};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${T}\n          vec4 candidate = ${C};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${S}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function Kx(e,t,n,r=null){let c=t.shape[0],l=t.shape[1];null!=r&&(c=r.shape[0],l=r.shape[1]);const d=o.od.computeOptimalWindowSize(l),h={windowSize:d,inSize:l,batchSize:c,outSize:Math.ceil(l/d)},f=new Gx(h,n,null==r),m=[t];null!=r&&m.push(r);const output=e.runWebGLProgram(f,m,"int32");if(1===output.shape[1])return output;const y=Kx(e,t,n,output);return e.disposeIntermediateTensorInfo(output),y}function qx(e,t,n,r=null){const c=null!=r?r.shape:t.shape,l=c[c.length-1],d=o.od.computeOptimalWindowSize(l),h=new Hx(c,d,n,null==r),f=null==r?[t]:[t,r],output=e.runWebGLProgram(h,f,"int32");if(output.shape.length===t.shape.length){const r=qx(e,t,n,output);return e.disposeIntermediateTensorInfo(output),r}return output}function Xx(e,t,n,r){const c=[n];if(o.od.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),c,t.shape.length),!Object(o.Od)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[l,d]=o.od.computeOutAndReduceShapes(t.shape,c),h=o.of.sizeFromShape(d),f=gx({inputs:{x:t},backend:e,attrs:{shape:[-1,h]}});n.push(f);const m=Kx(e,f,r);n.push(m);const y=gx({inputs:{x:m},backend:e,attrs:{shape:l}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),y}return qx(e,t,r)}const Yx={kernelName:o.h,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l}=r;let d=o.of.parseAxisParam(l,c.shape);const h=o.od.getAxesPermutation(d,c.shape.length);let f=c;const m=[];null!=h&&(f=Sx({inputs:{x:c},backend:n,attrs:{perm:h}}),m.push(f),d=o.od.getInnerMostAxes(d.length,f.shape.length)),o.od.assertAxesAreInnerMostDims("argMax",[d[0]],f.shape.length);const y=Xx(n,f,d[0],"max");return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const Jx={kernelName:o.i,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l}=r;let d=o.of.parseAxisParam(l,c.shape);const h=o.od.getAxesPermutation(d,c.shape.length);let f=c;const m=[];null!=h&&(f=Sx({inputs:{x:c},backend:n,attrs:{perm:h}}),m.push(f),d=o.od.getInnerMostAxes(d.length,f.shape.length)),o.od.assertAxesAreInnerMostDims("argMin",[d[0]],f.shape.length);const y=Xx(n,f,d[0],"min");return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},Zx=ix({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Qx={kernelName:o.j,backendName:"webgl",kernelFunc:Zx},eO=ix({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),tO={kernelName:o.k,backendName:"webgl",kernelFunc:eO},nO=ix({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),rO={kernelName:o.l,backendName:"webgl",kernelFunc:nO},aO=ux({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),sO={kernelName:o.m,backendName:"webgl",kernelFunc:aO},oO=ix({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),iO={kernelName:o.n,backendName:"webgl",kernelFunc:oO};class uO{constructor(e,t,n,r=!1,o=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const c=e.filterWidth,l=e.strideHeight,d=e.strideWidth,h=e.dilationHeight,f=e.dilationWidth,m=e.effectiveFilterHeight,y=e.effectiveFilterWidth,x=e.padInfo.top,O=e.padInfo.left;this.outputShape=e.outShape;const w="avg"===t,v=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,k=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let I="0.0";if(w||(I="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${l}, ${d});\n        const ivec2 pads = ivec2(${x}, ${O});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${m};\n              wR += ${h}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${y};\n                wC += ${f}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?o?v:k:`wR * ${y} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let N=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(N="avgValue / count");const j=4*Math.floor(c/4),S=c%4,T=`\n      if (${w}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${l}, ${d});\n      const ivec2 pads = ivec2(${x}, ${O});\n      const float initializationValue = ${I};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${I});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${m};\n            wR += ${h}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${j}; wC += 4) {\n            int xC = xCCorner + wC * ${f};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${f}, d),\n              getValue(batch, xR, xC + 2 * ${f}, d),\n              getValue(batch, xR, xC + 3 * ${f}, d)\n            );\n\n            ${T}\n          }\n\n          int xC = xCCorner + ${j};\n          if (${1===S}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${T}\n          } else if (${2===S}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${f}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${T}\n          } else if (${3===S}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${f}, d),\n              getValue(batch, xR, xC + 2 * ${f}, d),\n              initializationValue\n            );\n\n            ${T}\n          }\n        }\n        setOutput(${N});\n      }\n    `}}class cO{constructor(e,t,n,r=!1,o=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const c=e.filterWidth,l=e.strideDepth,d=e.strideHeight,h=e.strideWidth,f=e.dilationDepth,m=e.dilationHeight,y=e.dilationWidth,x=e.effectiveFilterDepth,O=e.effectiveFilterHeight,w=e.effectiveFilterWidth,v=e.padInfo.front,k=e.padInfo.top,I=e.padInfo.left;this.outputShape=e.outShape;const N="avg"===t;let j="0.0";if(N||(j="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${l}, ${d}, ${h});\n        const ivec3 pads = ivec3(${v}, ${k}, ${I});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${x};\n              wD += ${f}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${O};\n                wR += ${m}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${w};\n                  wC += ${y}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${O} * ${w} +\n                      wR * ${w} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let S=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(S="avgValue / count");const T=4*Math.floor(c/4),C=c%4,$=`\n      if (${N}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${l}, ${d}, ${h});\n      const ivec3 pads = ivec3(${v}, ${k}, ${I});\n      const float initializationValue = ${j};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${j});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${x};\n            wD += ${f}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${O};\n            wR += ${m}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${T}; wC += 4) {\n              int xC = xCCorner + wC * ${y};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${y}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${y}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${y}, ch)\n              );\n\n              ${$}\n            }\n\n            int xC = xCCorner + ${T};\n            if (${1===C}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${$}\n            } else if (${2===C}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${y}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${$}\n            } else if (${3===C}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${y}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${y}, ch),\n                initializationValue\n              );\n\n              ${$}\n            }\n          }\n          setOutput(${S});\n        }\n      }\n    `}}const lO={kernelName:o.o,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t;xg(c,"avgPool");const{filterSize:l,strides:d,pad:h,dimRoundingMode:f}=r;o.of.assert(o.od.eitherStridesOrDilationsAreOne(d,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${d} and dilations '1'`));const m=o.od.computePool2DInfo(c.shape,l,d,1,h,f);if(1===m.filterWidth&&1===m.filterHeight&&o.of.arraysEqual(m.inShape,m.outShape))return Jy({inputs:{x:c},backend:n});const y=new uO(m,"avg",!1);return n.runWebGLProgram(y,[c],"float32")}};const dO={kernelName:o.p,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{filterSize:l,strides:d,pad:h,dimRoundingMode:f,dataFormat:m}=r,y=o.od.computePool3DInfo(c.shape,l,d,[1,1,1],h,f,m),x=new cO(y,"avg",!1);return n.runWebGLProgram(x,[c],"float32")}};class hO{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,o=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,f=d-1-e.padInfo.top,m=h-1-e.padInfo.left,y=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${f}, ${m});\n      const float avgMultiplier = float(${y});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${h};\n            wC+= ${l}) {\n            float dyC = float(dyCCorner + wC) / ${o}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class pO{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,o=e.strideDepth,c=e.strideHeight,l=e.strideWidth,d=e.dilationDepth,h=e.dilationHeight,f=e.dilationWidth,m=e.effectiveFilterDepth,y=e.effectiveFilterHeight,x=e.effectiveFilterWidth,O=m-1-e.padInfo.front,w=y-1-e.padInfo.top,v=x-1-e.padInfo.left,k=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${O}, ${w}, ${v});\n      const float avgMultiplier = float(${k});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${m};\n            wD += ${d}) {\n          float dyD = float(dyDCorner + wD) / ${o}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${y};\n              wR += ${h}) {\n            float dyR = float(dyRCorner + wR) / ${c}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${x};\n                wC += ${f}) {\n              float dyC = float(dyCCorner + wC) / ${l}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const fO={kernelName:o.q,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,input:input}=t,l=input,{filterSize:d,strides:h,pad:f,dimRoundingMode:m}=r,y=o.od.computePool3DInfo(l.shape,d,h,[1,1,1],f,m),x=new pO(y);return n.runWebGLProgram(x,[c],l.dtype)}};const mO={kernelName:o.r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,input:input}=t,l=input;xg([c,input],"avgPoolGrad");const{filterSize:d,strides:h,pad:f}=r,m=o.od.computePool2DInfo(l.shape,d,h,1,f),y=new hO(m);return n.runWebGLProgram(y,[c],l.dtype)}};const bO={kernelName:o.s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:b}=t,{transposeA:o,transposeB:c}=r;return Cx({a:a,b:b,transposeA:o,transposeB:c,backend:n})}};class gO{constructor(e,t,n,r,c,l){this.outputShape=[],this.variableNames=["x","mean","variance"],o.od.assertAndGetBroadcastShape(e,t),o.od.assertAndGetBroadcastShape(e,n);let d="0.0";null!=r&&(o.od.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),d="getOffsetAtOutCoords()");let h="1.0";null!=c&&(o.od.assertAndGetBroadcastShape(e,c),this.variableNames.push("scale"),h="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${d};\n        float scale = ${h};\n        float inv = scale * inversesqrt(variance + float(${l}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class yO{constructor(e,t,n,r,c,l){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],o.od.assertAndGetBroadcastShape(e,t),o.od.assertAndGetBroadcastShape(e,n);let d="vec4(0.0)";null!=r&&(o.od.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),d="getOffsetAtOutCoords()");let h="vec4(1.0)";null!=c&&(o.od.assertAndGetBroadcastShape(e,c),this.variableNames.push("scale"),h="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${d};\n        vec4 scale = ${h};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${l}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const xO={kernelName:o.jb,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:c,variance:l,offset:d,scale:h}=e;o.of.assert(c.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),o.of.assert(null==d||c.shape.length===d.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),o.of.assert(null==h||c.shape.length===h.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:f}=n;null==f&&(f=.001);const m=[r,c,l];let y=null;null!=d&&(y=d.shape,m.push(d));let x=null;null!=h&&(x=h.shape,m.push(h));const O=Object(o.Od)().getBool("WEBGL_PACK_NORMALIZATION")?new yO(r.shape,c.shape,l.shape,y,x,f):new gO(r.shape,c.shape,l.shape,y,x,f);return t.runWebGLProgram(O,m,m[0].dtype)}};class OO{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Qg(this.rank),n=`uniform int start[${this.rank}];`,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return wO.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let body;body=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,i)=>`sourceLoc.${wO[i]} = start[${i}] + coords.${wO[i]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${body}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const wO=["x","y","z","w","u","v"];class vO{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=Qg(this.rank),n=Fy("coords",this.rank),r=Fy("sourceLoc",this.rank),o=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,c=`getChannel(getSource(${r.join()}), ${o})`,l=`\n      result.x = ${c};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${c};\n        --${r[this.rank-1]};\n      }\n    `,d=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${c};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${c};\n        }\n      }\n    `,h=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,i)=>`start[${i}]`)).join()});`:e.map(((e,i)=>`${r[i]} = ${n[i]} + start[${i}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${h}\n        vec4 result = vec4(0.);\n        ${l}\n        ${d}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}function kO(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{begin:l,size:d}=r,[h,f]=o.Se.parseSliceParams(c,l,d);if(o.Se.assertParamsValid(c,h,f),0===o.of.sizeFromShape(f))return n.makeTensorInfo(f,c.dtype,[]);if(n.shouldExecuteOnCPU([c])||"string"===c.dtype){const e=n.texData.get(c.dataId),t=Ny(e.values,h,f,c.shape,c.dtype);return n.makeTensorInfo(f,c.dtype,t)}const{isPacked:m}=n.texData.get(c.dataId),y=o.Se.isSliceContinous(c.shape,h,f);if(m||!y){const e=Object(o.Od)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new vO(f):new OO(f),t=e.getCustomSetupFunc(h);return n.runWebGLProgram(e,[c],c.dtype,t)}return n.uploadToGPU(c.dataId),function(e,t,n,r){const c=r.texData.get(e.dataId),l=r.makeTensorInfo(n,e.dtype),d=r.texData.get(l.dataId);Object.assign(d,c),d.refCount=1,d.shape=n,d.dtype=e.dtype;let h=o.Se.computeFlatOffset(t,o.of.computeStrides(e.shape));c.slice&&(h+=c.slice.flatOffset),d.slice={flatOffset:h,origDataId:c.slice&&c.slice.origDataId||e.dataId};const f=r.dataRefCount.get(d.slice.origDataId)||1;return r.dataRefCount.set(d.slice.origDataId,f+1),l}(c,h,f,n)}const IO={kernelName:o.Fc,backendName:"webgl",kernelFunc:kO},NO={kernelName:o.t,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{blockShape:l,crops:d}=r;o.of.assert(c.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const h=l.reduce(((a,b)=>a*b)),f=o.od.getReshaped(c.shape,l,h),m=o.od.getPermuted(f.length,l.length),y=o.od.getReshapedPermuted(c.shape,l,h),x=o.od.getSliceBeginCoords(d,l.length),O=o.od.getSliceSize(y,d,l.length),w=[],v=gx({inputs:{x:c},backend:n,attrs:{shape:f}}),k=Sx({inputs:{x:v},backend:n,attrs:{perm:m}}),I=gx({inputs:{x:k},backend:n,attrs:{shape:y}}),N=kO({inputs:{x:I},backend:n,attrs:{begin:x,size:O}});return w.push(v),w.push(k),w.push(I),w.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};const jO={kernelName:o.u,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,weights:c}=t,{size:l}=r,d=n.readSync(o.dataId),h=n.readSync(c.dataId),f=ay(d,h,c.dtype,c.shape,l);return n.makeTensorInfo([l],c.dtype,f)}},SO=ux({opSnippet:"return float(a != b);",dtype:"bool"}),TO={kernelName:o.ac,backendName:"webgl",kernelFunc:SO};function CO(e){const{inputs:t,backend:n}=e,{input:input}=t;return Jy({inputs:{x:n.texData.get(input.dataId).complexTensorInfos.real},backend:n})}const $O={kernelName:o.kc,backendName:"webgl",kernelFunc:CO};const EO={kernelName:o.v,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:c}=t,{x:l}=n,{dtype:d}=c;if("complex64"===d){if("complex64"===l.dtype)return Jy({inputs:{x:l},backend:r});const t=o.tf(l.shape),n=e({inputs:{x:l},backend:r,attrs:{dtype:"float32"}}),c=Qy({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),c}if("complex64"===l.dtype){const t=CO({inputs:{input:l},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:d}});return r.disposeIntermediateTensorInfo(t),n}if(!o.of.hasEncodingLoss(l.dtype,d)){const e=Jy({inputs:{x:l},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:d}}if("int32"===d)return function(input,e){const t=new By(input.shape,"return float(int(x));"),output=e.runWebGLProgram(t,[input],"int32");return{dataId:output.dataId,shape:output.shape,dtype:output.dtype}}(l,r);if("bool"===d){const e=r.makeTensorInfo([],"bool",o.of.getTypedArrayFromDType("bool",1)),t=SO({inputs:{a:l,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${l.dtype} to ${d}`)}},AO="return ceil(x);",RO=ix({opSnippet:AO,packedOpSnippet:AO,cpuKernelImpl:oy}),FO={kernelName:o.w,backendName:"webgl",kernelFunc:RO};class DO{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class _O{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}const MO={kernelName:o.x,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{clipValueMin:l,clipValueMax:d}=r;let h;h=Object(o.Od)().getBool("WEBGL_PACK_CLIP")?new _O(c.shape):new DO(c.shape);const f=h.getCustomSetupFunc(l,d);return n.runWebGLProgram(h,[c],c.dtype,f)}};class LO{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function zO(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const PO={kernelName:o.z,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,o=n.texData.get(r.dataId),c=new LO(r.shape),l=[zO(r,o.complexTensorInfos.real),zO(r,o.complexTensorInfos.imag)];return n.runWebGLProgram(c,l,l[0].dtype)}};class BO{constructor(e){this.outputShape=[],this.outputShape=o.od.computeOutShape(e,1),this.variableNames=e.map(((e,i)=>`T${i}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let i=1;i<t.length;i++)t[i]=t[i-1]+e[i][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<t.length;i++){const e=t[i-1];n.push(`else if (yC < ${t[i]}) setOutput(getT${i}(yR, yC-${e}));`)}const r=t.length,c=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${c}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class WO{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=o.od.computeOutShape(e,t);const n=this.outputShape,r=n.length,c=Qg(r),l=Fy("coords",r),d=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,i)=>`T${i}`));const h=new Array(e.length-1);h[0]=e[0][t];for(let i=1;i<h.length;i++)h[i]=h[i-1]+e[i][t];const f=d[t],m=d.slice(-2),y=d.join();let x=`if (${f} < ${h[0]}) {\n        return getChannel(\n            getT0(${y}), vec2(${m.join()}));\n        }`;for(let i=1;i<h.length;i++){const e=h[i-1];x+=`\n        if (${f} < ${h[i]}  && ${f} >= ${h[i-1]}) {\n          return getChannel(\n            getT${i}(${VO(d,f,e)}),\n            vec2(${VO(m,f,e)}));\n        }`}const O=h.length,w=h[h.length-1];x+=`\n        return getChannel(\n          getT${O}(${VO(d,f,w)}),\n          vec2(${VO(m,f,w)}));`,this.userCode=`\n      float getValue(${d.map((e=>"int "+e))}) {\n        ${x}\n      }\n\n      void main() {\n        ${c} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${l}), 0., 0., 0.);\n\n        ${l[r-1]} = ${l[r-1]} + 1;\n        if (${l[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${l});\n        }\n\n        ${l[r-2]} = ${l[r-2]} + 1;\n        if (${l[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${l});\n        }\n\n        ${l[r-1]} = ${l[r-1]} - 1;\n        if (${l[r-2]} < ${n[r-2]} &&\n            ${l[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${l});\n        }\n        setOutput(result);\n      }\n    `}}function VO(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function UO(e){const{inputs:t,backend:n}=e,{input:input}=t;return Jy({inputs:{x:n.texData.get(input.dataId).complexTensorInfos.imag},backend:n})}const GO={kernelName:o.sb,backendName:"webgl",kernelFunc:UO};function HO(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>CO({inputs:{input:e},backend:n}))),o=e.map((e=>UO({inputs:{input:e},backend:n}))),c=HO(r,t,n),l=HO(o,t,n),d=Qy({inputs:{real:c,imag:l},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),o.forEach((i=>n.disposeIntermediateTensorInfo(i))),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),d}let c=n.shouldExecuteOnCPU(e);if("string"===r&&(c=!0),c){const c=e.map((e=>{const r=o.of.sizeFromShape(e.shape.slice(t));return gx({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),l=c.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),d=o.od.computeOutShape(c.map((e=>e.shape)),1),h=1===c[0].shape[0],f=iy(l,d,r,h),m=o.od.computeOutShape(e.map((e=>e.shape)),t),y=n.makeTensorInfo(m,r,f);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}if(e.length>Object(o.Od)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),o=HO(e.slice(0,r),t,n),c=HO(e.slice(r),t,n),l=HO([o,c],t,n);return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),l}if(Object(o.Od)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const o=new WO(e.map((e=>e.shape)),t);return n.runWebGLProgram(o,e,r)}const{tensors2D:l,outShape:d}=function(e,t,n){const r=o.od.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>gx({inputs:{x:e},attrs:{shape:[-1,o.of.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),h=new BO(l.map((e=>e.shape))),f=n.runWebGLProgram(h,l,r);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const m=gx({inputs:{x:f},attrs:{shape:d},backend:n});return n.disposeIntermediateTensorInfo(f),m}function KO(e){const{inputs:t,backend:n,attrs:r}=e,{axis:c}=r,l=o.of.parseAxisParam(c,t[0].shape)[0],d=o.od.computeOutShape(t.map((e=>e.shape)),l);if(0===o.of.sizeFromShape(d))return n.makeTensorInfo(d,t[0].dtype,[]);const h=t.filter((e=>o.of.sizeFromShape(e.shape)>0));if(1===h.length)return Jy({inputs:{x:h[0]},backend:n});const f=h.map((e=>e.shape));return o.od.assertParamsConsistent(f,l),HO(h,l,n)}const qO={kernelName:o.A,backendName:"webgl",kernelFunc:KO};class XO{constructor(e,t=!1,n=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const c=e.padInfo.top,l=e.padInfo.left,d=e.strideHeight,h=e.strideWidth,f=e.dilationHeight,m=e.dilationWidth,y=e.filterHeight,x=e.filterWidth,O=4*Math.floor(e.inChannels/4),w=e.inChannels%4,v="channelsLast"===e.dataFormat,k=v?1:2,I=v?2:3,N=v?3:1;let j="",S="";n&&(j=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:o?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,S="result = activation(result);");const T=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${j}\n\n      const ivec2 strides = ivec2(${d}, ${h});\n      const ivec2 pads = ivec2(${c}, ${l});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${N}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${k}], coords[${I}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${y}; wR++) {\n          int xR = xRCorner + wR * ${f};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC++) {\n            int xC = xCCorner + wC * ${m};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${O}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${v}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===w}) {\n\n              if (${v}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${O}) *\n                    getW(wR, wC, ${O}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${O}, xR, xC) *\n                    getW(wR, wC, ${O}, d2);\n              }\n\n            } else if (${2===w}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${O}, d2),\n                getW(wR, wC, ${O} + 1, d2)\n              );\n\n              if (${v}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${O}),\n                  getX(batch, xR, xC, ${O} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${O}, xR, xC),\n                  getX(batch, ${O} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===w}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${O}, d2),\n                getW(wR, wC, ${O} + 1, d2),\n                getW(wR, wC, ${O} + 2, d2)\n              );\n\n              if (${v}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${O}),\n                  getX(batch, xR, xC, ${O} + 1),\n                  getX(batch, xR, xC, ${O} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${O}, xR, xC),\n                  getX(batch, ${O} + 1, xR, xC),\n                  getX(batch, ${O} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${T}\n        ${S}\n        setOutput(result);\n      }\n    `}}class YO{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,o=e.strideDepth,c=e.strideHeight,l=e.strideWidth,d=e.dilationDepth,h=e.dilationHeight,f=e.dilationWidth,m=e.filterDepth,y=e.filterHeight,x=e.filterWidth,O=4*Math.floor(e.inChannels/4),w=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${o}, ${c}, ${l});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${m}; wF++) {\n          int xF = xFCorner + wF * ${d};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${y}; wR++) {\n            int xR = xRCorner + wR * ${h};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${x}; wC++) {\n              int xC = xCCorner + wC * ${f};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${O}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===w}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${O}) *\n                  getW(wF, wR, wC, ${O}, d2);\n              } else if (${2===w}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${O}),\n                  getX(batch, xF, xR, xC, ${O} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${O}, d2),\n                  getW(wF, wR, wC, ${O} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===w}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${O}),\n                  getX(batch, xF, xR, xC, ${O} + 1),\n                  getX(batch, xF, xR, xC, ${O} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${O}, d2),\n                  getW(wF, wR, wC, ${O} + 1, d2),\n                  getW(wF, wR, wC, ${O} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class JO{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:o,strideWidth:c,strideHeight:l,padInfo:d,outWidth:h,dilationWidth:f,dilationHeight:m,dataFormat:y}=n,{left:x,top:O}=d,w=o*r,v=wg(),k="channelsLast"===y,I=k?0:1,N=k?1:2;let j="";for(let n=0;n<=1;n++)for(let col=0;col<=1;col++)j+=`\n          blockIndex = rc.y + ${col};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${h})) * ${l} - ${O};\n            d0 = offsetY + ${m} * (pos / ${w});\n\n            if(d0 < ${t[I]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${h}.) * ${c}. - ${x}.);\n              d1 = offsetX + ${f} * (int(mod(float(pos), ${w}.) / ${o}.));\n\n              if(d1 < ${t[N]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${o}.));\n\n                if (${k}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+col}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+col}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${j}\n\n        ${v.output} = result;\n      }\n    `}}function ZO({x:e,filter:filter,convInfo:t,backend:n,bias:r=null,preluActivationWeights:c=null,leakyreluAlpha:l=0,activation:d=null}){const h=e.shape,f=n.texData.get(e.dataId),m=t.inChannels,y=h[0]*h[1]*h[2],x=t.outChannels,O="channelsLast"===t.dataFormat;let w;const v=[],k=(1===y||1===x)&&m>1e3,I=h[2]%2!=0&&!!f.isPacked;if(!k&&Object(o.Od)().getBool("WEBGL_LAZILY_UNPACK")&&Object(o.Od)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&I){const m=O?h[0]*h[1]*(h[2]+1):h[0]*h[2]*(h[3]+1),y={dataId:e.dataId,shape:[1,m,t.inChannels],dtype:e.dtype},x=f.shape;f.shape=f.shape.slice(),f.shape[f.shape.length-2]++,o.of.assert(hg(f.shape,y.shape),(()=>`packed reshape ${f.shape} to ${y.shape} isn't free`));const k=gx({inputs:{x:filter},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}});v.push(k);const I=Cx({a:y,b:k,backend:n,transposeA:false,transposeB:false,bias:r,activation:d,preluActivationWeights:c,leakyreluAlpha:l}),N=n.texData.get(I.dataId);o.of.assert(N.isPacked,(()=>"batchMatMul result is expected to be packed")),f.shape=x,N.shape=t.outShape,w=Jy({inputs:{x:I},backend:n}),w.shape=t.outShape,v.push(I)}else{const o=gx({inputs:{x:e},backend:n,attrs:{shape:[1,O?h[0]*h[1]*h[2]:h[0]*h[2]*h[3],t.inChannels]}}),f=gx({inputs:{x:filter},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}}),m=Cx({a:o,b:f,transposeA:false,transposeB:false,backend:n,bias:r,activation:d,preluActivationWeights:c,leakyreluAlpha:l});w=gx({inputs:{x:m},backend:n,attrs:{shape:t.outShape}}),v.push(o),v.push(f),v.push(m)}for(const i of v)n.disposeIntermediateTensorInfo(i);return w}function QO({x:e,filter:filter,convInfo:t,backend:n,bias:r=null,preluActivationWeights:c=null,leakyreluAlpha:l=0,activation:d=null}){const{filterWidth:h,filterHeight:f,inChannels:m,outWidth:y,outHeight:x,dataFormat:O}=t,w="channelsLast"===O,v=h*f*m,k=x*y,I=[v,k],N=[],j=gx({inputs:{x:e},backend:n,attrs:{shape:e.shape.slice(1)}}),S=gx({inputs:{x:filter},backend:n,attrs:{shape:[1,v,o.of.sizeFromShape(filter.shape)/v]}});N.push(j),N.push(S);const T=new JO(I,j.shape,t),C=n.runWebGLProgram(T,[j],"float32"),$=gx({inputs:{x:C},backend:n,attrs:{shape:[1,I[0],I[1]]}});N.push(C),N.push($);const E=null!=r,A=null!=c,R="leakyrelu"===d,F=d?cx(d,!0):null,D=new lx($.shape,S.shape,[1,k,t.outChannels],!0,!1,E,F,A,R),_=[$,S];if(r&&_.push(r),A&&_.push(c),R){const e=n.makeTensorInfo([],"float32",o.of.createScalarValue(l,"float32"));_.push(e),N.push(e)}const M=n.runWebGLProgram(D,_,"float32"),L=gx({inputs:{x:M},backend:n,attrs:{shape:w?[1,x,y,t.outChannels]:[1,t.outChannels,x,y]}});N.push(M);for(const i of N)n.disposeIntermediateTensorInfo(i);return L}const ew={kernelName:o.B,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,filter:filter}=t,{strides:l,pad:d,dataFormat:h,dilations:f,dimRoundingMode:m}=r,y=o.od.convertConv2DDataFormat(h),x=o.od.computeConv2DInfo(c.shape,filter.shape,l,f,d,m,!1,y);let O;if(1!==x.filterHeight||1!==x.filterWidth||1!==x.dilationHeight||1!==x.dilationWidth||1!==x.strideHeight||1!==x.strideWidth||"SAME"!==x.padInfo.type&&"VALID"!==x.padInfo.type)if(Object(o.Od)().getBool("WEBGL_CONV_IM2COL")&&1===c.shape[0])O=QO({x:c,filter:filter,convInfo:x,backend:n});else{const e=new XO(x);O=n.runWebGLProgram(e,[c,filter],"float32")}else O=ZO({x:c,filter:filter,convInfo:x,backend:n});const w=gx({inputs:{x:O},backend:n,attrs:{shape:x.outShape}});return n.disposeIntermediateTensorInfo(O),w}};class tw{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,c="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${o};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${c}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class nw{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,o=e.strideWidth,c="channelsLast"===e.dataFormat,l=t-1-e.padInfo.top,d=n-1-e.padInfo.left,h=c?1:2,f=c?2:3,m=c?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${m}];\n\n        ivec2 dyCorner = ivec2(coords[${h}], coords[${f}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${o}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${c}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class rw{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,o=e.padInfo.front,c=e.padInfo.top,l=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${o};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${c};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${l};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class aw{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,o=e.strideDepth,c=e.strideHeight,l=e.strideWidth,d=t-1-e.padInfo.front,h=n-1-e.padInfo.top,f=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${h}, ${f});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${o}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${c}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${l}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const sw={kernelName:o.C,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,dy:l}=t,{strides:d,pad:h,dataFormat:f,dimRoundingMode:m,filterShape:y}=r,x=o.od.convertConv2DDataFormat(f),O=o.od.computeConv2DInfo(c.shape,y,d,1,h,m,!1,x),w=new tw(O);return n.runWebGLProgram(w,[c,l],"float32")}};const ow={kernelName:o.D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,filter:filter}=t,{inputShape:l,strides:d,pad:h,dataFormat:f,dimRoundingMode:m}=r,y=o.od.convertConv2DDataFormat(f),x=o.od.computeConv2DInfo(l,filter.shape,d,1,h,m,!1,y),O=new nw(x);return n.runWebGLProgram(O,[c,filter],"float32")}};const iw={kernelName:o.E,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,filter:filter}=t,{strides:l,pad:d,dilations:h}=r,f=o.od.computeConv3DInfo(c.shape,filter.shape,l,h,d),m=new YO(f);return n.runWebGLProgram(m,[c,filter],"float32")}};const uw={kernelName:o.F,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,dy:l}=t,{strides:d,pad:h,filterShape:f}=r,m=o.od.computeConv3DInfo(c.shape,f,d,1,h),y=new rw(m);return n.runWebGLProgram(y,[c,l],"float32")}};const cw={kernelName:o.G,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,filter:filter}=t,{pad:l,strides:d,inputShape:h}=r,f=o.od.computeConv3DInfo(h,filter.shape,d,1,l),m=new aw(f);return n.runWebGLProgram(m,[c,filter],"float32")}},lw=ix({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),dw={kernelName:o.H,backendName:"webgl",kernelFunc:lw},hw=ix({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),pw={kernelName:o.I,backendName:"webgl",kernelFunc:hw};class fw{constructor(e,t,n,r,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[c,l,d,h]=e,[f]=t,[m,y]=n;this.outputShape=[f,m,y,h];const x="bilinear"===r?1:0,[O,w]=[l-1+".0",d-1+".0"],[v,k,I]=m>1?[""+(l-1)/(m-1),"(y2-y1) * height_ratio",`y1*${O} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${O}`],[N,j,S]=y>1?[""+(d-1)/(y-1),"(x2-x1) * width_ratio",`x1*${w} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${w}`];this.userCode=`\n      const float height_ratio = float(${v});\n      const float width_ratio = float(${N});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${c}) {\n          return;\n        }\n\n        float height_scale = ${k};\n        float width_scale = ${j};\n\n        float in_y = ${I};\n        if( in_y < 0.0 || in_y > ${O} ) {\n          setOutput(float(${o}));\n          return;\n        }\n        float in_x = ${S};\n        if( in_x < 0.0 || in_x > ${w} ) {\n          setOutput(float(${o}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${x} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const mw={kernelName:o.J,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:image,boxes:o,boxInd:c}=t,{cropSize:l,method:d,extrapolationValue:h}=r,f=new fw(image.shape,o.shape,l,d,h);return n.runWebGLProgram(f,[image,o,c],"float32")}};class bw{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,o=t?"0.0":`getX(${gw(r,"coords")})`,c=e[e.length-1];let l="",d="";t?(l=n?"end != "+(c-1):"end != 0",d=n?"end + 1":"end - 1"):(l=n?`end + pow2 < ${c}`:"end >= pow2",d=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${Qg(r)} coords = getOutputCoords();\n        int end = ${yw(r,"coords")};\n        float val = ${o};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${d};\n          ${yw(r,"coords")} = idx;\n          val += getX(${gw(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function gw(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function yw(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const xw={kernelName:o.K,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l,exclusive:d,reverse:h}=r,f=c.shape.length,m=o.od.getAxesPermutation([l],f);let y=c;null!=m&&(y=Sx({inputs:{x:c},backend:n,attrs:{perm:m}}));const x=o.od.getInnerMostAxes(1,f)[0];if(x!==f-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${c.shape.length-1} but got axis=${l}`);const O=y.shape[x];let w=Jy({inputs:{x:y},backend:n});for(let i=0;i<=Math.ceil(Math.log2(O))-1;i++){const e=new bw(y.shape,!1,h),t=e.getCustomSetupFunc(i),r=w;w=n.runWebGLProgram(e,[w],w.dtype,t),n.disposeIntermediateTensorInfo(r)}if(d){const e=new bw(y.shape,d,h),t=w;w=n.runWebGLProgram(e,[w],w.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=m){const e=Sx({inputs:{x:w},backend:n,attrs:{perm:o.od.getUndoAxesPermutation(m)}});return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(y),e}return w}};const Ow={kernelName:o.M,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,weights:c}=t,{size:l,binaryOutput:d}=r;if(1===o.shape.length){const e=n.readSync(o.dataId),t=n.readSync(c.dataId),r=ay(e,t,c.dtype,c.shape,l);return n.makeTensorInfo([l],c.dtype,r)}if(2===o.shape.length){const e=n.bufferSync(o),t=n.bufferSync(c),r=sy(e,t,l,d);return n.makeTensorInfo(r.shape,c.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}};class ww{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const vw={kernelName:o.N,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{blockSize:l,dataFormat:d}=r;o.of.assert(l>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${l}`));const h=c.shape[0],f="NHWC"===d?c.shape[1]:c.shape[2],m="NHWC"===d?c.shape[2]:c.shape[3],y="NHWC"===d?c.shape[3]:c.shape[1],x=f*l,O=m*l,w=y/(l*l),v=new ww("NHWC"===d?[h,x,O,w]:[h,w,x,O],l,d);return n.runWebGLProgram(v,[c],c.dtype)}};class kw{constructor(e,t=!1,n=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const c=e.inHeight,l=e.inWidth,d=e.padInfo.top,h=e.padInfo.left,f=e.strideHeight,m=e.strideWidth,y=e.dilationHeight,x=e.dilationWidth,O=e.filterHeight,w=e.filterWidth,v=e.outChannels/e.inChannels;let k="",I="";n&&(k=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:o?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,I="result = activation(result);");const N=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${k}\n\n      const ivec2 strides = ivec2(${f}, ${m});\n      const ivec2 pads = ivec2(${d}, ${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${v};\n        int q = d2 - d1 * ${v};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${O}; wR++) {\n          int xR = xRCorner + wR * ${y};\n\n          if (xR < 0 || xR >= ${c}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${w}; wC++) {\n            int xC = xCCorner + wC * ${x};\n\n            if (xC < 0 || xC >= ${l}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${N}\n        ${I}\n        setOutput(result);\n      }\n    `}}class Iw{constructor(e,t=!1,n=null,r=!1,c=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const l=e.outChannels/e.inChannels,d=e.inHeight,h=e.inWidth,f=e.padInfo.top,m=e.padInfo.left,y=e.strideHeight,x=e.strideWidth,O=e.dilationHeight,w=e.dilationWidth,v=e.filterHeight,k=e.filterWidth,I=k;let N="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<k;e++)N+=`\n          vec4 xTexelC${2*e};\n          vec4 xC${e};`;for(let e=0;e<v;e++){for(let e=0;e<k;e++)N+=`\n          xTexelC${2*e} = vec4(0.0);\n          xC${e} = vec4(0.0);`;N+=`\n        xR = xRCorner + ${e*O};\n        if (xR >=0 && xR < ${d}) {\n      `;for(let t=0;t<I/2+1;t++){const n=2*t;if(N+=`\n          xC = xCCorner + ${n*w};\n          `,1===x){if(n<k&&(m%2==1?(N+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < ${h}) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${h}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                }\n              `,N+=1===w&&n>0?`\n                xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < ${h}) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${h}) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                  } else {\n                    xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                  }\n                  `):N+=`\n                if (xC >= 0 && xC < ${h}) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${h}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                }\n\n                xC${n} = xTexelC${n};\n                `,n+1<k)){const e=m%2==0?o.of.nearestLargerEven(w):w;w%2==0&&m%2==1||w%2!=0&&m%2!=1?(N+=`\n                  xCOffset = xC + ${m%2} + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < ${h}) {\n                    xTexelC${n+2} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${h}) {\n                      xTexelC${n+2}.zw = vec2(0.0);\n                    }\n                  }\n                  `,w>1&&(N+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < ${h}) {\n                      xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                    }\n                    `),N+=`\n                  xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+2}.xy);\n                  `):N+=1===e?`\n                    xC${n+1} = xTexelC${n};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < ${h}) {\n                      xTexelC${n+2} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= ${h}) {\n                        xTexelC${n+2}.zw = vec2(0.0);\n                      }\n                    }\n\n                    xC${n+1} = xTexelC${n+2};\n                    `}}else n<k&&(m%2==1?(N+=`\n                xCOffset = xC + 1 - ${x};\n                if(xCOffset >= 0 && xCOffset < ${h}) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${h}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${h}) {\n                  xTexelC${n+2} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= ${h}) {\n                    xTexelC${n+2}.zw = vec2(0.0);\n                  }\n                }\n\n                xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+2}.zw);\n              `,n+1<k&&(N+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + ${x};\n                  if(xCOffset >= 0 && xCOffset < ${h}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${n+1} = vec4(xTexelC${n+2}.xy, final.xy);\n                `)):(N+=`\n                if(xC >= 0 && xC < ${h}) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${h}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                }\n\n                xCOffset = xC + ${x};\n                if(xCOffset >= 0 && xCOffset < ${h}) {\n                  xTexelC${n+2} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= ${h}) {\n                    xTexelC${n+2}.zw = vec2(0.);\n                  }\n                }\n\n                xC${n} = vec4(\n                  xTexelC${n}.xy, xTexelC${n+2}.xy);\n              `,n+1<k&&(N+=`\n                  xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+2}.zw);\n                `)));n<k&&(N+=`\n            wTexel = getW(${e}, ${n}, d1, q);\n            dotProd += xC${n} * vec4(wTexel.xz, wTexel.xz);\n          `,n+1<k&&(N+=`\n              wTexel = getW(${e}, ${n+1}, d1, q);\n              dotProd += xC${n+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}N+="\n        }\n      "}let j="",S="";n&&(j=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:c?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,S="result = activation(result);");const T=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${j}\n\n      const ivec2 strides = ivec2(${y}, ${x});\n      const ivec2 pads = ivec2(${f}, ${m});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${l};\n        int q = d2 - d1 * ${l};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${N}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${T}\n        ${S}\n        setOutput(result);\n      }\n    `}}const Nw={kernelName:o.O,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,filter:filter}=t,{strides:l,pad:d,dilations:h,dimRoundingMode:f}=r;let m=h;null==m&&(m=[1,1]),o.of.assert(o.od.eitherStridesOrDilationsAreOne(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const y=o.od.computeConv2DInfo(c.shape,filter.shape,l,m,d,f,!0);let x;return x=Object(o.Od)().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1?new Iw(y):new kw(y),n.runWebGLProgram(x,[c,filter],"float32")}};class jw{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,c=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${c} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${o};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Sw{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,o=e.strideWidth,c=t-1-e.padInfo.top,l=n-1-e.padInfo.left,d=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${c}, ${l});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${o}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${d}; dm++) {\n              int d2 = d1 * ${d} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Tw={kernelName:o.P,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,dy:l}=t,{strides:d,dilations:h,pad:f,dimRoundingMode:m,filterShape:y}=r,x=o.od.computeConv2DInfo(c.shape,y,d,h,f,m,!0),O=new jw(x);return n.runWebGLProgram(O,[c,l],"float32")}};const Cw={kernelName:o.Q,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,filter:filter}=t,{strides:l,dilations:d,pad:h,dimRoundingMode:f,inputShape:m}=r,y=o.od.computeConv2DInfo(m,filter.shape,l,d,h,f,!0),x=new Sw(y);return n.runWebGLProgram(x,[c,filter],"float32")}};class $w{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const Ew={kernelName:o.R,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,c=[...r.shape,...r.shape],l=o.of.sizeFromShape(r.shape),d=gx({inputs:{x:r},backend:n,attrs:{shape:[l]}}),h=new $w(l),f=n.runWebGLProgram(h,[d],d.dtype),m=gx({inputs:{x:f},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};class Aw{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:o,strideWidth:c,filterHeight:l,filterWidth:d,dilationHeight:h,dilationWidth:f}=e,{top:m,left:y}=r;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${c});\n      const ivec2 pads = ivec2(${m}, ${y});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${l}; h++) {\n          int hIn = hBeg + h * ${h};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${d}; w++) {\n              int wIn = wBeg + w * ${f};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const Rw={kernelName:o.S,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,filter:filter}=t,{strides:l,pad:d,dilations:h}=r,f=o.od.computeDilation2DInfo(c.shape,filter.shape,l,d,"NHWC",h);let m;const y=new Aw(f);m=n.runWebGLProgram(y,[c,filter],"float32");const x=gx({inputs:{x:m},backend:n,attrs:{shape:f.outShape}});return n.disposeIntermediateTensorInfo(m),x}};const Fw={kernelName:o.V,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:c}=r,l=t,{allDims:d,summedDims:h,idDims:f}=o.od.decodeEinsumEquation(c,l.length);o.od.checkEinsumDimSizes(d.length,f,l);const{path:path,steps:m}=o.od.getEinsumComputePath(h,f),y=m.length;let x=null,O=d.length;const w=[];for(let i=0;i<y;++i){for(const e of m[i]){const{permutationIndices:t,expandDims:r}=o.od.getEinsumPermutation(O,f[e]);let c;o.od.isIdentityPermutation(t)?c=l[e]:(c=Sx({inputs:{x:l[e]},backend:n,attrs:{perm:t}}),w.push(c));const d=c.shape.slice();for(let e=0;e<r.length;++e)d.splice(r[e],0,1);o.of.arraysEqual(c.shape,d)||(c=gx({inputs:{x:c},backend:n,attrs:{shape:d}}),w.push(c)),null===x?x=c:(x=mx({inputs:{a:c,b:x},backend:n}),w.push(x))}i<y-1&&(path[i]>=0&&(x=Nx({inputs:{x:x},backend:n,attrs:{axis:path[i]-(d.length-O),keepDims:!1}}),w.push(x)),O--)}for(const e of w)e!==x&&n.disposeIntermediateTensorInfo(e);return x}},Dw=ix({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),_w={kernelName:o.W,backendName:"webgl",kernelFunc:Dw},Mw={kernelName:o.X,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:c}=t,l=Object(o.Od)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Yy("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,c.shape):new Xy("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,c.shape);return n.runWebGLProgram(l,[r,c],r.dtype)}},Lw=ux({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),zw={kernelName:o.Y,backendName:"webgl",kernelFunc:Lw},Pw=ix({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${o.od.ERF_P};\n  float a1 = ${o.od.ERF_A1};\n  float a2 = ${o.od.ERF_A2};\n  float a3 = ${o.od.ERF_A3};\n  float a4 = ${o.od.ERF_A4};\n  float a5 = ${o.od.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),Bw={kernelName:o.Z,backendName:"webgl",kernelFunc:Pw},Ww="return exp(x);",Vw=ix({opSnippet:Ww,packedOpSnippet:Ww,cpuKernelImpl:uy}),Uw={kernelName:o.ab,backendName:"webgl",kernelFunc:Vw};function Gw(e){const{inputs:t,attrs:n,backend:r}=e,{dim:c}=n,{input:input}=t,l=input.shape.length,d=input.shape.slice();let h=c;return c<0&&(o.of.assert(-(l+1)<=c,(()=>`Axis must be in the interval [${-(l+1)}, ${l}]`)),h=l+c+1),d.splice(h,0,1),gx({inputs:{x:input},backend:r,attrs:{shape:d}})}const Hw={kernelName:o.bb,backendName:"webgl",kernelFunc:Gw},Kw="return exp(x) - 1.0;",qw=ix({opSnippet:Kw,packedOpSnippet:Kw,cpuKernelImpl:cy}),Xw={kernelName:o.cb,backendName:"webgl",kernelFunc:qw};class Yw{constructor(component,e,t){this.variableNames=["real","imag"];const n=e[1];this.outputShape=e;const r=t?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,o=t?`${n}.0`:"1.0";let c;if("real"===component)c="return real * expR - imag * expI;";else{if("imag"!==component)throw new Error(`FFT component must be either "real" or "imag", got ${component}.`);c="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${c}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${n});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${n}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${o};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function Jw(e,t,n){const r=n.texData.get(e.dataId),c=o.of.sizeFromShape(e.shape),l=e.shape[e.shape.length-1],d=gx({inputs:{x:e},backend:n,attrs:{shape:[c/l,l]}}),h=d.shape,f=new Yw("real",h,t),m=new Yw("imag",h,t),y=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:h},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:h}],x=n.runWebGLProgram(f,y,"float32"),O=n.runWebGLProgram(m,y,"float32"),w=Qy({inputs:{real:x,imag:O},backend:n});n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(O);const v=gx({inputs:{x:w},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(w),v}const Zw={kernelName:o.db,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:input}=t;return Jw(input,!1,n)}};class Qw{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}function ev(e){const{backend:t,attrs:n}=e,{shape:r,value:c}=n;let{dtype:l}=n;if(l=l||o.of.inferDtype(c),"string"===l){const e=o.of.getArrayFromDType(l,o.of.sizeFromShape(r));return e.fill(c),t.makeTensorInfo(r,l,e)}{const e=new Qw(r,c),n=e.getCustomSetupFunc(c);return t.runWebGLProgram(e,[],l,n)}}const tv={kernelName:o.eb,backendName:"webgl",kernelFunc:ev};class nv{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const rv={kernelName:o.fb,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:image}=e,n=t,r=new nv(image.shape);return n.runWebGLProgram(r,[image],image.dtype)}},av="return floor(x);",sv=ix({opSnippet:av,packedOpSnippet:av,cpuKernelImpl:ly}),ov={kernelName:o.gb,backendName:"webgl",kernelFunc:sv},iv=ux({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),uv={kernelName:o.hb,backendName:"webgl",kernelFunc:iv};class cv{constructor(e){this.variableNames=["A"];const t=wg(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class lv{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=wg(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const dv={kernelName:o.ib,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:c}=t;const{numChannels:l}=r,d="undefined"!=typeof HTMLVideoElement&&c instanceof HTMLVideoElement,h="undefined"!=typeof HTMLImageElement&&c instanceof HTMLImageElement,[f,m]=d?[c.videoWidth,c.videoHeight]:[c.width,c.height],y=[m,f],x=[m,f,l];(h||d)&&(null==hv&&(hv=document.createElement("canvas").getContext("2d")),hv.canvas.width=f,hv.canvas.height=m,hv.drawImage(c,0,0,f,m),c=hv.canvas);const O=n.makeTensorInfo(y,"int32");n.texData.get(O.dataId).usage=Vb.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(O.dataId),c);const w=Object(o.Od)().getBool("WEBGL_PACK")?new lv(x):new cv(x),v=n.runWebGLProgram(w,[O],"int32");return n.disposeData(O.dataId),v}};let hv;const pv={kernelName:o.kb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,filter:filter,bias:l,preluActivationWeights:d}=t,{strides:h,pad:f,dataFormat:m,dilations:y,dimRoundingMode:x,activation:O,leakyreluAlpha:w}=r,v=o.od.convertConv2DDataFormat(m),k=o.od.computeConv2DInfo(c.shape,filter.shape,h,y,f,x,!1,v);let I;const N=[];if(1!==k.filterHeight||1!==k.filterWidth||1!==k.dilationHeight||1!==k.dilationWidth||1!==k.strideHeight||1!==k.strideWidth||"SAME"!==k.padInfo.type&&"VALID"!==k.padInfo.type)if(Object(o.Od)().getBool("WEBGL_CONV_IM2COL")&&1===c.shape[0])I=QO({x:c,filter:filter,convInfo:k,backend:n,bias:l,activation:O,preluActivationWeights:d,leakyreluAlpha:w});else{const e=null!=l,t=null!=d,r="leakyrelu"===O,h=O?cx(O,!1):null,f=new XO(k,e,h,t,r),m=[c,filter];if(l&&m.push(l),d&&m.push(d),r){const e=n.makeTensorInfo([],"float32",o.of.createScalarValue(w,"float32"));m.push(e),N.push(e)}I=n.runWebGLProgram(f,m,"float32")}else I=ZO({x:c,filter:filter,convInfo:k,backend:n,bias:l,activation:O,preluActivationWeights:d,leakyreluAlpha:w});const j=gx({inputs:{x:I},backend:n,attrs:{shape:k.outShape}});return N.push(I),N.forEach((e=>n.disposeIntermediateTensorInfo(e))),j}};const fv={kernelName:o.lb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,filter:filter,bias:l,preluActivationWeights:d}=t,{strides:h,pad:f,dilations:m,dimRoundingMode:y,activation:x,leakyreluAlpha:O}=r,w=[];let v=m;null==v&&(v=[1,1]),o.of.assert(o.od.eitherStridesOrDilationsAreOne(h,v),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${h} and dilations '${v}'`));const k=o.od.computeConv2DInfo(c.shape,filter.shape,h,v,f,y,!0),I=Object(o.Od)().getBool("WEBGL_PACK_DEPTHWISECONV")&&k.strideWidth<=2&&k.outChannels/k.inChannels==1,N=x?cx(x,I):null,j=[c,filter],S=null!=l,T=null!=d,C="leakyrelu"===x;if(S&&j.push(l),T&&j.push(d),C){const e=n.makeTensorInfo([],"float32",o.of.createScalarValue(O,"float32"));j.push(e),w.push(e)}let $;$=I?new Iw(k,S,N,T,C):new kw(k,S,N,T,C);const E=n.runWebGLProgram($,j,"float32");return w.forEach((e=>n.disposeIntermediateTensorInfo(e))),E}};class mv{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=Qg(t.length),o=Qg(n.length),c=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${o} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${c};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const bv={kernelName:o.mb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:c}=t,l=c.shape,d=l[l.length-1],[h,f,m,y]=o.od.prepareAndValidate(r,c),x=gx({inputs:{x:c},backend:n,attrs:{shape:[f,d]}}),O=gx({inputs:{x:r},backend:n,attrs:{shape:[o.of.sizeFromShape(r.shape)/m,m]}}),w=new mv(d,y,[f,m]),v=n.runWebGLProgram(w,[O,x],O.dtype),k=gx({inputs:{x:v},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(O),n.disposeIntermediateTensorInfo(v),k}};class gv{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=Qg(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let i=0;i<e.length;i++)2===i?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[i]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const yv={kernelName:o.nb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,indices:l}=t,{axis:d,batchDims:h}=r,f=o.of.parseAxisParam(d,c.shape)[0],m=o.od.segment_util.collectGatherOpShapeInfo(c,l,f,h),y=o.of.sizeFromShape(l.shape),x=[],O=gx({inputs:{x:c},backend:n,attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]}}),w=gx({inputs:{x:l},backend:n,attrs:{shape:[m.batchSize,y/m.batchSize]}});x.push(O),x.push(w);const v=[m.batchSize,m.outerSize,y/m.batchSize,m.sliceSize];if(n.shouldExecuteOnCPU([c,l])||"string"===c.dtype){const e=n.bufferSync(w),t=n.bufferSync(O),r=dy(t,e,v);return x.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(m.outputShape,r.dtype,r.values)}const k=new gv(O.shape,v),I=n.runWebGLProgram(k,[O,w],O.dtype);x.push(I);const N=gx({inputs:{x:I},backend:n,attrs:{shape:m.outputShape}});return x.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}},xv=ux({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:hy,dtype:"bool"}),Ov={kernelName:o.ob,backendName:"webgl",kernelFunc:xv},wv=ux({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),vv={kernelName:o.pb,backendName:"webgl",kernelFunc:wv};const kv={kernelName:o.qb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:input}=t;return Jw(input,!0,n)}},Iv=ix({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),Nv={kernelName:o.tb,backendName:"webgl",kernelFunc:Iv},jv=ix({opSnippet:"return float(isinf(x));",dtype:"bool"}),Sv={kernelName:o.ub,backendName:"webgl",kernelFunc:jv},Tv=ix({opSnippet:"return float(isnan(x));",dtype:"bool"}),Cv={kernelName:o.vb,backendName:"webgl",kernelFunc:Tv},$v=ux({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:py,dtype:"bool"}),Ev={kernelName:o.Ab,backendName:"webgl",kernelFunc:$v},Av=ux({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),Rv={kernelName:o.Bb,backendName:"webgl",kernelFunc:Av};const Fv={kernelName:o.Cb,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:o,num:c}=n,l=fy(r,o,c);return t.makeTensorInfo([l.length],"float32",l)}},Dv=ix({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:my}),_v={kernelName:o.Db,backendName:"webgl",kernelFunc:Dv},Mv=ix({opSnippet:"return log(1.0 + x);"}),Lv={kernelName:o.Eb,backendName:"webgl",kernelFunc:Mv},zv=ux({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Pv={kernelName:o.Fb,backendName:"webgl",kernelFunc:zv},Bv=ix({opSnippet:"return float(!(x >= 1.0));"}),Wv={kernelName:o.Gb,backendName:"webgl",kernelFunc:Bv},Vv=ux({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Uv={kernelName:o.Hb,backendName:"webgl",kernelFunc:Vv};class Gv{constructor(e,t,n,r,o){this.variableNames=["x"],this.outputShape=[];const c=t,l=e[3]-1;let d;this.outputShape=e;const h=`float(${n}) + float(${r}) * sum`;d=.5===o?`inversesqrt(${h})`:1===o?`1.0/(${h})`:`exp(log(${h}) * float(-${o}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${c}; j <= ${c}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${l}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${d};\n        setOutput(val);\n      }\n    `}}class Hv{constructor(e,t,n,r,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const c=t,l=e[3]-1;let d;this.outputShape=e;const h=`float(${n}) + float(${r}) * sum`;d=.5===o?`inversesqrt(${h})`:1===o?`1.0/(${h})`:`exp(log(${h}) * float(-${o}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${c};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${c}; j <= ${c}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${l}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${d};\n        setOutput(result);\n      }\n    `}}const Kv={kernelName:o.xb,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{depthRadius:l,bias:d,alpha:h,beta:f}=r,m=Object(o.Od)().getBool("WEBGL_PACK_NORMALIZATION")?new Hv(c.shape,l,d,h,f):new Gv(c.shape,l,d,h,f);return n.runWebGLProgram(m,[c],c.dtype)}};class qv{constructor(e,t,n,r,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=o,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${o})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${o});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const Xv={kernelName:o.yb,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:o,y:c,dy:l}=t,{depthRadius:d,bias:h,alpha:f,beta:m}=r,y=new qv(o.shape,d,h,f,m);return n.runWebGLProgram(y,[o,c,l],o.dtype)}};function Yv(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{reductionIndices:l,keepDims:d}=r,h=c.shape.length,f=o.of.parseAxisParam(l,c.shape);let m=f;const y=o.od.getAxesPermutation(m,h),x=null!=y,O=n.shouldExecuteOnCPU([c]);let w=c;if(x){if(O){const e=n.texData.get(w.dataId).values,t=new Array(h);for(let i=0;i<t.length;i++)t[i]=c.shape[y[i]];const r=Ey(e,c.shape,c.dtype,y,t);w=n.makeTensorInfo(t,c.dtype);n.texData.get(w.dataId).values=r}else w=Ix(c,y,n);m=o.od.getInnerMostAxes(m.length,h)}o.od.assertAxesAreInnerMostDims("max",m,h);const[v,k]=o.od.computeOutAndReduceShapes(w.shape,m);let I,N=v;if(d&&(N=o.od.expandShapeToKeepDim(v,f)),O){const e=n.texData.get(w.dataId).values,t=by(e,o.of.sizeFromShape(k),N,c.dtype);I=n.makeTensorInfo(N,c.dtype);n.texData.get(I.dataId).values=t}else I=function(e,t,n,r){const c=o.of.sizeFromShape(t),l=gx({inputs:{x:e},attrs:{shape:[o.of.sizeFromShape(e.shape)/c,c]},backend:r}),d=wx(l,e.dtype,"max",r),h=gx({inputs:{x:d},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(d),h}(w,k,N,n);return x&&n.disposeIntermediateTensorInfo(w),I}const Jv={kernelName:o.Ib,backendName:"webgl",kernelFunc:Yv},Zv=ux({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:gy}),Qv={kernelName:o.Ob,backendName:"webgl",kernelFunc:Zv};const ek={kernelName:o.Jb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t;xg(c,"maxPool");const{filterSize:l,strides:d,pad:h,dimRoundingMode:f}=r;o.of.assert(o.od.eitherStridesOrDilationsAreOne(d,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${d} and dilations '1'`));const m=o.od.computePool2DInfo(c.shape,l,d,1,h,f);if(1===m.filterWidth&&1===m.filterHeight&&o.of.arraysEqual(m.inShape,m.outShape))return Jy({inputs:{x:c},backend:n});const y=new uO(m,"max",!1);return n.runWebGLProgram(y,[c],c.dtype)}};const tk={kernelName:o.Kb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{filterSize:l,strides:d,pad:h,dataFormat:f,dimRoundingMode:m}=r,y=o.od.computePool3DInfo(c.shape,l,d,[1,1,1],h,m,f),x=new cO(y,"max",!1);return n.runWebGLProgram(x,[c],c.dtype)}};class nk{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,o=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=o-1-e.padInfo.top,d=c-1-e.padInfo.left,h=o*c-1;this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${c}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${h} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${c} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class rk{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,o=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=d-1-e.padInfo.front,y=h-1-e.padInfo.top,x=f-1-e.padInfo.left,O=d*h*f-1;this.userCode=`\n      const ivec3 pads = ivec3(${m}, ${y}, ${x});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${d};\n           wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${c}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${f};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${O} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${h} * ${f} +\n                  wR * ${f} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const ak={kernelName:o.Lb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,input:input}=t,l=input,{filterSize:d,strides:h,pad:f,dimRoundingMode:m}=r,y=o.od.computePool3DInfo(l.shape,d,h,[1,1,1],f,m),x=new cO(y,"max",!0),O=n.runWebGLProgram(x,[l],l.dtype),w=new rk(y),v=n.runWebGLProgram(w,[c,O],l.dtype);return n.disposeIntermediateTensorInfo(O),v}};const sk={kernelName:o.Mb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:c,input:input,output:output}=t,l=input;xg([input,output],"maxPoolGrad");const{filterSize:d,strides:h,pad:f,dimRoundingMode:m}=r,y=o.od.computePool2DInfo(l.shape,d,h,1,f,m),x=new uO(y,"max",!0),O=n.runWebGLProgram(x,[l],l.dtype),w=new nk(y),v=n.runWebGLProgram(w,[c,O],l.dtype);return n.disposeIntermediateTensorInfo(O),v}};const ok={kernelName:o.Nb,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:c,strides:l,pad:d,includeBatchInIndex:h}=t,f=n;o.of.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const m=[1,1];o.of.assert(o.od.eitherStridesOrDilationsAreOne(l,m),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const y=o.od.computePool2DInfo(r.shape,c,l,m,d),[x,O]=function(e,t,n,r){let o=new uO(n,"max",!1);const c=r.runWebGLProgram(o,[e],"float32");return o=new uO(n,"max",!0,!0,t),[c,r.runWebGLProgram(o,[e],"float32")]}(r,h,y,f);return[x,O]}};const ik={kernelName:o.Pb,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:c,axis:l}=t,d=n,h=r.shape.length,f=o.of.parseAxisParam(l,r.shape);let m=f;const y=o.od.getAxesPermutation(m,h),x=null!=y,O=d.shouldExecuteOnCPU([r]),w=[];let v=r;if(x){if(O){const e=d.texData.get(v.dataId).values,t=new Array(h);for(let i=0;i<t.length;i++)t[i]=r.shape[y[i]];const n=Ey(e,r.shape,r.dtype,y,t);v=d.makeTensorInfo(t,r.dtype);d.texData.get(v.dataId).values=n}else v=Ix(r,y,d);w.push(v),m=o.od.getInnerMostAxes(m.length,h)}o.od.assertAxesAreInnerMostDims("sum",m,h);const[k,I]=o.od.computeOutAndReduceShapes(v.shape,m);let N=k;c&&(N=o.od.expandShapeToKeepDim(k,f));const j=function(e,t,n,r){const c=o.of.sizeFromShape(t),l=gx({inputs:{x:e},attrs:{shape:[o.of.sizeFromShape(e.shape)/c,c]},backend:r}),d=wx(l,"float32","mean",r),h=gx({inputs:{x:d},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(d),h}(v,I,N,d);for(const i of w)d.disposeIntermediateTensorInfo(i);return j}};const uk={kernelName:o.Qb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l,keepDims:d}=r,h=c.shape.length,f=o.of.parseAxisParam(l,c.shape);let m=f;const y=o.od.getAxesPermutation(m,h);let x=c;null!=y&&(x=Sx({inputs:{x:c},backend:n,attrs:{perm:y}}),m=o.od.getInnerMostAxes(m.length,c.shape.length)),o.od.assertAxesAreInnerMostDims("min",m,h);const[O,w]=o.od.computeOutAndReduceShapes(x.shape,m),v=gx({inputs:{x:x},backend:n,attrs:{shape:[-1,o.of.sizeFromShape(w)]}}),k=wx(v,v.dtype,"min",n);let I;if(d){I=gx({inputs:{x:k},backend:n,attrs:{shape:o.od.expandShapeToKeepDim(O,f)}})}else I=gx({inputs:{x:k},backend:n,attrs:{shape:O}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(k),null!=y&&n.disposeIntermediateTensorInfo(x),I}},ck=ux({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:yy}),lk={kernelName:o.Rb,backendName:"webgl",kernelFunc:ck};class dk{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((p,i)=>p[0]+e[i]+p[1]));const r=e.length,o=Qg(r),c=t.map((p=>p[0])).join(","),l=t.map(((p,i)=>p[0]+e[i])).join(","),d=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),h="reflect"===n?0:1;this.userCode=1!==r?`\n      ${o} start = ${o}(${c});\n      ${o} end = ${o}(${l});\n\n      void main() {\n        ${o} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${h};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${h};\n          }\n        }\n        ${o} coords = outC - start;\n        setOutput(getX(${d}));\n      }\n    `:`\n        int start = ${c};\n        int end = ${l};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${h};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${h};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class hk{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((p,i)=>p[0]+e[i]+p[1]));const r=e.length,o=Qg(r),c=t.map((p=>p[0])).join(","),l=t.map(((p,i)=>p[0]+e[i])).join(","),d=Fy("rc",r),source=Fy("source",r),h=`${d[r-1]} < ${this.outputShape[r-1]}`,f=1===r?"source":`vec2(${source.slice(-2).join()})`,m="reflect"===n?0:1;let y="";if(1===r){const e=`\n        ${o} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${m};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${m};\n        }\n        source -= start;\n      `;y=`\n        ${o} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${source.join()}), ${f});\n        ${d[r-1]} += 1;\n        if(${h}) {\n          ${e}\n          result[1] = getChannel(getX(${source.join()}), ${f});\n        }\n      `}else{const e=`\n        ${o} source = rc;\n        ${o} lt = ${o}(lessThan(source, start));\n        ${o} gte = ${o}(greaterThanEqual(source, end));\n        ${o} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${m}) +\n                gte * ((end - 1) * 2 - source + ${m});\n        source -= start;\n      `;y=`\n        ${o} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${source.join()}), ${f});\n        ${d[r-1]} += 1;\n        if(${h}) {\n          ${e}\n          result[1] = getChannel(getX(${source.join()}), ${f});\n        }\n        rc = outputLoc;\n        ${d[r-2]} += 1;\n        if(${d[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${source.join()}), ${f});\n          ${d[r-1]} += 1;\n          if(${h}) {\n            ${e}\n            result[3] = getChannel(getX(${source.join()}), ${f});\n          }\n        }\n      `}this.userCode=`\n      const ${o} start = ${o}(${c});\n      const ${o} end = ${o}(${l});\n\n      void main() {\n        ${o} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${y}\n        setOutput(result);\n      }\n    `}}const pk={kernelName:o.Sb,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:c,mode:l}=n,d=Object(o.Od)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new hk(r.shape,c,l):new dk(r.shape,c,l);return t.runWebGLProgram(d,[r],r.dtype)}},fk=ux({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),mk={kernelName:o.Tb,backendName:"webgl",kernelFunc:fk};class bk{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}const gk=ux({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),yk={kernelName:o.lc,backendName:"webgl",kernelFunc:gk},xk="return a - b;",Ok=ux({opSnippet:xk,packedOpSnippet:xk,supportsComplex:!0,cpuKernelImpl:Ty}),wk={kernelName:o.Rc,backendName:"webgl",kernelFunc:Ok};function vk(e){const{inputs:t,backend:n,attrs:r}=e,{logits:c}=t,{dim:l}=r,d=o.of.parseAxisParam([l],c.shape),h=Yv({inputs:{x:c},backend:n,attrs:{reductionIndices:d,keepDims:!1}}),f=o.od.expandShapeToKeepDim(h.shape,d),m=gx({inputs:{x:h},backend:n,attrs:{shape:f}}),a=Ok({inputs:{a:c,b:m},backend:n}),b=Vw({inputs:{x:a},backend:n}),y=Nx({inputs:{x:b},backend:n,attrs:{axis:d,keepDims:!1}}),x=gx({inputs:{x:y},backend:n,attrs:{shape:f}}),O=gk({inputs:{a:b,b:x},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),O}const kk={kernelName:o.Gc,backendName:"webgl",kernelFunc:vk};const Ik={kernelName:o.Ub,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:o}=t,{numSamples:c,seed:l,normalized:d}=r,h=d?o:vk({inputs:{logits:o},backend:n,attrs:{dim:o.shape.length-1}}),f=h.shape[0],m=h.shape[1],y=new bk(f,m,c),x=y.getCustomSetupFunc(l),O=n.runWebGLProgram(y,[h],"int32",x);return d||n.disposeIntermediateTensorInfo(h),O}},Nk="return -x;";const jk={kernelName:o.Wb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,o]=Oy(e.values,r.shape,r.dtype);return n.makeTensorInfo(o,r.dtype,t)}let c;return c=Object(o.Od)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Uy(r.shape,Nk):new By(r.shape,Nk),n.runWebGLProgram(c,[r],r.dtype)}},Sk=o.be.nonMaxSuppressionV3Impl;const Tk={kernelName:o.Xb,backendName:"webgl",kernelFunc:function(e){o.od.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:c,scores:l}=t,{maxOutputSize:d,iouThreshold:h,scoreThreshold:f}=r,m=n.readSync(c.dataId),y=n.readSync(l.dataId),{selectedIndices:x}=Sk(m,y,d,h,f);return n.makeTensorInfo([x.length],"int32",new Int32Array(x))}},Ck=o.be.nonMaxSuppressionV4Impl;const $k={kernelName:o.Yb,backendName:"webgl",kernelFunc:function(e){o.od.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:c,scores:l}=t,{maxOutputSize:d,iouThreshold:h,scoreThreshold:f,padToMaxOutputSize:m}=r,y=n.readSync(c.dataId),x=n.readSync(l.dataId),{selectedIndices:O,validOutputs:w}=Ck(y,x,d,h,f,m);return[n.makeTensorInfo([O.length],"int32",new Int32Array(O)),n.makeTensorInfo([],"int32",new Int32Array([w]))]}},Ek=o.be.nonMaxSuppressionV5Impl;const Ak={kernelName:o.Zb,backendName:"webgl",kernelFunc:function(e){o.od.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:c,scores:l}=t,{maxOutputSize:d,iouThreshold:h,scoreThreshold:f,softNmsSigma:m}=r,y=n.readSync(c.dataId),x=n.readSync(l.dataId),O=d,w=h,v=f,k=m,{selectedIndices:I,selectedScores:N}=Ek(y,x,O,w,v,k);return[n.makeTensorInfo([I.length],"int32",new Int32Array(I)),n.makeTensorInfo([N.length],"float32",new Float32Array(N))]}};class Rk{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const Fk={kernelName:o.bc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:c}=t,{depth:l,onValue:d,offValue:h}=r,f=o.of.sizeFromShape(c.shape),m=new Rk(f,l,d,h),y=gx({inputs:{x:c},backend:n,attrs:{shape:[f]}}),x=n.runWebGLProgram(m,[y],c.dtype);n.disposeIntermediateTensorInfo(y);const O=gx({inputs:{x:x},backend:n,attrs:{shape:[...c.shape,l]}});return n.disposeIntermediateTensorInfo(x),O}};function Dk(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=CO({inputs:{input:r},backend:n}),t=Dk({inputs:{x:e},backend:n}),o=UO({inputs:{input:r},backend:n}),i=Dk({inputs:{x:o},backend:n}),c=Qy({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}return ev({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const _k={kernelName:o.ed,backendName:"webgl",kernelFunc:Dk};const Mk={kernelName:o.cc,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:o}=n;if("string"===o.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===o.dtype){const t=CO({inputs:{input:o},backend:r}),n=e({inputs:{x:t},backend:r}),c=UO({inputs:{input:o},backend:r}),i=Dk({inputs:{x:c},backend:r}),l=Qy({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(i),l}return ev({attrs:{shape:o.shape,dtype:o.dtype,value:1},backend:r})}};const Lk={kernelName:o.ec,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:c}=r;if(1===t.length)return Gw({inputs:{input:t[0]},backend:n,attrs:{dim:c}});const l=t[0].shape,d=t[0].dtype;t.forEach((e=>{o.of.assertShapesMatch(l,e.shape,"All tensors passed to stack must have matching shapes"),o.of.assert(d===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const h=[],f=KO({inputs:t.map((e=>{const t=Gw({inputs:{input:e},backend:n,attrs:{dim:c}});return h.push(t),t})),backend:n,attrs:{axis:c}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class zk{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((p,i)=>p[0]+e[i]+p[1]));const r=e.length,o=Qg(r),c=t.map((p=>p[0])).join(","),l=t.map(((p,i)=>p[0]+e[i])).join(","),d=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${o} start = ${o}(${c});\n      ${o} end = ${o}(${l});\n      uniform float value;\n\n      void main() {\n        ${o} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${o} coords = outC - start;\n          setOutput(getX(${d}));\n        }\n      }\n    `:`\n        int start = ${c};\n        int end = ${l};\n        uniform float value;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}class Pk{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((p,i)=>p[0]+e[i]+p[1]));const r=e.length,o=Qg(r),c=t.map((p=>p[0])).join(","),l=t.map(((p,i)=>p[0]+e[i])).join(","),d=Fy("rc",r),source=Fy("source",r),h=`${d[r-1]} < ${this.outputShape[r-1]}`,f=1===r?"source":`vec2(${source.slice(-2).join()})`,m=[`${o} rc = outputLoc;`,`${d[r-1]} += 1;\n       if(${h}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${d[r-2]} += 1;\n       if(${d[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${d[r-1]} += 1;\n         if(${h}) {`],y=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let x="";for(let i=0,e=1===r?2:4;i<e;i++)x+=`\n        ${m[i]}\n        if (${y}) {\n          result[${i}] = float(value);\n        } else {\n          ${o} source = rc - start;\n          result[${i}] = getChannel(getX(${source.join()}), ${f});\n        }\n      `;x+=1===r?"} ":"}}",this.userCode=`\n      const ${o} start = ${o}(${c});\n      const ${o} end = ${o}(${l});\n      uniform float value;\n\n      void main() {\n        ${o} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${x}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}const Bk=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{paddings:l,constantValue:d}=r,h=Object(o.Od)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Pk(c.shape,l,d):new zk(c.shape,l,d),f=h.getCustomSetupFunc(d);return n.runWebGLProgram(h,[c],c.dtype,f)},Wk={kernelName:o.fc,backendName:"webgl",kernelFunc:Bk},Vk=ux({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Uk={kernelName:o.gc,backendName:"webgl",kernelFunc:Vk};const Gk={kernelName:o.ic,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{axis:l,keepDims:d}=r,h=c.shape.length,f=[],m=o.of.parseAxisParam(l,c.shape);let y=m;const x=o.od.getAxesPermutation(y,h);let O,w=c;if(null!=x&&(w=Sx({inputs:{x:c},backend:n,attrs:{perm:x}}),y=o.od.getInnerMostAxes(y.length,h),f.push(w)),o.od.assertAxesAreInnerMostDims("prod",y,h),n.shouldExecuteOnCPU([w])){const e=n.texData.get(w.dataId).values,{outVals:t,outShape:r,outDtype:o}=wy(w.shape,w.dtype,e,y);O=n.makeTensorInfo(r,o,t)}else{const[e,t]=o.od.computeOutAndReduceShapes(w.shape,y),r=o.of.sizeFromShape(t),l=gx({inputs:{x:w},backend:n,attrs:{shape:[-1,r]}}),d=wx(l,Object(o.bf)(c.dtype),"prod",n);O=gx({inputs:{x:d},backend:n,attrs:{shape:e}}),f.push(l),f.push(d)}if(d){f.push(O);const e=o.od.expandShapeToKeepDim(O.shape,m);O=gx({inputs:{x:O},backend:n,attrs:{shape:e}})}return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),O}},Hk=e=>{const{backend:t,attrs:n}=e,{start:r,stop:o,step:c,dtype:l}=n,d=vy(r,o,c,l);return t.makeTensorInfo([d.length],l,d)},Kk={kernelName:o.jc,backendName:"webgl",kernelFunc:Hk},qk=ix({opSnippet:"return 1.0 / x;"}),Xk={kernelName:o.mc,backendName:"webgl",kernelFunc:qk},Yk=ix({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Jk={kernelName:o.nc,backendName:"webgl",kernelFunc:Yk},Zk=ix({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Qk={kernelName:o.oc,backendName:"webgl",kernelFunc:Zk};class eI{constructor(e,t,n,r,o){this.variableNames=["A"],this.outputShape=[];const[c,l,d,h]=e;this.outputShape=[c,t,n,h];const f=[r&&t>1?l-1:l,r&&n>1?d-1:d],m=[r&&t>1?t-1:t,r&&n>1?n-1:n];let y;y=o?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${f[0]/m[0]},\n          ${f[1]/m[1]});\n      const vec2 inputShapeRC = vec2(${l}.0, ${d}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${y};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class tI{constructor(e,t,n,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[c,l,d,h]=e;this.outputShape=[c,t,n,h];const f=[r&&t>1?l-1:l,r&&n>1?d-1:d],m=[r&&t>1?t-1:t,r&&n>1?n-1:n];let y;y=o?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${f[0]/m[0]},\n          ${f[1]/m[1]},\n          ${f[1]/m[1]});\n      const vec3 inputShapeRC = vec3(${l}.0, ${d}.0,\n                                     ${d}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${y};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${h-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const nI={kernelName:o.qc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:c}=t,{alignCorners:l,halfPixelCenters:d,size:h}=r,[f,m]=h,y=Object(o.Od)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new tI(c.shape,f,m,l,d):new eI(c.shape,f,m,l,d);return n.runWebGLProgram(y,[c],"float32")}};class rI{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,c,l]=e,d=[n&&c>1?r-1:r,n&&l>1?o-1:o],h=[n&&c>1?c-1:c,n&&l>1?l-1:l],f=d[0]/h[0],m=d[1]/h[1],y=1/f,x=1/m,O=2*Math.ceil(y)+2,w=2*Math.ceil(x)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${f});\n        const float widthScale = float(${m});\n\n        const float invHeightScale = float(${y});\n        const float invWidthScale = float(${x});\n\n        const int winHeight = int(${O});\n        const int winWidth = int(${w});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${c}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${l}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const aI={kernelName:o.rc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:o,dy:c}=t,{alignCorners:l}=r,d=new rI(c.shape,o.shape,l);return n.runWebGLProgram(d,[c],c.dtype)}};class sI{constructor(e,t,n,r,o){this.variableNames=["A"],this.outputShape=[];const[c,l,d,h]=e;this.outputShape=[c,t,n,h];const f=[r&&t>1?l-1:l,r&&n>1?d-1:d],m=[r&&t>1?t-1:t,r&&n>1?n-1:n],y=r?"0.5":"0.0";let x;x=o?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${f[0]/m[0]},\n          ${f[1]/m[1]});\n      const vec2 inputShapeRC = vec2(${l}.0, ${d}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${x};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${y})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}const oI={kernelName:o.sc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:o}=t,{alignCorners:c,halfPixelCenters:l,size:d}=r,[h,f]=d,m=new sI(o.shape,h,f,c,l);return n.runWebGLProgram(m,[o],o.dtype)}};class iI{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,c,l]=e,d=[n&&c>1?r-1:r,n&&l>1?o-1:o],h=[n&&c>1?c-1:c,n&&l>1?l-1:l],f=d[0]/h[0],m=d[1]/h[1],y=1/f,x=1/m,O=2*Math.ceil(y)+2,w=2*Math.ceil(x)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${f});\n        const float widthScale = float(${m});\n\n        const float invHeightScale = float(${y});\n        const float invWidthScale = float(${x});\n\n        const int winHeight = int(${O});\n        const int winWidth = int(${w});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${c}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${l}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${d[0]}) *\n                (float(dyR) / float(${h[0]}));\n\n            float sourceFracCol =\n                float(${d[1]}) *\n                  (float(dyC) / float(${h[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${o}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const uI={kernelName:o.tc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:o,dy:c}=t,{alignCorners:l}=r,d=new iI(c.shape,o.shape,l);return n.runWebGLProgram(d,[c],c.dtype)}};class cI{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,i)=>(i=>-1!==t.indexOf(i)&&1!==e[i]?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`)(i))).join(","),o=Qg(n);this.userCode=`\n      void main() {\n        ${o} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class lI{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=Fy("rc",n),o=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,c=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,l=Qg(n);function d(n){const r=e.map(((r,i)=>function(i,n){return-1!==t.indexOf(i)&&1!==e[i]?`${e[i]} - ${n[i]} - 1`:`${n[i]}`}(i,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${o}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${l} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return d(e)}(r.slice())};\n          if(${o}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",d(e)}(r.slice())};\n          }\n          if(${c}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",d(e)}(r.slice())};\n            if(${o}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",d(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const dI={kernelName:o.uc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{dims:l}=r,d=c.shape.length,h=o.of.parseAxisParam(l,c.shape);if(0===d)return Jy({inputs:{x:c},backend:n});const f=Object(o.Od)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lI(c.shape,h):new cI(c.shape,h);return n.runWebGLProgram(f,[c],c.dtype)}};class hI{constructor(e,t){this.variableNames=["Image"],this.outputShape=[];const n=e[1],r=e[2];this.outputShape=e;let o="";o="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        uniform vec4 params;\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${o}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}getCustomSetupFunc(e,t,n,r){return(o,c)=>{null==this.paramsLoc&&(this.paramsLoc=o.getUniformLocationNoThrow(c,"params")),o.gl.uniform4f(this.paramsLoc,e,t,n,r)}}}const pI={kernelName:o.vc,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:image}=e,{radians:r,fillValue:c,center:l}=t,d=n,h=new hI(image.shape,c),[f,m]=o.od.getImageCenter(l,image.shape[1],image.shape[2]),y=h.getCustomSetupFunc(f,m,Math.sin(r),Math.cos(r));return d.runWebGLProgram(h,[image],image.dtype,y)}},fI=ix({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),mI={kernelName:o.wc,backendName:"webgl",kernelFunc:fI},bI=ix({opSnippet:"return inversesqrt(x);",cpuKernelImpl:ky}),gI={kernelName:o.xc,backendName:"webgl",kernelFunc:bI};class yI{constructor(e,t,n,r,o,c,l=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=c;const d=Qg(o.length),h=Qg(c.length);let f="";1===n?f="i":2===n&&(f="i, j");const m=`getIndices(${f})`;let y="";1===r?y="i":2===r&&(y="i, coords[1]");const x=`getUpdates(${y})`,O=t>1?"strides[j]":"strides";this.userCode=`\n        ${d} strides = ${d}(${o});\n\n        void main() {\n          ${h} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${m});\n              flattenedIndex += index * ${O};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${x};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const xI={kernelName:o.yc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:c,updates:l}=t,{shape:d}=r,{sliceRank:h,numUpdates:f,sliceSize:m,strides:y,outputSize:x}=o.od.calculateShapes(l,c,d),O=[x/m,m];if(0===x)return n.makeTensorInfo(d,c.dtype);const w=gx({inputs:{x:c},backend:n,attrs:{shape:[f,h]}}),v=gx({inputs:{x:l},backend:n,attrs:{shape:[f,m]}}),k=n.makeTensorInfo([],"float32",new Float32Array([0])),I=new yI(f,h,w.shape.length,v.shape.length,y,O),N=n.runWebGLProgram(I,[v,w,k],v.dtype),j=gx({inputs:{x:N},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(N),n.disposeIntermediateTensorInfo(k),j}};class OI{constructor(e,t,n){let r,o;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)o="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],c=[],l=[];for(let i=0;i<t.length;i++)l.push(`${n[i]}`),i<e&&c.push(`${n[i]}`);r=c.join(),o=l.join()}const c=Qg(n);this.userCode=`\n      void main() {\n        ${c} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${o}));\n        } else {\n          setOutput(getB(${o}));\n        }\n      }\n    `}}const wI={kernelName:o.zc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:c,e:l}=t,d=new OI(r.shape.length,c.shape,c.shape.length);return n.runWebGLProgram(d,[r,c,l],Object(o.nf)(c.dtype,l.dtype))}},vI=ix({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${o.od.SELU_SCALEALPHA};\n  float scale = ${o.od.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),kI={kernelName:o.Ac,backendName:"webgl",kernelFunc:vI},II=ix({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),NI={kernelName:o.Bc,backendName:"webgl",kernelFunc:II},jI=ix({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),SI={kernelName:o.Cc,backendName:"webgl",kernelFunc:jI},TI=ix({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),CI={kernelName:o.Dc,backendName:"webgl",kernelFunc:TI},$I=ix({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),EI={kernelName:o.Ec,backendName:"webgl",kernelFunc:$I},AI=ix({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),RI={kernelName:o.Hc,backendName:"webgl",kernelFunc:AI},FI={kernelName:o.Ic,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{blockShape:l,paddings:d}=r;o.of.assert(c.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const h=l.reduce(((a,b)=>a*b)),f=[[0,0]];f.push(...d);for(let i=1+l.length;i<c.shape.length;++i)f.push([0,0]);const m=[],y=Bk({inputs:{x:c},backend:n,attrs:{paddings:f,constantValue:0}}),x=o.od.getReshaped(y.shape,l,h,!1),O=o.od.getPermuted(x.length,l.length,!1),w=o.od.getReshapedPermuted(y.shape,l,h,!1),v=gx({inputs:{x:y},backend:n,attrs:{shape:x}}),k=Sx({inputs:{x:v},backend:n,attrs:{perm:O}}),I=gx({inputs:{x:k},backend:n,attrs:{shape:w}});return m.push(y),m.push(v),m.push(k),m.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};const DI={kernelName:o.Jc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:o,newShape:c}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==o.shape.length)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(1!==c.shape.length)throw new Error(`Target shape should be a vector but received shape ${c.shape}`);const l=Array.from(n.readSync(o.dataId)),d=n.readSync(r.dataId),h=Array.from(n.readSync(c.dataId)),[f,m,y]=jy(d,r.shape,r.dtype,l,h);return[n.makeTensorInfo(m,r.dtype,f),n.makeTensorInfo([y.length],c.dtype,new Int32Array(y))]}};const _I={kernelName:o.Kc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:c,sparseValues:l,defaultValue:d}=t,{outputShape:h}=r,{sliceRank:f,numUpdates:m,strides:y,outputSize:x}=o.od.calculateShapes(l,c,h),O=new yI(m,f,c.shape.length,l.shape.length,y,[x,1],!1),w=n.runWebGLProgram(O,[l,c,d],l.dtype),v=gx({inputs:{x:w},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(w),v}};const MI={kernelName:o.Lc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{numOrSizeSplits:l,axis:d}=r,h=o.of.parseAxisParam(d,c.shape)[0],f=o.od.prepareSplitSize(c,l,h),m=c.shape.length,y=new Array(m).fill(0),x=c.shape.slice();return f.map((s=>{const e=[...x];e[h]=s;const t=kO({inputs:{x:c},backend:n,attrs:{begin:y,size:e}});return y[h]+=s,t}))}},LI=ix({opSnippet:"return sqrt(x);"}),zI={kernelName:o.Mc,backendName:"webgl",kernelFunc:LI},PI=ix({opSnippet:"return x * x;"}),BI={kernelName:o.Nc,backendName:"webgl",kernelFunc:PI},WI="return (a - b) * (a - b);",VI=ux({opSnippet:WI,packedOpSnippet:WI}),UI={kernelName:o.Oc,backendName:"webgl",kernelFunc:VI};const GI={kernelName:o.Pc,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,o=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,c=new By(r.shape,o);return n.runWebGLProgram(c,[r],r.dtype)}};class HI{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,o=Qg(n.length),c=Qg(n.length);let l="";if(1===r)l="coords * strides + begin";else{let e=0;l=n.map(((t,i)=>(e++,1===n.length?`coords * strides[${i}] + begin[${i}]`:`coords[${e-1}] * strides[${i}] + begin[${i}]`))).join(",")}this.userCode=`\n      ${o} begin = ${o}(${e});\n      ${o} strides = ${o}(${t});\n\n      void main() {\n        ${c} coords = getOutputCoords();\n        setOutput(getX(${l}));\n      }\n    `}}const KI={kernelName:o.Qc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{begin:l,end:d,strides:h,beginMask:f,endMask:m,ellipsisMask:y,newAxisMask:x,shrinkAxisMask:O}=r,{nonStrided:w,$begin:v,$strides:k,size:I,newShape:N,outShape:j}=o.Se.sliceInfo(c.shape,l,d,h,f,m,y,x,O),S=gx({inputs:{x:c},backend:n,attrs:{shape:N}});let T;if(w){const e=kO({inputs:{x:S},backend:n,attrs:{begin:v,size:I}});T=gx({inputs:{x:e},backend:n,attrs:{shape:j}}),n.disposeIntermediateTensorInfo(e)}else if(j.some((e=>0===e)))T=n.makeTensorInfo(j,c.dtype,[]);else{if(n.shouldExecuteOnCPU([S])){const e=n.texData.get(S.dataId).values,t=Object(o.td)(S.shape,S.dtype,e),r=Sy(j,t,k,v);T=n.makeTensorInfo(j,S.dtype,r.values)}else{const e=new HI(v,k,j);T=n.runWebGLProgram(e,[S],S.dtype)}}const C=gx({inputs:{x:T},backend:n,attrs:{shape:j}});return n.disposeIntermediateTensorInfo(S),n.disposeIntermediateTensorInfo(T),C}},qI=ix({opSnippet:"return tan(x);"}),XI={kernelName:o.Tc,backendName:"webgl",kernelFunc:qI},YI=ix({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),JI={kernelName:o.Uc,backendName:"webgl",kernelFunc:YI};class ZI{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[i]*t[i];this.outputShape=n,this.rank=n.length;const r=Qg(this.rank),o=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let i=0;i<e.length;i++)r.push(`imod(${n[i]}, ${e[i]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${o}));\n      }\n    `}}function QI(e){const{inputs:t,backend:n,attrs:r}=e,{x:c}=t,{reps:l}=r;if("string"===c.dtype||c.shape.length>5){const e=n.readSync(c.dataId).map((e=>o.of.decodeString(e))),t=Object(o.td)(c.shape,c.dtype,e),r=Cy(t,l);return n.makeTensorInfo(r.shape,r.dtype,r.values)}const d=new ZI(c.shape,l);return n.runWebGLProgram(d,[c],c.dtype)}const eN={kernelName:o.Xc,backendName:"webgl",kernelFunc:QI};const tN={kernelName:o.Yc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{k:c,sorted:l}=r,d=n.readSync(o.dataId),[h,f]=$y(d,o.shape,o.dtype,c,l);return[n.makeTensorInfo(h.shape,h.dtype,h.values),n.makeTensorInfo(f.shape,f.dtype,f.values)]}};class nN{constructor(e,t,n,r,o,c){this.variableNames=["Image","Transforms"],this.outputShape=c;const l="nearest"===n?1:2;let d;switch(r){case"constant":d=1;break;case"reflect":d=2;break;case"wrap":d=3;break;case"nearest":d=4;break;default:d=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${d} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${d} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${d} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${o});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${o});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${l} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const rN={kernelName:o.Zc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:image,transforms:o}=t,{interpolation:c,fillMode:l,fillValue:d,outputShape:h}=r,[f,m,y,x]=image.shape,[O,w]=null!=h?h:[m,y],v=new nN(m,y,c,l,d,[f,O,w,x]);return n.runWebGLProgram(v,[image,o],"float32")}};const aN={kernelName:o.bd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:o}=n,{x:c}=t;xg(c,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const l=r.readSync(c.dataId),{outputValues:d,outputShape:h,indices:f}=Ay(l,o,c.shape,c.dtype);return[r.makeTensorInfo(h,c.dtype,d),r.makeTensorInfo([f.length],"int32",f)]}};const sN={kernelName:o.cd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:o}=t;let{axis:c}=r;c<0&&(c+=o.shape.length);const l=o,d=l.shape.length,h=o.shape[c],f=new Array(d-1);let m=0;for(let i=0;i<d;i++)i!==c&&(f[m++]=l.shape[i]);const y=[],x=new Array(d).fill(0),O=l.shape.slice();O[c]=1;const w=new Array(h);for(let i=0;i<w.length;i++){x[c]=i;const e=kO({inputs:{x:l},backend:n,attrs:{begin:x,size:O}}),t=gx({inputs:{x:e},backend:n,attrs:{shape:f}});w[i]=t,y.push(e)}return y.forEach((e=>n.disposeIntermediateTensorInfo(e))),w}};class oN{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,o=e.inSize,c=e.numSegments,l=c*Math.ceil(o/n);this.outputShape=[r,l];const d=4*Math.floor(n/4),h=n%4,f="\n        sumValue += dot(values, segFilter);\n    ";let m="";o%n>0&&(m=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return initializationValue;\n        }\n      `);let y="";o%n>0&&(y=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${m}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${y}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${c})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${c})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${d}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${f}\n        }\n\n        int inIdx = inOffset + ${d};\n        if (${1===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${f}\n        } else if (${2===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${f}\n        } else if (${3===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${f}\n        }\n        setOutput(sumValue);\n      }\n    `}}const iN=[Kv,Xv,$x,Ax,Fx,_x,zx,Wx,Vx,Ux,Yx,Jx,Qx,tO,sO,rO,iO,dO,lO,fO,mO,bO,xO,NO,jO,EO,FO,MO,PO,ex,qO,sw,ow,ew,uw,cw,iw,dw,pw,mw,xw,Ow,vw,Tw,Cw,Nw,Ew,Rw,Fw,_w,Mw,zw,Bw,Uw,Hw,Xw,Zw,tv,rv,ov,uv,dv,pv,fv,bv,yv,Ov,vv,Zy,kv,GO,Nv,Sv,Cv,rx,Ev,Rv,Fv,Lv,_v,Pv,Wv,Uv,Jv,tk,ek,ak,sk,ok,Qv,ik,uk,lk,pk,mk,Ik,bx,jk,Tk,$k,Ak,TO,Fk,Mk,Lk,Wk,Uk,ox,Gk,Kk,$O,yk,Xk,Qk,Jk,yx,nI,aI,oI,uI,dI,pI,mI,gI,xI,wI,kI,NI,SI,CI,EI,IO,kk,RI,FI,DI,_I,MI,zI,BI,UI,GI,KI,wk,jx,XI,JI,eN,tN,rN,Tx,aN,sN,{kernelName:o.dd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:c,segmentIds:l}=t,{numSegments:d}=r,h=c.shape.length,f=[];let m=0;const y=o.od.getAxesPermutation([m],h);let x=c;null!=y&&(x=Sx({inputs:{x:c},backend:n,attrs:{perm:y}}),f.push(x),m=o.od.getInnerMostAxes(1,h)[0]);const O=o.od.segment_util.computeOutShape(x.shape,m,d),w=o.of.sizeFromShape([x.shape[m]]),v=gx({inputs:{x:x},backend:n,attrs:{shape:[-1,w]}});f.push(v);const k=Object(o.bf)(c.dtype),I=(e,t,r,c,l)=>{const d=e.shape[0],h=e.shape[1],m=o.od.segment_util.segOpComputeOptimalWindowSize(h,l),y=new oN({windowSize:m,inSize:h,batchSize:d,numSegments:l},t),output=n.compileAndRun(y,[e,r],c);if(f.push(output),output.shape[1]===l)return output;const x=Hk({backend:n,attrs:{start:0,stop:l,step:1,dtype:"float32"}}),O=QI({inputs:{x:x},backend:n,attrs:{reps:[h/m]}});f.push(x),f.push(O);return I(output,t,O,c,l)},N=gx({inputs:{x:I(v,"unsortedSegmentSum",l,k,d)},backend:n,attrs:{shape:O}});let j=N;if(null!=y){f.push(N);const e=o.od.getUndoAxesPermutation(y);j=Sx({inputs:{x:j},backend:n,attrs:{perm:e}})}return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),j}},_k];for(const e of iN)Object(o.De)(e);o.rf},1383:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(289);var o=n(326);function c(e){return function(e){if(Array.isArray(e))return Object(r.a)(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||Object(o.a)(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},1384:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(1175),o=n(1172);var c=n(1174),l=n(1173);const d=Object(l.a)({sparseToDense_:function(e,t,n,l=0){const d=Object(c.a)(e,"sparseIndices","sparseToDense","int32"),h=Object(c.a)(t,"sparseValues","sparseToDense"),f=Object(c.a)(l,"defaultValue","sparseToDense",h.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const o=e.rank>0?e.shape[0]:1,c=e.rank>1?e.shape[1]:1;if(n.length!==c)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${c}.`);const l=t.size;if(0!==t.rank&&(1!==t.rank||l!==o))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${o}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(d,h,n,f);const m={sparseIndices:d,sparseValues:h,defaultValue:f},y={outputShape:n};return r.a.runKernel(o.Jc,m,y)}})},1407:function(e,t,n){"use strict";t.byteLength=function(e){var t=d(e),n=t[0],r=t[1];return 3*(n+r)/4-r},t.toByteArray=function(e){var t,i,n=d(e),r=n[0],l=n[1],h=new c(function(e,t,n){return 3*(t+n)/4-n}(0,r,l)),f=0,m=l>0?r-4:r;for(i=0;i<m;i+=4)t=o[e.charCodeAt(i)]<<18|o[e.charCodeAt(i+1)]<<12|o[e.charCodeAt(i+2)]<<6|o[e.charCodeAt(i+3)],h[f++]=t>>16&255,h[f++]=t>>8&255,h[f++]=255&t;2===l&&(t=o[e.charCodeAt(i)]<<2|o[e.charCodeAt(i+1)]>>4,h[f++]=255&t);1===l&&(t=o[e.charCodeAt(i)]<<10|o[e.charCodeAt(i+1)]<<4|o[e.charCodeAt(i+2)]>>2,h[f++]=t>>8&255,h[f++]=255&t);return h},t.fromByteArray=function(e){for(var t,n=e.length,o=n%3,c=[],l=16383,i=0,d=n-o;i<d;i+=l)c.push(h(e,i,i+l>d?d:i+l));1===o?(t=e[n-1],c.push(r[t>>2]+r[t<<4&63]+"==")):2===o&&(t=(e[n-2]<<8)+e[n-1],c.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"="));return c.join("")};for(var r=[],o=[],c="undefined"!=typeof Uint8Array?Uint8Array:Array,code="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,l=code.length;i<l;++i)r[i]=code[i],o[code.charCodeAt(i)]=i;function d(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function h(e,t,n){for(var o,c,output=[],i=t;i<n;i+=3)o=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(255&e[i+2]),output.push(r[(c=o)>>18&63]+r[c>>12&63]+r[c>>6&63]+r[63&c]);return output.join("")}o["-".charCodeAt(0)]=62,o["_".charCodeAt(0)]=63},1408:function(e,t){t.read=function(e,t,n,r,o){var c,l,d=8*o-r-1,h=(1<<d)-1,f=h>>1,m=-7,i=n?o-1:0,y=n?-1:1,s=e[t+i];for(i+=y,c=s&(1<<-m)-1,s>>=-m,m+=d;m>0;c=256*c+e[t+i],i+=y,m-=8);for(l=c&(1<<-m)-1,c>>=-m,m+=r;m>0;l=256*l+e[t+i],i+=y,m-=8);if(0===c)c=1-f;else{if(c===h)return l?NaN:1/0*(s?-1:1);l+=Math.pow(2,r),c-=f}return(s?-1:1)*l*Math.pow(2,c-r)},t.write=function(e,t,n,r,o,c){var l,d,h,f=8*c-o-1,m=(1<<f)-1,y=m>>1,rt=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,i=r?0:c-1,x=r?1:-1,s=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(d=isNaN(t)?1:0,l=m):(l=Math.floor(Math.log(t)/Math.LN2),t*(h=Math.pow(2,-l))<1&&(l--,h*=2),(t+=l+y>=1?rt/h:rt*Math.pow(2,1-y))*h>=2&&(l++,h/=2),l+y>=m?(d=0,l=m):l+y>=1?(d=(t*h-1)*Math.pow(2,o),l+=y):(d=t*Math.pow(2,y-1)*Math.pow(2,o),l=0));o>=8;e[n+i]=255&d,i+=x,d/=256,o-=8);for(l=l<<o|d,f+=o;f>0;e[n+i]=255&l,i+=x,l/=256,f-=8);e[n+i-x]|=128*s}},1409:function(e,t){var n={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==n.call(e)}},1410:function(e,t,n){"use strict";(function(e){var t=n(1192);const r=()=>n(1329);let o;class c{constructor(){this.util=n(1330),this.textEncoder=new this.util.TextEncoder}fetch(path,e){return null!=Object(t.b)().global.fetch?Object(t.b)().global.fetch(path,e):(null==o&&(o=r()),o(path,e))}now(){const time=e.hrtime();return 1e3*time[0]+time[1]/1e6}encode(text,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(text)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}Object(t.b)().get("IS_NODE")&&Object(t.b)().setPlatform("node",new c)}).call(this,n(109))},1411:function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t,n=this,r=(t=4022871197,function(data){data=data.toString();for(var i=0;i<data.length;i++){var e=.02519603282416938*(t+=data.charCodeAt(i));e-=t=e>>>0,t=(e*=t)>>>0,t+=4294967296*(e-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function d(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function h(e,t){var n=new l(e),r=t&&t.state,o=n.next;return o.int32=function(){return 4294967296*n.next()|0},o.double=function(){return o()+11102230246251565e-32*(2097152*o()|0)},o.quick=o,r&&("object"==typeof r&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(1199)&&n(1227)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.alea=h}(0,e,n(1199))}).call(this,n(133)(e))},1412:function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function d(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function h(e,t){var n=new l(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&("object"==typeof r&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(1199)&&n(1227)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.xor128=h}(0,e,n(1199))}).call(this,n(133)(e))},1413:function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function d(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function h(e,t){var n=new l(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&("object"==typeof r&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(1199)&&n(1227)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.xorwow=h}(0,e,n(1199))}).call(this,n(133)(e))},1414:function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t=this;t.next=function(){var e,n,r=t.x,i=t.i;return e=r[i],n=(e^=e>>>7)^e<<24,n^=(e=r[i+1&7])^e>>>10,n^=(e=r[i+3&7])^e>>>3,n^=(e=r[i+4&7])^e<<7,e=r[i+7&7],n^=(e^=e<<13)^e<<9,r[i]=n,t.i=i+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function d(e,t){return t.x=e.x.slice(),t.i=e.i,t}function h(e,t){null==e&&(e=+new Date);var n=new l(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&(r.x&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(1199)&&n(1227)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.xorshift7=h}(0,e,n(1199))}).call(this,n(133)(e))},1415:function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t=this;t.next=function(){var e,n,r=t.w,o=t.X,i=t.i;return t.w=r=r+1640531527|0,n=o[i+34&127],e=o[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=o[i]=n^e,t.i=i,n+(r^r>>>16)|0},function(e,t){var n,r,i,o,c,l=[],d=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,d=Math.max(d,t.length)),i=0,o=-32;o<d;++o)t&&(r^=t.charCodeAt((o+32)%t.length)),0===o&&(c=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,o>=0&&(c=c+1640531527|0,i=0==(n=l[127&o]^=r+c)?i+1:0);for(i>=128&&(l[127&(t&&t.length||0)]=-1),i=127,o=512;o>0;--o)r=l[i+34&127],n=l[i=i+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,l[i]=r^n;e.w=c,e.X=l,e.i=i}(t,e)}function d(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function h(e,t){null==e&&(e=+new Date);var n=new l(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&(r.X&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(1199)&&n(1227)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.xor4096=h}(0,e,n(1199))}).call(this,n(133)(e))},1416:function(e,t,n){(function(e){var r;!function(e,o,c){function l(e){var t=this,n="";t.next=function(){var b=t.b,e=t.c,n=t.d,a=t.a;return b=b<<25^b>>>7^e,e=e-n|0,n=n<<24^n>>>8^a,a=a-b|0,t.b=b=b<<20^b>>>12^e,t.c=e=e-n|0,t.d=n<<16^e>>>16^a,t.a=a-b|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function d(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function h(e,t){var n=new l(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&("object"==typeof r&&d(r,n),o.state=function(){return d(n,{})}),o}o&&o.exports?o.exports=h:n(1199)&&n(1227)?void 0===(r=function(){return h}.call(t,n,t,o))||(o.exports=r):this.tychei=h}(0,e,n(1199))}).call(this,n(133)(e))},1417:function(e,t,n){var r;!function(o,c){var l,d=this,h=256,f=c.pow(h,6),m=c.pow(2,52),y=2*m,mask=255;function x(e,t,n){var r=[],x=k(v((t=1==t?{entropy:!0}:t||{}).entropy?[e,I(o)]:null==e?function(){try{var e;return l&&(e=l.randomBytes)?e=e(h):(e=new Uint8Array(h),(d.crypto||d.msCrypto).getRandomValues(e)),I(e)}catch(e){var t=d.navigator,n=t&&t.plugins;return[+new Date,d,n,d.screen,I(o)]}}():e,3),r),N=new O(r),j=function(){for(var e=N.g(6),t=f,n=0;e<m;)e=(e+n)*h,t*=h,n=N.g(1);for(;e>=y;)e/=2,t/=2,n>>>=1;return(e+n)/t};return j.int32=function(){return 0|N.g(4)},j.quick=function(){return N.g(4)/4294967296},j.double=j,k(I(N.S),o),(t.pass||n||function(e,t,n,r){return r&&(r.S&&w(r,N),e.state=function(){return w(N,{})}),n?(c.random=e,t):e})(j,x,"global"in t?t.global:this==c,t.state)}function O(e){var t,n=e.length,r=this,i=0,o=r.i=r.j=0,s=r.S=[];for(n||(e=[n++]);i<h;)s[i]=i++;for(i=0;i<h;i++)s[i]=s[o=mask&o+e[i%n]+(t=s[i])],s[o]=t;(r.g=function(e){for(var t,n=0,i=r.i,o=r.j,s=r.S;e--;)t=s[i=mask&i+1],n=n*h+s[mask&(s[i]=s[o=mask&o+t])+(s[o]=t)];return r.i=i,r.j=o,n})(h)}function w(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function v(e,t){var n,r=[],o=typeof e;if(t&&"object"==o)for(n in e)try{r.push(v(e[n],t-1))}catch(e){}return r.length?r:"string"==o?e:e+"\0"}function k(e,t){for(var n,r=e+"",o=0;o<r.length;)t[mask&o]=mask&(n^=19*t[mask&o])+r.charCodeAt(o++);return I(t)}function I(a){return String.fromCharCode.apply(0,a)}if(c.seedrandom=x,k(c.random(),o),e.exports){e.exports=x;try{l=n(1338)}catch(e){}}else void 0===(r=function(){return x}.call(t,n,t,e))||(e.exports=r)}([],Math)},1418:function(e,t,n){"use strict";var r,o;n.d(t,"a",(function(){return r})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(r||(r={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(o||(o={}))},1419:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},1420:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},1421:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}]},1422:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]},1423:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},1424:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},1425:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]},1426:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},1427:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}]},1428:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]},1429:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},1430:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}]},1431:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]},1432:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]},1433:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]},1434:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},1435:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}]},1436:function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return l}));var r=n(1171),o=n(1233),c=n(1437);class l extends o.a{decodeUTF8(){return new d(this)}}class d extends c.a{constructor(e){super(),this.upstream=e,this.impl=new h(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class h extends o.b{constructor(e){if(super(),this.upstream=e,Object(r.Od)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(1377);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const t=await this.upstream.next();let n,text;return!t.done&&(n=t.value,text=Object(r.Od)().get("IS_BROWSER")?this.decoder.decode(n,{stream:!0}):this.decoder.write(e.from(n.buffer)),this.outputQueue.push(text),!0)}}}).call(this,n(1286).Buffer)},1437:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(1233);class o extends r.a{split(e){return new c(this,e)}}class c extends o{constructor(e,t){super(),this.upstream=e,this.impl=new l(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class l extends r.b{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const line of t.slice(0,-1))this.outputQueue.push(line);return this.carryover=t[t.length-1],!0}}}}]);